{"version":3,"sources":["../node_modules/react/jsx-runtime.js","../node_modules/react/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/object-assign/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/react-dom/index.js","../node_modules/mic-recorder-to-mp3/dist/index.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js"],"names":["module","exports","require","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","getOwnPropertySymbols","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","toObject","val","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","join","test3","split","forEach","letter","keys","shouldUseNative","target","source","symbols","to","s","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","filter","sym","getOwnPropertyDescriptor","_objectSpread2","getOwnPropertyDescriptors","defineProperties","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","new_byte$1","count","Int8Array","new_short","Int16Array","new_int$1","Int32Array","new_float$1","Float32Array","new_double$1","Float64Array","new_float_n$1","sz","A","new_int_n$1","new_short_n","new_array_n$1","Arrays$1","a","fromIndex","toIndex","System$1","src","srcPos","dest","destPos","srcEnd","Util$1","ShortBlock$1","ordinal","SQRT2","FAST_LOG10","x","Math","log10","FAST_LOG10_X","y","short_block_allowed","short_block_coupled","short_block_dispensed","short_block_forced","Float$1","VbrMode$1","MAX_VALUE","vbr_off","vbr_mt","vbr_rh","vbr_abr","vbr_mtrh","vbr_default","common","System$6","System","Util$6","Util","Arrays$6","Arrays","new_float$6","new_float","NewMDCT","enwindow","NS","NL","win","tantab_l","Encoder_1","SHORT_TYPE","cx","ca","cs","order","window_subband","x1","x1Pos","u","v","xr","wp","x2","w","t","mdct_short","inout","inoutPos","l","tc0","tc1","tc2","ts0","ts1","ts2","mdct_long","out","outPos","_in","ct","st","tc3","tc4","ts5","ts6","ts7","ts8","ts3","ts4","tc5","tc6","tc7","tc8","mdct_sub48","gfc","w0","w1","wk","wkPos","ch","channels_out","gr","mode_gr","band","gi","l3_side","tt","mdct_enc","mdct_encPos","samp","sb_sample","sampPos","k","type","block_type","band0","band1","mixed_block_flag","amp_filter","fill","work","b","bu","bd","arraycopy","NewMDCT_1","System$7","new_float$7","new_float_n$7","new_float_n","III_psy_xmin","SBMAX_l","SBMAX_s","iii_psy_xmin","j","III_psy_xmin_1","III_psy_ratio","thm","en","III_psy_ratio_1","System$5","VbrMode$5","VbrMode","new_array_n$5","new_array_n","new_float$5","new_float_n$5","new_int$5","new_int","assert$5","assert","Encoder$2","FFTOFFSET","MPG_MD_MS_LR","bs","psy","vbr","qupvt","setModules","_bs","_psy","_qupvt","_vbr","newMDCT","adjust_ATH","gr2_max","max_pow","ATH","useAdjust","loudness_sq","max","aaSensitivityP","adjust","adjustLimit","adj_lim_new","updateStats","bitrate_index","mode_ext","bitrate_stereoMode_Hist","bt","bitrate_blockType_Hist","lame_encode_frame_init","gfp","inbuf","internal_flags","primebuff0","primebuff1","mf_size","BLKSIZE","framesize","lame_encode_mp3_frame","inbuf_l","inbuf_r","mp3buf","mp3bufPos","mp3buf_size","mp3count","masking_LR","masking","masking_MS","pe_use","tot_ener","ms_ener_ratio","pe","pe_MS","padding","slot_lag","frac_SpF","out_samplerate","psymodel","bufp","bufpPos","blocktype","VBR","L3psycho_anal_vbr","L3psycho_anal_ns","mode","MPEGMode","JOINT_STEREO","cod_info","NORM_TYPE","MPG_MD_LR_LR","force_ms","sum_pe_MS","sum_pe_LR","gi0","gi1","analysis","pinfo","ms_ratio","ers","energy","f","nsPsy","pefirbuf","fircoef","iteration_loop","format_bitstream","copy_buffer","bWriteVbrTag","addVbrFrame","pcmdata","set_frame_pinfo","ENCDELAY","POSTDELAY","MDCTDELAY","DECDELAY","SBLIMIT","CBANDS","SBPSY_l","SBPSY_s","PSFB21","PSFB12","HBLKSIZE","BLKSIZE_s","HBLKSIZE_s","START_TYPE","STOP_TYPE","MPG_MD_LR_I","MPG_MD_MS_I","Util$4","new_float$4","FFT","window","window_s","costab","fht","fz","fzPos","k4","fi","tri","s1","c1","k1","k2","k3","kx","f1","f0","f3","f2","c2","s2","g0","g1","g2","g3","rv_tbl","fft_short","x_real","chn","buffer","bufPos","fft_long","jj","init_fft","cos","PI","FFT_1","VbrMode$3","Float$3","Float","ShortBlock$3","ShortBlock","Util$3","Arrays$3","new_float$3","new_float_n$3","new_int$3","assert$3","PsyModel","fft","LOG10","rpelev","rpelev2","rpelev_s","rpelev2_s","DELBARK","VO_SCALE","temporalmask_sustain_sec","NS_PREECHO_ATT0","NS_PREECHO_ATT1","NS_PREECHO_ATT2","NS_MSFIX","NSFIRLEN","LN_TO_LOG10","NON_LINEAR_SCALE_ENERGY","psycho_loudness_approx","loudness_power","eql_w","compute_ffts","fftenergy","fftenergy_s","wsamp_l","wsamp_lPos","wsamp_s","wsamp_sPos","gr_out","r","re","im","totalenergy","energy_save","athaa_loudapprox","loudness_sq_save","ma_max_i1","ma_max_i2","ma_max_m","I1LIMIT","I2LIMIT","MLIMIT","tab","init_mask_add_max_values","pow","table1","table2","table3","mask_add","m1","m2","kk","shortblock","ratio","cb_s","cb_l","table2_","vbrpsy_mask_add","calc_interchannel_masking","sb","sblock","msfix1","mld","mld_l","rmid","min","rside","mld_s","ns_msfix","msfix","athadjust","msfix2","athlower","ath","bm_l","thmLR","thmM","thmS","bm_s","convert_partition2scalefac_s","eb","thr","enn","thmm","bo_s_sb","bo_s","npart_s","b_lim","w_curr","PSY","bo_s_weight","w_next","convert_partition2scalefac_l","bo_l_sb","bo_l","npart_l","bo_l_weight","compute_masking_s","ebb","m","numlines_s","el","s3ind_s","ecb","s3_ss","nb_s1","blocktype_old","nb_s2","block_type_set","uselongblock","blocktype_d","short_blocks","NS_INTERP","regcoef_s","pecalc_s","mr","masking_lower","pe_s","regcoef_l","pecalc_l","pe_l","calc_energy","avg","numlines_l","rnumlines_l","calc_mask_index_l","mask_idx","last_tab_entry","vbrpsy_compute_fft_l","vbrpsy_compute_fft_s","vbrpsy_compute_loudness_approximation_l","masking_ratio","masking_MS_ratio","percep_entropy","percep_MS_entropy","numchn","pcfact","wsamp_L","wsamp_S","eb_l","eb_s","ns_hpfsmpl","mask_idx_l","mask_idx_s","ResvMax","ResvSize","firbuf","firbufPos","sum1","sum2","attackThreshold","en_subshort","en_short","attack_intensity","ns_uselongblock","ns_attacks","last_en_subshort","pf","pfPos","pfe","p","abs","ers_save","attackthre_s","attackthre","lastAttacks","idx","s3ind","eb2","s3_ll","nb_1","nb_2","STEREO","interChRatio","ATHlower","ppe","ppePos","fircoef_","vbrpsy_attack_detection","sub_short_factor","n_chn_out","n_chn_psy","factor","vbrpsy_skip_masking_s","vbrpsy_skip_masking_l","psyvbr_calc_mask_index_s","vbrpsy_compute_masking_s","float","int","dd","dd_n","avg_mask","last","minval_s","vbrpsy_compute_masking_l","ecb_limit","ecb_limit_2","ecb_limit_1","minval_l","vbrpsy_compute_block_type","vbrpsy_apply_block_type","vbrpsy_compute_MS_thresholds","cb_mld","ath_cb","ebM","ebS","thmL","thmR","mld_m","thmMS","s3_func_x","bark","hf_slope","tempy","exp","norm_s3_func_x","h","lim_a","lim_b","sum","s3_func","tempx","temp","sqrt","freq2bark","freq","atan","init_numline","numlines","bo","bm","bval","bval_width","bo_w","sfreq","blksize","scalepos","deltafreq","sbmax","b_frq","sample_freq_frac","partition","ni","j2","bark1","sfb","i1","i2","start","end","floor","f_tmp","bark2","init_s3_values","npart","norm","use_old_s3","s3","numberOfNoneZero","s3_x_norm","stereo_demask","ATHformula_GB","ch01","mld_cb_l","mld_cb_s","new_thmm","psymodel_init","useOldS3","bvl_a","bvl_b","snr_l_a","snr_l_b","snr_s_a","snr_s_b","experimentalZ","ms_ener_ratio_old","scalefac_band","snr","level","ATHformula","log","decay","exp_nspsytune","frame_duration","ATHtype","freq_inc","eql_balance","ATHcurve","PsyModel_1","MPEGMode$1","_ordinal","DUAL_CHANNEL","MONO","NOT_SET","MPEGMode_1","LameGlobalFlags","class_id","num_samples","num_channels","in_samplerate","scale","scale_left","scale_right","decode_only","quality","free_format","findReplayGain","decode_on_the_fly","write_id3tag_automatic","brate","compression_ratio","copyright","original","extension","emphasis","error_protection","strict_ISO","disable_reservoir","quant_comp","quant_comp_short","experimentalY","preset","VBR_q_frac","VBR_q","VBR_mean_bitrate_kbps","VBR_min_bitrate_kbps","VBR_max_bitrate_kbps","VBR_hard_min","lowpassfreq","highpassfreq","lowpasswidth","highpasswidth","maskingadjust","maskingadjust_short","ATHonly","ATHshort","noATH","athaa_type","athaa_sensitivity","useTemporal","tune","tune_value_a","version","encoder_delay","encoder_padding","frameNum","lame_allocated_gfp","LameGlobalFlags_1","L3Side$1","SFBMAX","L3Side_1","new_float$10","new_int$10","GrInfo","l3_enc","scalefac","xrpow_max","part2_3_length","big_values","count1","global_gain","scalefac_compress","table_select","subblock_gain","region0_count","region1_count","preflag","scalefac_scale","count1table_select","part2_length","sfb_lmax","sfb_smin","psy_lmax","sfbmax","psymax","sfbdivide","width","count1bits","sfb_partition_table","slen","max_nonzero_coeff","clone_int","array","clone_float","other","GrInfo_1","new_int$9","IIISideInfo","main_data_begin","private_bits","resvDrain_pre","resvDrain_post","scfsi","IIISideInfo_1","System$11","new_int$11","ScaleFac","arrL","arrS","arr21","arr12","psfb21","psfb12","ScaleFac_1","new_float$12","new_float_n$12","new_int$12","NsPsy","longfact","shortfact","NsPsy_1","VBRSeekInfo","seen","want","pos","size","bag","nVbrNumFrames","nBytesWritten","TotalFrameSize","VBRSeekInfo_1","new_byte$8","new_byte","new_double$8","new_double","new_float$8","new_float_n$8","new_int$8","new_int_n$8","new_int_n","LameInternalFlags$1","MAX_HEADER_LEN","Header","write_timing","ptr","buf","Class_ID","iteration_init_init","fill_buffer_resample_init","mfbuf","MFSIZE","channels_in","resample_ratio","mf_samples_to_encode","VBR_min_bitrate","VBR_max_bitrate","samplerate_index","lowpass1","lowpass2","highpass1","highpass2","noise_shaping","noise_shaping_amp","substep_shaping","noise_shaping_stop","use_best_huffman","full_outer_loop","tag_spec","nMusicCRC","OldValue","CurrentStep","bv_scf","pseudohalf","sfb21_extra","inbuf_old","blackfilt","BPC","itime","sideinfo_len","header","MAX_HEADER_BUF","h_ptr","w_ptr","ancillary_flag","numlines_s_num1","numlines_l_num1","ms_ratio_s_old","ms_ratio_l_old","VBR_seek_table","nogap_total","nogap_current","findPeakSample","PeakSample","RadioGain","AudiophileGain","rgdata","noclipGainChange","noclipScale","hip","in_buffer_nsamples","in_buffer_0","in_buffer_1","MAX_BITS_PER_CHANNEL","MAX_BITS_PER_GRANULE","LameInternalFlags_1","new_float$13","ATH_1","System$15","Arrays$15","GainAnalysis$1","PINK_REF","RMS_PERCENTILE","YULE_ORDER","RMS_WINDOW_TIME_NUMERATOR","MAX_SAMP_FREQ","RMS_WINDOW_TIME_DENOMINATOR","ABYule","MAX_SAMPLES_PER_WINDOW","ABButter","filterYule","input","inputPos","output","outputPos","nSamples","kernel","filterButter","ResetSampleFrequency","rgData","samplefreq","MAX_ORDER","linprebuf","lstepbuf","loutbuf","rinprebuf","rstepbuf","routbuf","reqindex","INIT_GAIN_ANALYSIS_ERROR","sampleWindow","lsum","rsum","totsamp","ill","INIT_GAIN_ANALYSIS_OK","fsqr","d","analyzeResult","elems","GAIN_NOT_ENOUGH_SAMPLES","upper","ceil","STEPS_per_dB","InitGainAnalysis","linpre","rinpre","lstep","rstep","lout","rout","B","AnalyzeSamples","left_samples","left_samplesPos","right_samples","right_samplesPos","curleft","curleftBase","curright","currightBase","batchsamples","cursamples","cursamplepos","GAIN_ANALYSIS_OK","GAIN_ANALYSIS_ERROR","ival","GetTitleGain","retval","MAX_dB","GainAnalysis_1","new_float$14","new_int$14","ReplayGain","freqindex","first","ReplayGain_1","MeanBits$1","meanBits","bits","MeanBits_1","new_float$16","new_int$16","assert$16","CBRNewIterationLoop","_quantize","quantize","max_bits","l3_xmin","xrpow","targ_bits","mean_bits","mb","rv","ResvFrameBegin","on_pe","ms_convert","reduce_side","masking_lower_db","mask_adjust","mask_adjust_short","init_outer_loop","init_xrpow","calc_xmin","outer_loop","iteration_finish_one","ResvFrameEnd","CBRNewIterationLoop_1","HuffCodeTab","hl","xlen","linmax","table","hlen","Tables$1","ht","t1HB","t1l","t2HB","t2l","t3HB","t3l","t5HB","t5l","t6HB","t6l","t7HB","t7l","t8HB","t8l","t9HB","t9l","t10HB","t10l","t11HB","t11l","t12HB","t12l","t13HB","t13l","t16_5l","t15HB","t15l","t16HB","t16l","t24HB","t24l","t32HB","t32l","t33HB","t33l","largetbl","table23","table56","bitrate_table","samplerate_table","scfsi_band","Tables_1","VbrMode$19","Float$19","Util$19","new_float$19","new_int$19","assert$19","QuantizePVT$1","tak","POW20","Q_MAX2","Q_MAX","pow20","_tk","_rv","IPOW20","ipow20","DBL_EPSILON","PRECALC_SIZE","IXMAX_VAL","NSATHSCALE","LARGE_BITS","nr_of_sfb_block","pretab","sfBandIndex","pow43","adj43","ATHmdct","compute_ath","ATH_l","ATH_psfb21","ATH_s","ATH_psfb12","samp_freq","ATH_f","StartLine","iteration_init","bass","alto","treble","sfb21","huffman_init","cbr","tbits","add_bits","extra_bits","ResvMaxBits","fac","move_bits","athAdjust","athFloor","pxmin","gsfb","pxminPos","ath_over","enable_athaa_fix","rh1","xmin","rh2","en0","xa","xb","e","max_nonzero","BitStream","EQ","tmpATH","calc_noise_core","startline","step","noise","ix","ix01","calc_noise","distort","res","prev_noise","distortPos","l3_xminPos","over","over_noise_db","tot_noise_db","max_noise","scalefacPos","over_SSD","tmp","noise_log","usefullsize","sl","over_count","tot_noise","over_noise","set_pinfo","sfb2","en1","ifqstep","L3Side","xfsf","CalcNoiseResult","bw","LAMEsfb","en_s","xfsf_s","thr_s","LAMEsfb_s","LAMEqss","LAMEmainbits","LAMEsfbits","QuantizePVT_1","System$18","Arrays$18","new_int$18","assert$18","Takehiro$1","Bits","subdv_table","quantize_lines_xrpow_01","istep","xrPos","ixPos","compareval0","quantize_lines_xrpow","remaining","x0","x3","rx0","rx1","rx2","rx3","quantize_xrpow","xp","pi","codInfo","prevNoise","prev_data_use","accumulate","accumulate01","xpPos","iData","iDataPos","acc_iData","acc_iDataPos","acc_xp","acc_xpPos","sfb_count1","ix_max","endPos","max1","max2","count_bit_ESC","t1","t2","linbits","count_bit_noESC","hlen1","count_bit_noESC_from2","count_bit_noESC_from3","sum3","hlen2","hlen3","huf_tbl_noESC","choose_table","choice2","choice","recalc_divide_init","r01_bits","r01_div","r0_tbl","r1_tbl","bigv","r0","a1","r0bits","bi","r0t","r1","a2","r1t","recalc_divide_sub","cod_info2","r2","r2t","noquant_count_bits","best_huffman_divide","count_bits","gain","roundfac","slen1_n","slen2_n","slen1_tab","slen2_tab","scfsi_calc","c","all_scalefactors_not_negative","best_scalefac_store","recalc","scale_bitcount","scale_bitcount_lsf","scale_short","scale_mixed","scale_long","max_slen1","max_slen2","max_range_sfac_tab","table_number","row_in_table","nr_sfb","max_sfac","partition_table","slen1","slen2","slen3","slen4","log2tab","printf","bv_index","scfb_anz","Takehiro_1","System$17","Arrays$17","new_byte$17","new_float_n$17","new_int$17","assert$17","BitStream$1","CRC16_POLYNOMIAL","MAX_LENGTH","ga","mpg","ver","_ga","_mpg","_ver","totbit","bufByteIdx","bufBitIdx","putheader_bits","putbits2","Lame","LAME_MAXMP3BUFFER","putbits_noheaders","drain_into_ancillary","remainingBits","getLameShortVersion","charAt","writeheader","CRC_update","crc","encodeSideInfo2","bitsPerFrame","CRC_writeheader","old","println","huffman_coder_count1","huffbits","Huffmancode","tableindex","cbits","xbits","ext","linbits_x1","linbits_x2","ShortHuffmancodebits","region1Start","LongHuffmancodebits","bigvalues","region2Start","writeMainData","data_bits","tot_bits","sfb_partition","scale_bits","sfbs","TotalBytes","total","compute_flushbits","total_bytes_output","flushbits","remaining_headers","last_ptr","first_ptr","getframebits","bit_rate","byte","flush_bitstream","NEQ","GainAnalysis","add_dummy_byte","bufferPos","mp3data","minimum","updateMusicCRC","pcm_buf","mp3_in","samples_out","hip_decode1_unclipped","init_bit_stream_w","BitStream_1","System$2","VbrMode$2","ShortBlock$2","new_float$2","new_int_n$2","new_short_n$1","assert$2","Lame$1","LAME_MAXALBUMART","V9","V8","V7","V6","V5","V4","V3","V2","V1","V0","R3MIX","STANDARD","EXTREME","INSANE","STANDARD_FAST","EXTREME_FAST","MEDIUM","MEDIUM_FAST","qu","id3","mpglib","LowPassHighPass","lowerlimit","BandPass","bitrate","lPass","lowpass","enc","_p","_qu","_id3","_mpglib","LAME_ID","lame_init_old","filter_coef","optimum_samplefreq","input_samplefreq","suggested_samplefreq","SmpFrqIndex","sample_freq","gpf","FindNearestBitrate","bRate","samplerate","BitrateIndex","optimum_bandwidth","lh","freq_map","table_index","nearestBitrateFullIndex","lame_init_params_ppflt","lowpass_band","highpass_band","minband","maxband","fc1","fc2","lame_init_qval","lame_init_bitstream","id3tag_write_v2","InitVbrTag","update_inbuffer_size","nsamples","calcNeeded","mf_needed","lame_encode_buffer_sample","buffer_l","buffer_r","ret","mp3out","mp3size","in_buffer","in_bufferPos","in_buffer_ptr","n_in","n_out","inOut","InOut","fill_buffer","buf_size","lame_encode_frame","NumUsed","num_used","gcd","blackman","fcn","wcn","bkwn","sin","fill_buffer_resample","outbuf","outbufPos","desired_len","bpc","intratio","filter_l","BLACKSIZE","offset","time0","joff","xvalue","n_shift","io","numUsed","lame_init","full_bitrate_table","lower_range","lower_range_kbps","upper_range","upper_range_kbps","lame_init_params","map2MP3Frequency","linear_int","hip_decode_exit","hip_decode_init","cmp","apply_preset","LAME_DEFAULT_QUALITY","VBRNewIterationLoop","VBROldIterationLoop","vbrmode","ABRIterationLoop","NSATTACKTHRE","NSATTACKTHRE_S","lame_encode_flush","mp3buffer","mp3bufferPos","mp3buffer_size","mp3buffer_size_remaining","end_padding","frames_left","imp3","samples_to_encode","bunch","frame_num","lame_encode_buffer","id3tag_write_v1","Lame_1","VbrMode$20","Presets$1","VBRPresets","qual","comp","compS","shThreshold","shThresholdS","adj","adjShort","lower","curve","sens","inter","joint","mod","fix","vbr_q","quant_comp_s","expY","st_lrm","st_s","masking_adj","masking_adj_short","ath_lower","ath_curve","ath_sensitivity","interch","safejoint","sfb21mod","ABRPresets","kbps","sc","mask","interCh","sfScale","nsmsfix","nsbass","sfscale","lame","_lame","vbr_old_switch_map","vbr_psy_switch_map","apply_vbr_preset","enforce","vbr_preset","q","set","lame_set_VBR_q","abr_switch_map","apply_abr_preset","actual_bitrate","Presets_1","VBRQuantize","VBRQuantize_1","CalcNoiseResult$1","CalcNoiseResult_1","new_float$22","new_int$22","CalcNoiseData","CalcNoiseData_1","System$21","VbrMode$21","Util$21","Arrays$21","new_float$21","assert$21","Quantize$1","tk","init_xrpow_core","psfb21_analogsilence","stop","ath21","block","ath12","BinSearchDirection","bin_search_StepSize","desired_rate","nBits","flagGoneOver","Direction","BINSEARCH_NONE","BINSEARCH_DOWN","BINSEARCH_UP","loop_break","penalties","get_klemm_noise","klemm_noise","quant_compare","best","calc","better","amp_scalefac_bands","bRefine","ifqstep34","trigger","inc_scalefac_scale","inc_subblock_gain","amp","balance_noise","status","ixwork","trancate_smallspectrums","allowedNoise","trancateThreshold","nsame","sort","cod_info_w","save_xrpow","best_noise_info","best_part2_3_length","bEndOfSearch","best_ggain_pass1","age","search_limit","noise_info","maxggain","huff_bits","ResvAdjust","VBR_encode_granule","min_bits","dbits","bst_cod_info","bst_xrpow","Max_bits","real_bits","this_bits","found","LameInternalFlags","get_framebits","frameBits","MeanBits","VBR_old_prepare","bands","analog_silence","mxb","bitpressure_strategy","VBR_new_prepare","maximum_framebits","calc_target_bits","analog_silence_bits","max_frame_bits","res_factor","totbits","Quantize_1","assert$23","Reservoir$1","maxmp3buf","frameLength","resvLimit","fullFrameBits","resvsize","over_bits","stuffingBits","mdb_bytes","Reservoir_1","Version","LAME_URL","LAME_MAJOR_VERSION","LAME_MINOR_VERSION","LAME_PATCH_VERSION","PSY_MAJOR_VERSION","PSY_MINOR_VERSION","getLameVersion","getLameVeryShortVersion","getPsyVersion","getLameUrl","getLameOsBitness","Version_1","System$22","VbrMode$22","ShortBlock$22","Arrays$22","new_byte$22","assert$24","VBRTag","_v","FRAMES_FLAG","BYTES_FLAG","TOC_FLAG","VBR_SCALE_FLAG","NUMTOCENTRIES","MAXFRAMESIZE","LAMEHEADERSIZE","XING_BITRATE1","XING_BITRATE2","XING_BITRATE25","ISO_8859_1","VBRTag0","VBRTag1","crc16Lookup","addVbr","xingSeekTable","indx","seek_point","extractInteger","createInteger","createShort","isVbrTag","equals","shiftInBitsValue","setLameTagFrameHeader","bbyte","abyte","crcUpdateLookup","putLameVBR","musicLength","streamBuffer","streamBufferPos","revMethod","abrBitrate","bytesWritten","encDelay","encPadding","revision","vbrTypeTranslator","peakSignalAmplitude","radioReplayGain","audiophileReplayGain","noiseShaping","stereoMode","nonOptimal","sourceFreq","misc","musicCRC","expNPsyTune","safeJoint","noGapMore","noGapPrevious","noGapCount","noGapCurr","athType","flags","skipId3v2","fpStream","seek","id3v2Header","readFully","startsWith","Tables","getVbrTag","pTagData","VBRTagData","hId","hSrIndex","hMode","hBitrate","samprate","head_flags","frames","bytes","toc","vbrScale","headersize","kbps_header","totalFrameSize","headerSize","getLameTagFrame","streamIndex","streamSize","putVbrTag","stream","id3v2TagSize","write","VBRTag_1","GetAudio","parse2","mpg2","Parse","ver2","id32","pre2","MPGLib","ID3Tag","_bits","Mp3Encoder","channels","gaud","Presets","QuantizePVT","Quantize","Reservoir","Takehiro","parse","retcode","maxSamples","encodeBuffer","left","right","_sz","subarray","flush","WavHeader","dataOffset","dataLen","sampleRate","fourccToInt","fourcc","charCodeAt","RIFF","WAVE","fmt_","data","readHeader","dataView","getUint32","fmtLen","getUint16","Mp3Encoder_1","classCallCheck","instance","Constructor","createClass","props","descriptor","protoProps","staticProps","Encoder","config","bitRate","mp3Encoder","samplesMono","clearBuffer","dataBuffer","arrayBuffer","floatTo16BitPCM","convertBuffer","appendToBuffer","MicRecorder","startRecordingAt","deviceId","activeStream","context","microphone","processor","startTime","_this","timerToStart","setTimeout","createMediaStreamSource","createScriptProcessor","onaudioprocess","event","lameEncoder","encode","inputBuffer","getChannelData","connect","destination","disconnect","state","close","getAudioTracks","track","_this2","AudioContext","webkitAudioContext","audio","exact","navigator","mediaDevices","getUserMedia","addMicrophoneListener","catch","_this3","finalBuffer","finish","Error","Blob","factory","Fragment","StrictMode","Profiler","Suspense","for","z","encodeURIComponent","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","C","refs","updater","D","E","isReactComponent","setState","forceUpdate","F","isPureReactComponent","G","current","H","I","ref","__self","__source","J","g","children","defaultProps","$$typeof","_owner","L","M","N","replace","escape","O","K","P","Q","_status","_result","default","R","S","T","ReactCurrentDispatcher","ReactCurrentBatchConfig","transition","ReactCurrentOwner","IsSomeRendererActing","Children","toArray","only","Component","PureComponent","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createElement","createFactory","bind","createRef","forwardRef","render","isValidElement","lazy","_payload","_init","memo","compare","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","aa","ba","Set","da","ea","add","fa","document","ha","ia","ja","ka","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","toLowerCase","oa","pa","toUpperCase","qa","ma","isNaN","na","la","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ra","sa","ta","ua","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ma","Ka","La","Na","stack","trim","match","Oa","Pa","prepareStackTrace","Reflect","construct","displayName","Qa","tag","_render","Ra","Sa","Ta","nodeName","Va","_valueTracker","get","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","$a","ab","bb","cb","ownerDocument","db","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","kb","lb","nb","ob","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","pb","lastChild","nodeType","nodeValue","qb","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","rb","tb","style","indexOf","setProperty","substring","ub","menuitem","area","base","br","col","embed","hr","img","keygen","link","meta","param","wbr","vb","wb","is","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Ob","Pb","Qb","addEventListener","removeEventListener","Rb","onError","Sb","Tb","Ub","Vb","Wb","Xb","Zb","alternate","return","$b","memoizedState","dehydrated","ac","cc","child","sibling","bc","dc","ec","fc","gc","hc","ic","jc","kc","lc","mc","nc","Map","oc","pc","qc","rc","blockedOn","domEventName","eventSystemFlags","nativeEvent","targetContainers","delete","pointerId","tc","vc","wc","lanePriority","unstable_runWithPriority","priority","hydrate","containerInfo","xc","yc","shift","zc","Ac","Bc","unstable_scheduleCallback","unstable_NormalPriority","Cc","Dc","Ec","animationend","animationiteration","animationstart","transitionend","Fc","Gc","Hc","animation","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","unstable_now","Rc","Uc","pendingLanes","expiredLanes","suspendedLanes","pingedLanes","Vc","entangledLanes","entanglements","Wc","Xc","Yc","Zc","$c","eventTimes","clz32","cd","LN2","unstable_UserBlockingPriority","ed","fd","gd","hd","id","uc","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","code","location","repeat","locale","which","Rd","Td","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","me","ne","oe","listeners","qe","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","Le","node","nextSibling","Me","contains","compareDocumentPosition","Ne","HTMLIFrameElement","contentWindow","href","Oe","contentEditable","Pe","Qe","Re","Se","Te","Ue","selectionStart","selectionEnd","anchorNode","defaultView","getSelection","anchorOffset","focusNode","focusOffset","Ve","We","Xe","Ye","concat","Ze","Yb","listener","$e","has","af","bf","random","cf","df","capture","passive","Nb","ef","ff","parentWindow","gf","hf","je","char","ke","unshift","jf","kf","lf","mf","autoFocus","nf","__html","of","clearTimeout","qf","rf","sf","previousSibling","tf","vf","wf","xf","yf","zf","Af","Bf","Cf","Df","Ef","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Ff","childContextTypes","Gf","Hf","If","getChildContext","Jf","__reactInternalMemoizedMergedChildContext","Kf","Lf","Mf","Nf","Of","Pf","unstable_cancelCallback","Qf","unstable_shouldYield","Rf","unstable_requestPaint","Sf","Tf","unstable_getCurrentPriorityLevel","Uf","unstable_ImmediatePriority","Vf","Wf","Xf","unstable_LowPriority","Yf","unstable_IdlePriority","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","childLanes","tg","dependencies","firstContext","lanes","ug","vg","observedBits","responders","wg","xg","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","yg","zg","eventTime","lane","payload","callback","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Kg","_reactInternals","Hg","Ig","Jg","Lg","shouldComponentUpdate","Mg","contextType","Ng","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Og","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Pg","Qg","_stringRef","Rg","Sg","lastEffect","nextEffect","firstEffect","index","Tg","Ug","elementType","Vg","implementation","Wg","Xg","Yg","Zg","$g","ah","bh","dh","eh","documentElement","tagName","fh","gh","hh","ih","memoizedProps","revealOrder","jh","kh","mh","nh","oh","pendingProps","ph","qh","rh","sh","th","uh","_workInProgressVersionPrimary","vh","wh","xh","yh","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","baseQueue","queue","Ih","Jh","Kh","lastRenderedReducer","action","eagerReducer","eagerState","lastRenderedState","dispatch","Lh","Mh","_getVersion","_source","mutableReadLanes","Nh","U","getSnapshot","subscribe","setSnapshot","Oh","Ph","Qh","Rh","create","destroy","deps","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","ai","ci","di","readContext","useDeferredValue","useTransition","useMutableSource","useOpaqueIdentifier","unstable_isNewReconciler","uf","ei","hi","ii","ji","ki","li","mi","baseLanes","oi","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","qi","getDerivedStateFromError","ri","pendingContext","Bi","Di","Ei","si","retryLane","ti","fallback","unstable_avoidThisFallback","ui","unstable_expectedLoadTime","vi","wi","xi","yi","zi","isBackwards","rendering","renderingStartTime","tail","tailMode","Ai","Fi","Gi","wasMultiple","multiple","onClick","onclick","createElementNS","createTextNode","V","Hi","Ii","W","Ji","Ki","Li","Mi","message","Ni","Oi","WeakMap","Pi","element","Qi","Ri","Si","componentDidCatch","Ti","componentStack","Ui","WeakSet","Vi","Wi","Xi","__reactInternalSnapshotBeforeUpdate","Yi","Zi","$i","focus","aj","display","bj","onCommitFiberUnmount","componentWillUnmount","cj","dj","ej","fj","gj","hj","insertBefore","_reactRootContainer","ij","kj","lj","mj","nj","oj","pj","X","Y","qj","rj","sj","tj","uj","vj","Infinity","wj","ck","Z","xj","yj","zj","Aj","Bj","Cj","Dj","Ej","Fj","Gj","Hj","Ij","Jj","Sc","Kj","Lj","Mj","callbackNode","expirationTimes","callbackPriority","Tc","Nj","Oj","Pj","Qj","Rj","Sj","Tj","finishedWork","finishedLanes","Uj","timeoutHandle","Wj","Xj","pingCache","Yj","Zj","va","ak","bk","dk","rangeCount","focusedElem","selectionRange","ek","extend","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","top","scrollTop","onCommitFiberRoot","fk","gk","ik","pendingChildren","jk","mutableSourceEagerHydrationData","lk","mk","nk","ok","qk","hydrationOptions","mutableSources","_internalRoot","rk","hasAttribute","sk","uk","hk","unstable_observedBits","unmount","querySelectorAll","JSON","stringify","form","Vj","vk","Events","findFiberByHostInstance","bundleType","rendererPackageName","xk","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","yk","isDisabled","supportsFiber","inject","createPortal","findDOMNode","flushSync","unmountComponentAtNode","unstable_batchedUpdates","unstable_createPortal","unstable_renderSubtreeIntoContainer","performance","MessageChannel","unstable_forceFrameRate","cancelAnimationFrame","requestAnimationFrame","port2","port1","onmessage","postMessage","pop","sortIndex","expirationTime","priorityLevel","unstable_Profiling","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","delay","unstable_wrapCallback","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","GenStateSuspendedStart","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","reverse","skipTempReset","prev","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","jsx","jsxs"],"mappings":"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,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,oBACA,mBACA,mBACA,kBAAuB,mBAEvB,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,iBACA,kBAAuB,mBAEvB,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBAEA,mBACA,mBACA,oBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBAAuB,mBAEvB,kBACA,iBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,oBACA,oBACA,oBACA,iBACA,mBACA,kBAAuB,kBAEvB,kBACA,kBACA,oBACA,kBACA,kBACA,mBACA,kBACA,mBACA,oBACA,iBACA,kBACA,mBACA,oBACA,oBACA,mBACA,kBACA,kBAAuB,kBAEvB,kBACA,kBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,kBACA,iBAAuB,mBAEvB,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,kBACA,mBAAuB,mBAEvB,iBACA,kBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,oBACA,oBACA,oBACA,kBACA,mBAAuB,kBAEvB,WAAgBP,EAAOvB,MAAQ,GAAM,QACrC,WAAgBuB,EAAOvB,MAAQ,GAAM,QACrC,WAAeuB,EAAOvB,MAAQ,GAAM,QACpC,WAAeuB,EAAOvB,MAAQ,GAAM,QACpC,UAAcuB,EAAOvB,MAAQ,GAAM,QACnC,UAAcuB,EAAOvB,MAAQ,GAAM,QACnC,UAAcuB,EAAOvB,MAAQ,GAAM,QACnC,SAAauB,EAAOvB,MAAQ,GAAM,QAElC,mBAA2B,mBAC3B,kBAAyB,mBACzB,mBAA0B,mBAC1B,mBAGE+B,EAAK,GACLC,EAAK,GAELC,EAAM,CACN,CACC,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBAEA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBAEF,CACC,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBAED,EACA,EACA,EACA,EACA,EACA,GACC,sBACA,sBACA,sBAEF,CACC,kBACA,iBACA,kBAEA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBAEA,iBACA,kBACA,kBACA,mBACC,mBACA,kBACD,k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GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEA,KAAgB,CACZ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEA,OAAkB,CACd,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEA,KAAgB,CACZ,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEA,KAAgB,CACZ,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACzD,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,EAAG,EAAG,EAAG,EAA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","file":"static/js/2.ec90b980.chunk.js","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","module.exports = require(\"regenerator-runtime\");\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.MicRecorder = factory());\n}(this, (function () {\n\nfunction new_byte$1(count) {\n    return new Int8Array(count);\n}\n\nfunction new_short(count) {\n    return new Int16Array(count);\n}\n\nfunction new_int$1(count) {\n    return new Int32Array(count);\n}\n\nfunction new_float$1(count) {\n    return new Float32Array(count);\n}\n\nfunction new_double$1(count) {\n    return new Float64Array(count);\n}\n\nfunction new_float_n$1(args) {\n    if (args.length == 1) {\n        return new_float$1(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_float_n$1(args));\n    }\n    return A;\n}\nfunction new_int_n$1(args) {\n    if (args.length == 1) {\n        return new_int$1(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_int_n$1(args));\n    }\n    return A;\n}\n\nfunction new_short_n(args) {\n    if (args.length == 1) {\n        return new_short(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_short_n(args));\n    }\n    return A;\n}\n\nfunction new_array_n$1(args) {\n    if (args.length == 1) {\n        return new Array(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_array_n$1(args));\n    }\n    return A;\n}\n\n\nvar Arrays$1 = {};\n\nArrays$1.fill = function (a, fromIndex, toIndex, val) {\n    if (arguments.length == 2) {\n        for (var i = 0; i < a.length; i++) {\n            a[i] = arguments[1];\n        }\n    } else {\n        for (var i = fromIndex; i < toIndex; i++) {\n            a[i] = val;\n        }\n    }\n};\n\nvar System$1 = {};\n\nSystem$1.arraycopy = function (src, srcPos, dest, destPos, length) {\n    var srcEnd = srcPos + length;\n    while (srcPos < srcEnd)\n        dest[destPos++] = src[srcPos++];\n};\n\n\nvar Util$1 = {};\nUtil$1.SQRT2 = 1.41421356237309504880;\nUtil$1.FAST_LOG10 = function (x) {\n    return Math.log10(x);\n};\n\nUtil$1.FAST_LOG10_X = function (x, y) {\n    return Math.log10(x) * y;\n};\n\nfunction ShortBlock$1(ordinal) {\n    this.ordinal = ordinal;\n}\n/**\n * LAME may use them, even different block types for L/R.\n */\nShortBlock$1.short_block_allowed = new ShortBlock$1(0);\n/**\n * LAME may use them, but always same block types in L/R.\n */\nShortBlock$1.short_block_coupled = new ShortBlock$1(1);\n/**\n * LAME will not use short blocks, long blocks only.\n */\nShortBlock$1.short_block_dispensed = new ShortBlock$1(2);\n/**\n * LAME will not use long blocks, short blocks only.\n */\nShortBlock$1.short_block_forced = new ShortBlock$1(3);\n\nvar Float$1 = {};\nFloat$1.MAX_VALUE = 3.4028235e+38;\n\nfunction VbrMode$1(ordinal) {\n    this.ordinal = ordinal;\n}\nVbrMode$1.vbr_off = new VbrMode$1(0);\nVbrMode$1.vbr_mt = new VbrMode$1(1);\nVbrMode$1.vbr_rh = new VbrMode$1(2);\nVbrMode$1.vbr_abr = new VbrMode$1(3);\nVbrMode$1.vbr_mtrh = new VbrMode$1(4);\nVbrMode$1.vbr_default = VbrMode$1.vbr_mtrh;\n\nvar assert$1 = function (x) {\n    //console.assert(x);\n};\n\nvar common = {\n    \"System\": System$1,\n    \"VbrMode\": VbrMode$1,\n    \"Float\": Float$1,\n    \"ShortBlock\": ShortBlock$1,\n    \"Util\": Util$1,\n    \"Arrays\": Arrays$1,\n    \"new_array_n\": new_array_n$1,\n    \"new_byte\": new_byte$1,\n    \"new_double\": new_double$1,\n    \"new_float\": new_float$1,\n    \"new_float_n\": new_float_n$1,\n    \"new_int\": new_int$1,\n    \"new_int_n\": new_int_n$1,\n    \"new_short\": new_short,\n    \"new_short_n\": new_short_n,\n    \"assert\": assert$1\n};\n\n/*\n *      MP3 window subband -> subband filtering -> mdct routine\n *\n *      Copyright (c) 1999-2000 Takehiro Tominaga\n *\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Library General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n/*\n *         Special Thanks to Patrick De Smet for your advices.\n */\n\n/* $Id: NewMDCT.java,v 1.11 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\n\nvar System$6 = common.System;\nvar Util$6 = common.Util;\nvar Arrays$6 = common.Arrays;\nvar new_float$6 = common.new_float;\nfunction NewMDCT() {\n\n\tvar enwindow = [\n\t\t\t-4.77e-07 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.03951e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.53674e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.841473e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.5758972e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.401756e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.83715e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.740951125354959 / 2.384e-06, /* 15 */\n\t\t\t1.2398e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.91212e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.283096e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.6994476e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.8756866e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.630711e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.47478e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.4782e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.063471690191471e-01, 1.960342806591213e-01,\n\n\t\t\t-4.77e-07 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.05858e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.30786e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.521515e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.5694122e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.643036e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.91821e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.6321e-05 * 0.773010453362737 / 2.384e-06, /* 14 */\n\t\t\t1.1444e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.65462e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.110004e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.6112804e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.9634247e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.803326e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.77042e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.6689e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t8.206787908286602e-01, 3.901806440322567e-01,\n\n\t\t\t-4.77e-07 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.07288e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.02653e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t2.174854e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.5586357e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.858566e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.95159e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.3460e-05 * 0.803207531480645 / 2.384e-06, /* 13 */\n\t\t\t1.0014e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.40190e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.937389e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.5233517e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.0506859e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.974033e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t-3.07560e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t-1.8120e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t7.416505462720353e-01, 5.805693545089249e-01,\n\n\t\t\t-4.77e-07 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t8.68797e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.800537e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t3.5435200e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t4.049301e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.94205e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.0599e-05 * 0.831469612302545 / 2.384e-06, /* 12 */\n\t\t\t9.060e-06 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.16348e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.766682e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.4358521e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-2.1372318e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.14188e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.39031e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t-1.9550e-05 * 0.831469612302545 / 2.384e-06,\n\t\t\t6.681786379192989e-01, 7.653668647301797e-01,\n\n\t\t\t-4.77e-07 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.29220e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.399517e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t3.5242081e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t4.215240e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.89437e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.7261e-05 * 0.857728610000272 / 2.384e-06, /* 11 */\n\t\t\t8.106e-06 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.3937e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.597881e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.3489246e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.2228718e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.306866e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.71456e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.1458e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t5.993769336819237e-01, 9.427934736519954e-01,\n\n\t\t\t-4.77e-07 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.8392e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.71317e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t3.5007000e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t4.357815e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.80854e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t8.3923e-05 * 0.881921264348355 / 2.384e-06, /* 10 */\n\t\t\t7.629e-06 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.2956e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.432419e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.2627602e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3074150e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-3.467083e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t-4.04358e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3365e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t5.345111359507916e-01, 1.111140466039205e+00,\n\n\t\t\t-9.54e-07 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t7.31945e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.15938e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t3.4730434e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.477024e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t9.68933e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t8.0585e-05 * 0.903989293123443 / 2.384e-06, /* 9 */\n\t\t\t6.676e-06 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.269817e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.1775017e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.3907185e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-3.622532e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t-4.38213e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.5272e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.729647758913199e-01, 1.268786568327291e+00,\n\n\t\t\t-9.54e-07 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.06812e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.74248e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.3379e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4412861e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.573822e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t9.54151e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t7.6771e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.199e-06 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4332e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.111031e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.0933399e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.4725437e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-3.771782e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-4.72546e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.7657e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.1421356237309504879e-01, /* tan(PI/8) */\n\t\t\t1.414213562373095e+00,\n\n\t\t\t-9.54e-07 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.05381e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t6.10352e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-4.75883e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.4055710e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t4.649162e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.35555e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t7.3433e-05 * 0.941544065183021 / 2.384e-06, /* 7 */\n\t\t\t5.245e-06 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.7166e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.56535e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.0103703e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-2.5527000e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.914356e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t-5.07355e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.0041e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.578057213145241e-01, 1.546020906725474e+00,\n\n\t\t\t-9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t1.02520e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t5.39303e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-1.011848e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.3659935e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t4.703045e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.15051e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t7.0095e-05 * 0.956940335732209 / 2.384e-06, /* 6 */\n\t\t\t4.768e-06 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t8.06808e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.287834e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-2.6310921e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t-4.048824e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-5.42164e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-3.2425e-05 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.033466836073424e-01, 1.662939224605090e+00,\n\n\t\t\t-1.431e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.62532e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.573563e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t3.3225536e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.737377e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.91685e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.6280e-05 * 0.970031253194544 / 2.384e-06, /* 5 */\n\t\t\t4.292e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.3828e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.61850e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.487225e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-2.7073860e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t-4.174709e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-5.76973e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-3.4809e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t2.504869601913055e-01, 1.763842528696710e+00,\n\n\t\t\t-1.431e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t9.5367e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.78609e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.161503e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.2754898e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t4.752159e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t8.66413e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t6.2943e-05 * 0.98078528040323 / 2.384e-06, /* 4 */\n\t\t\t3.815e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.718e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t5.22137e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t7.703304e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.7815342e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t-4.290581e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-6.11782e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-3.7670e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t1.989123673796580e-01, 1.847759065022573e+00,\n\n\t\t\t-1.907e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t9.0122e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t2.88486e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.774239e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.2248020e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t4.748821e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t8.38757e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t5.9605e-05 * 0.989176509964781 / 2.384e-06, /* 3 */\n\t\t\t3.338e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t-3.9577e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.88145e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t6.937027e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.8532982e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.395962e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-6.46591e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.0531e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t1.483359875383474e-01, 1.913880671464418e+00,\n\n\t\t\t-1.907e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.4400e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t1.91689e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-3.411293e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.1706810e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t4.728317e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.09669e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t5.579e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.338e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t-5.0545e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t2.59876e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t6.189346e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-2.9224873e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.489899e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-6.80923e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.3392e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t9.849140335716425e-02, 1.961570560806461e+00,\n\n\t\t\t-2.384e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.7724e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t8.8215e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.072189e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t3.1132698e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.691124e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.79152e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t2.861e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t-6.0558e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t1.37329e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.462170e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-2.9890060e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.570484e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-7.14302e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.6253e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.912684976946725e-02, 1.990369453344394e+00,\n\n\t\t\t3.5780907e-02 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.7876148e-02 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t3.134727e-03 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.457142e-03 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t9.71317e-04 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.18868e-04 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.01566e-04 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.3828e-05 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\n\t\t\t3.0526638e-02 / 2.384e-06, 4.638195e-03 / 2.384e-06,\n\t\t\t7.47204e-04 / 2.384e-06, 4.9591e-05 / 2.384e-06,\n\t\t\t4.756451e-03 / 2.384e-06, 2.1458e-05 / 2.384e-06,\n\t\t\t-6.9618e-05 / 2.384e-06, /* 2.384e-06/2.384e-06 */\n\t];\n\n\tvar NS = 12;\n\tvar NL = 36;\n\n\tvar win = [\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049690e-13,\n\t     6.423305872147839e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943412e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758252e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558783e-12,\n\t     8.371015190102974e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.456116108943412e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758252e-12,\n\t     -2.858043359288076e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558783e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347923e-13,\n\t     -6.423305872147843e-13,\n\t     -9.400849094049696e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049694e-13,\n\t     -6.423305872147840e-13,\n\t     -2.382191739347918e-13,\n\t     ],\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049688e-13,\n\t     6.423305872147841e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943413e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758253e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558782e-12,\n\t     8.371015190102975e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.461314069809755e-12,\n\t     -4.921085770524055e-12,\n\t     -4.343405037091838e-12,\n\t     -3.732668368707687e-12,\n\t     -3.093523840190885e-12,\n\t     -2.430835727329465e-12,\n\t     -1.734679010007751e-12,\n\t     -9.748253656609281e-13,\n\t     -2.797435120168326e-13,\n\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     -2.283748241799531e-13,\n\t     -4.037858874020686e-13,\n\t     -2.146547464825323e-13,\n\t     ],\n\t    [\n\t     1.316524975873958e-01, /* win[SHORT_TYPE] */\n\t     4.142135623730950e-01,\n\t     7.673269879789602e-01,\n\n\t     1.091308501069271e+00, /* tantab_l */\n\t     1.303225372841206e+00,\n\t     1.569685577117490e+00,\n\t     1.920982126971166e+00,\n\t     2.414213562373094e+00,\n\t     3.171594802363212e+00,\n\t     4.510708503662055e+00,\n\t     7.595754112725146e+00,\n\t     2.290376554843115e+01,\n\n\t     0.98480775301220802032, /* cx */\n\t     0.64278760968653936292,\n\t     0.34202014332566882393,\n\t     0.93969262078590842791,\n\t     -0.17364817766693030343,\n\t     -0.76604444311897790243,\n\t     0.86602540378443870761,\n\t     0.500000000000000e+00,\n\n\t     -5.144957554275265e-01, /* ca */\n\t     -4.717319685649723e-01,\n\t     -3.133774542039019e-01,\n\t     -1.819131996109812e-01,\n\t     -9.457419252642064e-02,\n\t     -4.096558288530405e-02,\n\t     -1.419856857247115e-02,\n\t     -3.699974673760037e-03,\n\n\t     8.574929257125442e-01, /* cs */\n\t     8.817419973177052e-01,\n\t     9.496286491027329e-01,\n\t     9.833145924917901e-01,\n\t     9.955178160675857e-01,\n\t     9.991605581781475e-01,\n\t     9.998991952444470e-01,\n\t     9.999931550702802e-01,\n\t     ],\n\t    [\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     2.283748241799531e-13,\n\t     4.037858874020686e-13,\n\t     2.146547464825323e-13,\n\n\t     5.461314069809755e-12,\n\t     4.921085770524055e-12,\n\t     4.343405037091838e-12,\n\t     3.732668368707687e-12,\n\t     3.093523840190885e-12,\n\t     2.430835727329466e-12,\n\t     1.734679010007751e-12,\n\t     9.748253656609281e-13,\n\t     2.797435120168326e-13,\n\n\t     -5.456116108943413e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758253e-12,\n\t     -2.858043359288075e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558782e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347913e-13,\n\t     -6.423305872147834e-13,\n\t     -9.400849094049688e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049688e-13,\n\t     -6.423305872147841e-13,\n\t     -2.382191739347918e-13,\n\t     ]\n\t];\n\n\tvar tantab_l = win[Encoder_1.SHORT_TYPE];\n\tvar cx = win[Encoder_1.SHORT_TYPE];\n\tvar ca = win[Encoder_1.SHORT_TYPE];\n\tvar cs = win[Encoder_1.SHORT_TYPE];\n\n\t/**\n\t * new IDCT routine written by Takehiro TOMINAGA\n\t *\n\t * PURPOSE: Overlapping window on PCM samples<BR>\n\t *\n\t * SEMANTICS:<BR>\n\t * 32 16-bit pcm samples are scaled to fractional 2's complement and\n\t * concatenated to the end of the window buffer #x#. The updated window\n\t * buffer #x# is then windowed by the analysis window #c# to produce the\n\t * windowed sample #z#\n\t */\n\tvar order = [\n\t    0, 1, 16, 17, 8, 9, 24, 25, 4, 5, 20, 21, 12, 13, 28, 29,\n\t    2, 3, 18, 19, 10, 11, 26, 27, 6, 7, 22, 23, 14, 15, 30, 31\n\t];\n\n\t/**\n\t * returns sum_j=0^31 a[j]*cos(PI*j*(k+1/2)/32), 0<=k<32\n\t */\n\tfunction window_subband(x1, x1Pos, a) {\n\t\tvar wp = 10;\n\n\t\tvar x2 = x1Pos + 238 - 14 - 286;\n\n\t\tfor (var i = -15; i < 0; i++) {\n\t\t\tvar w, s, t;\n\n\t\t\tw = enwindow[wp + -10];\n\t\t\ts = x1[x2 + -224] * w;\n\t\t\tt = x1[x1Pos + 224] * w;\n\t\t\tw = enwindow[wp + -9];\n\t\t\ts += x1[x2 + -160] * w;\n\t\t\tt += x1[x1Pos + 160] * w;\n\t\t\tw = enwindow[wp + -8];\n\t\t\ts += x1[x2 + -96] * w;\n\t\t\tt += x1[x1Pos + 96] * w;\n\t\t\tw = enwindow[wp + -7];\n\t\t\ts += x1[x2 + -32] * w;\n\t\t\tt += x1[x1Pos + 32] * w;\n\t\t\tw = enwindow[wp + -6];\n\t\t\ts += x1[x2 + 32] * w;\n\t\t\tt += x1[x1Pos + -32] * w;\n\t\t\tw = enwindow[wp + -5];\n\t\t\ts += x1[x2 + 96] * w;\n\t\t\tt += x1[x1Pos + -96] * w;\n\t\t\tw = enwindow[wp + -4];\n\t\t\ts += x1[x2 + 160] * w;\n\t\t\tt += x1[x1Pos + -160] * w;\n\t\t\tw = enwindow[wp + -3];\n\t\t\ts += x1[x2 + 224] * w;\n\t\t\tt += x1[x1Pos + -224] * w;\n\n\t\t\tw = enwindow[wp + -2];\n\t\t\ts += x1[x1Pos + -256] * w;\n\t\t\tt -= x1[x2 + 256] * w;\n\t\t\tw = enwindow[wp + -1];\n\t\t\ts += x1[x1Pos + -192] * w;\n\t\t\tt -= x1[x2 + 192] * w;\n\t\t\tw = enwindow[wp + 0];\n\t\t\ts += x1[x1Pos + -128] * w;\n\t\t\tt -= x1[x2 + 128] * w;\n\t\t\tw = enwindow[wp + 1];\n\t\t\ts += x1[x1Pos + -64] * w;\n\t\t\tt -= x1[x2 + 64] * w;\n\t\t\tw = enwindow[wp + 2];\n\t\t\ts += x1[x1Pos + 0] * w;\n\t\t\tt -= x1[x2 + 0] * w;\n\t\t\tw = enwindow[wp + 3];\n\t\t\ts += x1[x1Pos + 64] * w;\n\t\t\tt -= x1[x2 + -64] * w;\n\t\t\tw = enwindow[wp + 4];\n\t\t\ts += x1[x1Pos + 128] * w;\n\t\t\tt -= x1[x2 + -128] * w;\n\t\t\tw = enwindow[wp + 5];\n\t\t\ts += x1[x1Pos + 192] * w;\n\t\t\tt -= x1[x2 + -192] * w;\n\n\t\t\t/*\n\t\t\t * this multiplyer could be removed, but it needs more 256 FLOAT\n\t\t\t * data. thinking about the data cache performance, I think we\n\t\t\t * should not use such a huge table. tt 2000/Oct/25\n\t\t\t */\n\t\t\ts *= enwindow[wp + 6];\n\t\t\tw = t - s;\n\t\t\ta[30 + i * 2] = t + s;\n\t\t\ta[31 + i * 2] = enwindow[wp + 7] * w;\n\t\t\twp += 18;\n\t\t\tx1Pos--;\n\t\t\tx2++;\n\t\t}\n\t\t{\n\t\t\tvar s, t, u, v;\n\t\t\tt = x1[x1Pos + -16] * enwindow[wp + -10];\n\t\t\ts = x1[x1Pos + -32] * enwindow[wp + -2];\n\t\t\tt += (x1[x1Pos + -48] - x1[x1Pos + 16]) * enwindow[wp + -9];\n\t\t\ts += x1[x1Pos + -96] * enwindow[wp + -1];\n\t\t\tt += (x1[x1Pos + -80] + x1[x1Pos + 48]) * enwindow[wp + -8];\n\t\t\ts += x1[x1Pos + -160] * enwindow[wp + 0];\n\t\t\tt += (x1[x1Pos + -112] - x1[x1Pos + 80]) * enwindow[wp + -7];\n\t\t\ts += x1[x1Pos + -224] * enwindow[wp + 1];\n\t\t\tt += (x1[x1Pos + -144] + x1[x1Pos + 112]) * enwindow[wp + -6];\n\t\t\ts -= x1[x1Pos + 32] * enwindow[wp + 2];\n\t\t\tt += (x1[x1Pos + -176] - x1[x1Pos + 144]) * enwindow[wp + -5];\n\t\t\ts -= x1[x1Pos + 96] * enwindow[wp + 3];\n\t\t\tt += (x1[x1Pos + -208] + x1[x1Pos + 176]) * enwindow[wp + -4];\n\t\t\ts -= x1[x1Pos + 160] * enwindow[wp + 4];\n\t\t\tt += (x1[x1Pos + -240] - x1[x1Pos + 208]) * enwindow[wp + -3];\n\t\t\ts -= x1[x1Pos + 224];\n\n\t\t\tu = s - t;\n\t\t\tv = s + t;\n\n\t\t\tt = a[14];\n\t\t\ts = a[15] - t;\n\n\t\t\ta[31] = v + t; /* A0 */\n\t\t\ta[30] = u + s; /* A1 */\n\t\t\ta[15] = u - s; /* A2 */\n\t\t\ta[14] = v - t; /* A3 */\n\t\t}\n\t\t{\n\t\t\tvar xr;\n\t\t\txr = a[28] - a[0];\n\t\t\ta[0] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -2 * 18 + 7];\n\t\t\txr = a[29] - a[1];\n\t\t\ta[1] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -2 * 18 + 7];\n\n\t\t\txr = a[26] - a[2];\n\t\t\ta[2] += a[26];\n\t\t\ta[26] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[27] - a[3];\n\t\t\ta[3] += a[27];\n\t\t\ta[27] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = a[24] - a[4];\n\t\t\ta[4] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -6 * 18 + 7];\n\t\t\txr = a[25] - a[5];\n\t\t\ta[5] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -6 * 18 + 7];\n\n\t\t\txr = a[22] - a[6];\n\t\t\ta[6] += a[22];\n\t\t\ta[22] = xr * Util$6.SQRT2;\n\t\t\txr = a[23] - a[7];\n\t\t\ta[7] += a[23];\n\t\t\ta[23] = xr * Util$6.SQRT2 - a[7];\n\t\t\ta[7] -= a[6];\n\t\t\ta[22] -= a[7];\n\t\t\ta[23] -= a[22];\n\n\t\t\txr = a[6];\n\t\t\ta[6] = a[31] - xr;\n\t\t\ta[31] = a[31] + xr;\n\t\t\txr = a[7];\n\t\t\ta[7] = a[30] - xr;\n\t\t\ta[30] = a[30] + xr;\n\t\t\txr = a[22];\n\t\t\ta[22] = a[15] - xr;\n\t\t\ta[15] = a[15] + xr;\n\t\t\txr = a[23];\n\t\t\ta[23] = a[14] - xr;\n\t\t\ta[14] = a[14] + xr;\n\n\t\t\txr = a[20] - a[8];\n\t\t\ta[8] += a[20];\n\t\t\ta[20] = xr * enwindow[wp + -10 * 18 + 7];\n\t\t\txr = a[21] - a[9];\n\t\t\ta[9] += a[21];\n\t\t\ta[21] = xr * enwindow[wp + -10 * 18 + 7];\n\n\t\t\txr = a[18] - a[10];\n\t\t\ta[10] += a[18];\n\t\t\ta[18] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[19] - a[11];\n\t\t\ta[11] += a[19];\n\t\t\ta[19] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[16] - a[12];\n\t\t\ta[12] += a[16];\n\t\t\ta[16] = xr * enwindow[wp + -14 * 18 + 7];\n\t\t\txr = a[17] - a[13];\n\t\t\ta[13] += a[17];\n\t\t\ta[17] = xr * enwindow[wp + -14 * 18 + 7];\n\n\t\t\txr = -a[20] + a[24];\n\t\t\ta[20] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = -a[21] + a[25];\n\t\t\ta[21] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[4] - a[8];\n\t\t\ta[4] += a[8];\n\t\t\ta[8] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[5] - a[9];\n\t\t\ta[5] += a[9];\n\t\t\ta[9] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[0] - a[12];\n\t\t\ta[0] += a[12];\n\t\t\ta[12] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[1] - a[13];\n\t\t\ta[1] += a[13];\n\t\t\ta[13] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[16] - a[28];\n\t\t\ta[16] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = -a[17] + a[29];\n\t\t\ta[17] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = Util$6.SQRT2 * (a[2] - a[10]);\n\t\t\ta[2] += a[10];\n\t\t\ta[10] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[3] - a[11]);\n\t\t\ta[3] += a[11];\n\t\t\ta[11] = xr;\n\t\t\txr = Util$6.SQRT2 * (-a[18] + a[26]);\n\t\t\ta[18] += a[26];\n\t\t\ta[26] = xr - a[18];\n\t\t\txr = Util$6.SQRT2 * (-a[19] + a[27]);\n\t\t\ta[19] += a[27];\n\t\t\ta[27] = xr - a[19];\n\n\t\t\txr = a[2];\n\t\t\ta[19] -= a[3];\n\t\t\ta[3] -= xr;\n\t\t\ta[2] = a[31] - xr;\n\t\t\ta[31] += xr;\n\t\t\txr = a[3];\n\t\t\ta[11] -= a[19];\n\t\t\ta[18] -= xr;\n\t\t\ta[3] = a[30] - xr;\n\t\t\ta[30] += xr;\n\t\t\txr = a[18];\n\t\t\ta[27] -= a[11];\n\t\t\ta[19] -= xr;\n\t\t\ta[18] = a[15] - xr;\n\t\t\ta[15] += xr;\n\n\t\t\txr = a[19];\n\t\t\ta[10] -= xr;\n\t\t\ta[19] = a[14] - xr;\n\t\t\ta[14] += xr;\n\t\t\txr = a[10];\n\t\t\ta[11] -= xr;\n\t\t\ta[10] = a[23] - xr;\n\t\t\ta[23] += xr;\n\t\t\txr = a[11];\n\t\t\ta[26] -= xr;\n\t\t\ta[11] = a[22] - xr;\n\t\t\ta[22] += xr;\n\t\t\txr = a[26];\n\t\t\ta[27] -= xr;\n\t\t\ta[26] = a[7] - xr;\n\t\t\ta[7] += xr;\n\n\t\t\txr = a[27];\n\t\t\ta[27] = a[6] - xr;\n\t\t\ta[6] += xr;\n\n\t\t\txr = Util$6.SQRT2 * (a[0] - a[4]);\n\t\t\ta[0] += a[4];\n\t\t\ta[4] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[1] - a[5]);\n\t\t\ta[1] += a[5];\n\t\t\ta[5] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[16] - a[20]);\n\t\t\ta[16] += a[20];\n\t\t\ta[20] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[17] - a[21]);\n\t\t\ta[17] += a[21];\n\t\t\ta[21] = xr;\n\n\t\t\txr = -Util$6.SQRT2 * (a[8] - a[12]);\n\t\t\ta[8] += a[12];\n\t\t\ta[12] = xr - a[8];\n\t\t\txr = -Util$6.SQRT2 * (a[9] - a[13]);\n\t\t\ta[9] += a[13];\n\t\t\ta[13] = xr - a[9];\n\t\t\txr = -Util$6.SQRT2 * (a[25] - a[29]);\n\t\t\ta[25] += a[29];\n\t\t\ta[29] = xr - a[25];\n\t\t\txr = -Util$6.SQRT2 * (a[24] + a[28]);\n\t\t\ta[24] -= a[28];\n\t\t\ta[28] = xr - a[24];\n\n\t\t\txr = a[24] - a[16];\n\t\t\ta[24] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\n\t\t\txr = a[25] - a[17];\n\t\t\ta[25] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[17] - a[1];\n\t\t\ta[17] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[1] - a[0];\n\t\t\ta[1] = xr;\n\t\t\txr = a[16] - xr;\n\t\t\ta[16] = xr;\n\t\t\txr = a[17] - xr;\n\t\t\ta[17] = xr;\n\t\t\txr = a[8] - xr;\n\t\t\ta[8] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[24] - xr;\n\t\t\ta[24] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[4] - xr;\n\t\t\ta[4] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[12] - xr;\n\t\t\ta[12] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[0];\n\t\t\ta[0] += a[31];\n\t\t\ta[31] -= xr;\n\t\t\txr = a[1];\n\t\t\ta[1] += a[30];\n\t\t\ta[30] -= xr;\n\t\t\txr = a[16];\n\t\t\ta[16] += a[15];\n\t\t\ta[15] -= xr;\n\t\t\txr = a[17];\n\t\t\ta[17] += a[14];\n\t\t\ta[14] -= xr;\n\t\t\txr = a[8];\n\t\t\ta[8] += a[23];\n\t\t\ta[23] -= xr;\n\t\t\txr = a[9];\n\t\t\ta[9] += a[22];\n\t\t\ta[22] -= xr;\n\t\t\txr = a[24];\n\t\t\ta[24] += a[7];\n\t\t\ta[7] -= xr;\n\t\t\txr = a[25];\n\t\t\ta[25] += a[6];\n\t\t\ta[6] -= xr;\n\t\t\txr = a[4];\n\t\t\ta[4] += a[27];\n\t\t\ta[27] -= xr;\n\t\t\txr = a[5];\n\t\t\ta[5] += a[26];\n\t\t\ta[26] -= xr;\n\t\t\txr = a[20];\n\t\t\ta[20] += a[11];\n\t\t\ta[11] -= xr;\n\t\t\txr = a[21];\n\t\t\ta[21] += a[10];\n\t\t\ta[10] -= xr;\n\t\t\txr = a[12];\n\t\t\ta[12] += a[19];\n\t\t\ta[19] -= xr;\n\t\t\txr = a[13];\n\t\t\ta[13] += a[18];\n\t\t\ta[18] -= xr;\n\t\t\txr = a[28];\n\t\t\ta[28] += a[3];\n\t\t\ta[3] -= xr;\n\t\t\txr = a[29];\n\t\t\ta[29] += a[2];\n\t\t\ta[2] -= xr;\n\t\t}\n\t}\n\n\t/**\n\t * Function: Calculation of the MDCT In the case of long blocks (type 0,1,3)\n\t * there are 36 coefficents in the time domain and 18 in the frequency\n\t * domain.<BR>\n\t * In the case of short blocks (type 2) there are 3 transformations with\n\t * short length. This leads to 12 coefficents in the time and 6 in the\n\t * frequency domain. In this case the results are stored side by side in the\n\t * vector out[].\n\t *\n\t * New layer3\n\t */\n\tfunction mdct_short(inout, inoutPos) {\n\t\tfor (var l = 0; l < 3; l++) {\n\t\t\tvar tc0, tc1, tc2, ts0, ts1, ts2;\n\n\t\t\tts0 = inout[inoutPos + 2 * 3] * win[Encoder_1.SHORT_TYPE][0]\n\t\t\t\t\t- inout[inoutPos + 5 * 3];\n\t\t\ttc0 = inout[inoutPos + 0 * 3] * win[Encoder_1.SHORT_TYPE][2]\n\t\t\t\t\t- inout[inoutPos + 3 * 3];\n\t\t\ttc1 = ts0 + tc0;\n\t\t\ttc2 = ts0 - tc0;\n\n\t\t\tts0 = inout[inoutPos + 5 * 3] * win[Encoder_1.SHORT_TYPE][0]\n\t\t\t\t\t+ inout[inoutPos + 2 * 3];\n\t\t\ttc0 = inout[inoutPos + 3 * 3] * win[Encoder_1.SHORT_TYPE][2]\n\t\t\t\t\t+ inout[inoutPos + 0 * 3];\n\t\t\tts1 = ts0 + tc0;\n\t\t\tts2 = -ts0 + tc0;\n\n\t\t\ttc0 = (inout[inoutPos + 1 * 3] * win[Encoder_1.SHORT_TYPE][1] - inout[inoutPos + 4 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tts0 = (inout[inoutPos + 4 * 3] * win[Encoder_1.SHORT_TYPE][1] + inout[inoutPos + 1 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 0] = tc1 * 1.907525191737280e-11 + tc0;\n\t\t\t/*\n\t\t\t * tritab_s[ 2 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 5] = -ts1 * 1.907525191737280e-11 + ts0;\n\t\t\t/*\n\t\t\t * tritab_s[0 ]\n\t\t\t */\n\t\t\ttc2 = tc2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 2]\n\t\t\t */\n\t\t\tts1 = ts1 * 0.5 * 1.907525191737281e-11 + ts0;\n\t\t\tinout[inoutPos + 3 * 1] = tc2 - ts1;\n\t\t\tinout[inoutPos + 3 * 2] = tc2 + ts1;\n\n\t\t\ttc1 = tc1 * 0.5 * 1.907525191737281e-11 - tc0;\n\t\t\tts2 = ts2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 0]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 3] = tc1 + ts2;\n\t\t\tinout[inoutPos + 3 * 4] = tc1 - ts2;\n\n\t\t\tinoutPos++;\n\t\t}\n\t}\n\n\tfunction mdct_long(out, outPos, _in) {\n\t\tvar ct, st;\n\t\t{\n\t\t\tvar tc1, tc2, tc3, tc4, ts5, ts6, ts7, ts8;\n\t\t\t/* 1,2, 5,6, 9,10, 13,14, 17 */\n\t\t\ttc1 = _in[17] - _in[9];\n\t\t\ttc3 = _in[15] - _in[11];\n\t\t\ttc4 = _in[14] - _in[12];\n\t\t\tts5 = _in[0] + _in[8];\n\t\t\tts6 = _in[1] + _in[7];\n\t\t\tts7 = _in[2] + _in[6];\n\t\t\tts8 = _in[3] + _in[5];\n\n\t\t\tout[outPos + 17] = (ts5 + ts7 - ts8) - (ts6 - _in[4]);\n\t\t\tst = (ts5 + ts7 - ts8) * cx[12 + 7] + (ts6 - _in[4]);\n\t\t\tct = (tc1 - tc3 - tc4) * cx[12 + 6];\n\t\t\tout[outPos + 5] = ct + st;\n\t\t\tout[outPos + 6] = ct - st;\n\n\t\t\ttc2 = (_in[16] - _in[10]) * cx[12 + 6];\n\t\t\tts6 = ts6 * cx[12 + 7] + _in[4];\n\t\t\tct = tc1 * cx[12 + 0] + tc2 + tc3 * cx[12 + 1] + tc4 * cx[12 + 2];\n\t\t\tst = -ts5 * cx[12 + 4] + ts6 - ts7 * cx[12 + 5] + ts8 * cx[12 + 3];\n\t\t\tout[outPos + 1] = ct + st;\n\t\t\tout[outPos + 2] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 1] - tc2 - tc3 * cx[12 + 2] + tc4 * cx[12 + 0];\n\t\t\tst = -ts5 * cx[12 + 5] + ts6 - ts7 * cx[12 + 3] + ts8 * cx[12 + 4];\n\t\t\tout[outPos + 9] = ct + st;\n\t\t\tout[outPos + 10] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 2] - tc2 + tc3 * cx[12 + 0] - tc4 * cx[12 + 1];\n\t\t\tst = ts5 * cx[12 + 3] - ts6 + ts7 * cx[12 + 4] - ts8 * cx[12 + 5];\n\t\t\tout[outPos + 13] = ct + st;\n\t\t\tout[outPos + 14] = ct - st;\n\t\t}\n\t\t{\n\t\t\tvar ts1, ts2, ts3, ts4, tc5, tc6, tc7, tc8;\n\n\t\t\tts1 = _in[8] - _in[0];\n\t\t\tts3 = _in[6] - _in[2];\n\t\t\tts4 = _in[5] - _in[3];\n\t\t\ttc5 = _in[17] + _in[9];\n\t\t\ttc6 = _in[16] + _in[10];\n\t\t\ttc7 = _in[15] + _in[11];\n\t\t\ttc8 = _in[14] + _in[12];\n\n\t\t\tout[outPos + 0] = (tc5 + tc7 + tc8) + (tc6 + _in[13]);\n\t\t\tct = (tc5 + tc7 + tc8) * cx[12 + 7] - (tc6 + _in[13]);\n\t\t\tst = (ts1 - ts3 + ts4) * cx[12 + 6];\n\t\t\tout[outPos + 11] = ct + st;\n\t\t\tout[outPos + 12] = ct - st;\n\n\t\t\tts2 = (_in[7] - _in[1]) * cx[12 + 6];\n\t\t\ttc6 = _in[13] - tc6 * cx[12 + 7];\n\t\t\tct = tc5 * cx[12 + 3] - tc6 + tc7 * cx[12 + 4] + tc8 * cx[12 + 5];\n\t\t\tst = ts1 * cx[12 + 2] + ts2 + ts3 * cx[12 + 0] + ts4 * cx[12 + 1];\n\t\t\tout[outPos + 3] = ct + st;\n\t\t\tout[outPos + 4] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 5] + tc6 - tc7 * cx[12 + 3] - tc8 * cx[12 + 4];\n\t\t\tst = ts1 * cx[12 + 1] + ts2 - ts3 * cx[12 + 2] - ts4 * cx[12 + 0];\n\t\t\tout[outPos + 7] = ct + st;\n\t\t\tout[outPos + 8] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 4] + tc6 - tc7 * cx[12 + 5] - tc8 * cx[12 + 3];\n\t\t\tst = ts1 * cx[12 + 0] - ts2 + ts3 * cx[12 + 1] - ts4 * cx[12 + 2];\n\t\t\tout[outPos + 15] = ct + st;\n\t\t\tout[outPos + 16] = ct - st;\n\t\t}\n\t}\n\n\tthis.mdct_sub48 = function(gfc, w0, w1) {\n\t\tvar wk = w0;\n\t\tvar wkPos = 286;\n\t\t/* thinking cache performance, ch->gr loop is better than gr->ch loop */\n\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\t\t\t\tvar band;\n\t\t\t\tvar gi = (gfc.l3_side.tt[gr][ch]);\n\t\t\t\tvar mdct_enc = gi.xr;\n\t\t\t\tvar mdct_encPos = 0;\n\t\t\t\tvar samp = gfc.sb_sample[ch][1 - gr];\n\t\t\t\tvar sampPos = 0;\n\n\t\t\t\tfor (var k = 0; k < 18 / 2; k++) {\n\t\t\t\t\twindow_subband(wk, wkPos, samp[sampPos]);\n\t\t\t\t\twindow_subband(wk, wkPos + 32, samp[sampPos + 1]);\n\t\t\t\t\tsampPos += 2;\n\t\t\t\t\twkPos += 64;\n\t\t\t\t\t/*\n\t\t\t\t\t * Compensate for inversion in the analysis filter\n\t\t\t\t\t */\n\t\t\t\t\tfor (band = 1; band < 32; band += 2) {\n\t\t\t\t\t\tsamp[sampPos - 1][band] *= -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Perform imdct of 18 previous subband samples + 18 current\n\t\t\t\t * subband samples\n\t\t\t\t */\n\t\t\t\tfor (band = 0; band < 32; band++, mdct_encPos += 18) {\n\t\t\t\t\tvar type = gi.block_type;\n\t\t\t\t\tvar band0 = gfc.sb_sample[ch][gr];\n\t\t\t\t\tvar band1 = gfc.sb_sample[ch][1 - gr];\n\t\t\t\t\tif (gi.mixed_block_flag != 0 && band < 2)\n\t\t\t\t\t\ttype = 0;\n\t\t\t\t\tif (gfc.amp_filter[band] < 1e-12) {\n\t\t\t\t\t\tArrays$6.fill(mdct_enc, mdct_encPos + 0,\n\t\t\t\t\t\t\t\tmdct_encPos + 18, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (gfc.amp_filter[band] < 1.0) {\n\t\t\t\t\t\t\tfor (var k = 0; k < 18; k++)\n\t\t\t\t\t\t\t\tband1[k][order[band]] *= gfc.amp_filter[band];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (type == Encoder_1.SHORT_TYPE) {\n\t\t\t\t\t\t\tfor (var k = -NS / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar w = win[Encoder_1.SHORT_TYPE][k + 3];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 9] = band0[9 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 18] = band0[14 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band0[15 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 10] = band0[15 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[14 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 19] = band1[2 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[3 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 11] = band1[3 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band1[2 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 20] = band1[8 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[9 + k][order[band]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmdct_short(mdct_enc, mdct_encPos);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar work = new_float$6(18);\n\t\t\t\t\t\t\tfor (var k = -NL / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar a, b;\n\t\t\t\t\t\t\t\ta = win[type][k + 27]\n\t\t\t\t\t\t\t\t\t\t* band1[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t+ win[type][k + 36]\n\t\t\t\t\t\t\t\t\t\t* band1[8 - k][order[band]];\n\t\t\t\t\t\t\t\tb = win[type][k + 9]\n\t\t\t\t\t\t\t\t\t\t* band0[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t- win[type][k + 18]\n\t\t\t\t\t\t\t\t\t\t* band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\twork[k + 9] = a - b * tantab_l[3 + k + 9];\n\t\t\t\t\t\t\t\twork[k + 18] = a * tantab_l[3 + k + 9] + b;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmdct_long(mdct_enc, mdct_encPos, work);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\t * Perform aliasing reduction butterfly\n\t\t\t\t\t */\n\t\t\t\t\tif (type != Encoder_1.SHORT_TYPE && band != 0) {\n\t\t\t\t\t\tfor (var k = 7; k >= 0; --k) {\n\t\t\t\t\t\t\tvar bu, bd;\n\t\t\t\t\t\t\tbu = mdct_enc[mdct_encPos + k] * ca[20 + k]\n\t\t\t\t\t\t\t\t\t+ mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* cs[28 + k];\n\t\t\t\t\t\t\tbd = mdct_enc[mdct_encPos + k] * cs[28 + k]\n\t\t\t\t\t\t\t\t\t- mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* ca[20 + k];\n\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + -1 - k] = bu;\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k] = bd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twk = w1;\n\t\t\twkPos = 286;\n\t\t\tif (gfc.mode_gr == 1) {\n\t\t\t\tfor (var i = 0; i < 18; i++) {\n\t\t\t\t\tSystem$6.arraycopy(gfc.sb_sample[ch][1][i], 0,\n\t\t\t\t\t\t\tgfc.sb_sample[ch][0][i], 0, 32);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\nvar NewMDCT_1 = NewMDCT;\n\nvar System$7 = common.System;\nvar new_float$7 = common.new_float;\nvar new_float_n$7 = common.new_float_n;\nfunction III_psy_xmin() {\n    this.l = new_float$7(Encoder_1.SBMAX_l);\n    this.s = new_float_n$7([Encoder_1.SBMAX_s, 3]);\n\n    var self = this;\n    this.assign = function (iii_psy_xmin) {\n        System$7.arraycopy(iii_psy_xmin.l, 0, self.l, 0, Encoder_1.SBMAX_l);\n        for (var i = 0; i < Encoder_1.SBMAX_s; i++) {\n            for (var j = 0; j < 3; j++) {\n                self.s[i][j] = iii_psy_xmin.s[i][j];\n            }\n        }\n    };\n}\n\nvar III_psy_xmin_1 = III_psy_xmin;\n\n//package mp3;\n\n\n\nfunction III_psy_ratio() {\n\tthis.thm = new III_psy_xmin_1();\n\tthis.en = new III_psy_xmin_1();\n}\n\nvar III_psy_ratio_1 = III_psy_ratio;\n\nvar System$5 = common.System;\nvar VbrMode$5 = common.VbrMode;\nvar new_array_n$5 = common.new_array_n;\nvar new_float$5 = common.new_float;\nvar new_float_n$5 = common.new_float_n;\nvar new_int$5 = common.new_int;\nvar assert$5 = common.assert;\n\n/**\n * ENCDELAY The encoder delay.\n *\n * Minimum allowed is MDCTDELAY (see below)\n *\n * The first 96 samples will be attenuated, so using a value less than 96\n * will result in corrupt data for the first 96-ENCDELAY samples.\n *\n * suggested: 576 set to 1160 to sync with FhG.\n */\nEncoder$2.ENCDELAY = 576;\n/**\n * make sure there is at least one complete frame after the last frame\n * containing real data\n *\n * Using a value of 288 would be sufficient for a a very sophisticated\n * decoder that can decode granule-by-granule instead of frame by frame. But\n * lets not assume this, and assume the decoder will not decode frame N\n * unless it also has data for frame N+1\n */\nEncoder$2.POSTDELAY = 1152;\n\n/**\n * delay of the MDCT used in mdct.c original ISO routines had a delay of\n * 528! Takehiro's routines:\n */\nEncoder$2.MDCTDELAY = 48;\nEncoder$2.FFTOFFSET = (224 + Encoder$2.MDCTDELAY);\n\n/**\n * Most decoders, including the one we use, have a delay of 528 samples.\n */\nEncoder$2.DECDELAY = 528;\n\n/**\n * number of subbands\n */\nEncoder$2.SBLIMIT = 32;\n\n/**\n * parition bands bands\n */\nEncoder$2.CBANDS = 64;\n\n/**\n * number of critical bands/scale factor bands where masking is computed\n */\nEncoder$2.SBPSY_l = 21;\nEncoder$2.SBPSY_s = 12;\n\n/**\n * total number of scalefactor bands encoded\n */\nEncoder$2.SBMAX_l = 22;\nEncoder$2.SBMAX_s = 13;\nEncoder$2.PSFB21 = 6;\nEncoder$2.PSFB12 = 6;\n\n/**\n * FFT sizes\n */\nEncoder$2.BLKSIZE = 1024;\nEncoder$2.HBLKSIZE = (Encoder$2.BLKSIZE / 2 + 1);\nEncoder$2.BLKSIZE_s = 256;\nEncoder$2.HBLKSIZE_s = (Encoder$2.BLKSIZE_s / 2 + 1);\n\nEncoder$2.NORM_TYPE = 0;\nEncoder$2.START_TYPE = 1;\nEncoder$2.SHORT_TYPE = 2;\nEncoder$2.STOP_TYPE = 3;\n\n/**\n * <PRE>\n * Mode Extention:\n * When we are in stereo mode, there are 4 possible methods to store these\n * two channels. The stereo modes -m? are using a subset of them.\n *\n *  -ms: MPG_MD_LR_LR\n *  -mj: MPG_MD_LR_LR and MPG_MD_MS_LR\n *  -mf: MPG_MD_MS_LR\n *  -mi: all\n * </PRE>\n */\nEncoder$2.MPG_MD_LR_LR = 0;\nEncoder$2.MPG_MD_LR_I = 1;\nEncoder$2.MPG_MD_MS_LR = 2;\nEncoder$2.MPG_MD_MS_I = 3;\n\nEncoder$2.fircoef = [-0.0207887 * 5, -0.0378413 * 5,\n    -0.0432472 * 5, -0.031183 * 5, 7.79609e-18 * 5, 0.0467745 * 5,\n    0.10091 * 5, 0.151365 * 5, 0.187098 * 5];\n\nfunction Encoder$2() {\n    var NewMDCT = NewMDCT_1;\n    var III_psy_ratio = III_psy_ratio_1;\n\n    var FFTOFFSET = Encoder$2.FFTOFFSET;\n    var MPG_MD_MS_LR = Encoder$2.MPG_MD_MS_LR;\n    //BitStream bs;\n    //PsyModel psy;\n    //VBRTag vbr;\n    //QuantizePVT qupvt;\n    var bs = null;\n    this.psy = null;\n    var psy = null;\n    var vbr = null;\n    var qupvt = null;\n\n    //public final void setModules(BitStream bs, PsyModel psy, QuantizePVT qupvt,\n    //    VBRTag vbr) {\n    this.setModules = function (_bs, _psy, _qupvt, _vbr) {\n        bs = _bs;\n        this.psy = _psy;\n        psy = _psy;\n        vbr = _vbr;\n        qupvt = _qupvt;\n    };\n\n    var newMDCT = new NewMDCT();\n\n    /***********************************************************************\n     *\n     * encoder and decoder delays\n     *\n     ***********************************************************************/\n\n    /**\n     * <PRE>\n     * layer III enc->dec delay:  1056 (1057?)   (observed)\n     * layer  II enc->dec delay:   480  (481?)   (observed)\n     *\n     * polyphase 256-16             (dec or enc)        = 240\n     * mdct      256+32  (9*32)     (dec or enc)        = 288\n     * total:    512+16\n     *\n     * My guess is that delay of polyphase filterbank is actualy 240.5\n     * (there are technical reasons for this, see postings in mp3encoder).\n     * So total Encode+Decode delay = ENCDELAY + 528 + 1\n     * </PRE>\n     */\n\n\n    /**\n     * auto-adjust of ATH, useful for low volume Gabriel Bouvigne 3 feb 2001\n     *\n     * modifies some values in gfp.internal_flags.ATH (gfc.ATH)\n     */\n//private void adjust_ATH(final LameInternalFlags gfc) {\n    function adjust_ATH(gfc) {\n        var gr2_max, max_pow;\n\n        if (gfc.ATH.useAdjust == 0) {\n            gfc.ATH.adjust = 1.0;\n            /* no adjustment */\n            return;\n        }\n\n        /* jd - 2001 mar 12, 27, jun 30 */\n        /* loudness based on equal loudness curve; */\n        /* use granule with maximum combined loudness */\n        max_pow = gfc.loudness_sq[0][0];\n        gr2_max = gfc.loudness_sq[1][0];\n        if (gfc.channels_out == 2) {\n            max_pow += gfc.loudness_sq[0][1];\n            gr2_max += gfc.loudness_sq[1][1];\n        } else {\n            max_pow += max_pow;\n            gr2_max += gr2_max;\n        }\n        if (gfc.mode_gr == 2) {\n            max_pow = Math.max(max_pow, gr2_max);\n        }\n        max_pow *= 0.5;\n        /* max_pow approaches 1.0 for full band noise */\n\n        /* jd - 2001 mar 31, jun 30 */\n        /* user tuning of ATH adjustment region */\n        max_pow *= gfc.ATH.aaSensitivityP;\n\n        /*\n         * adjust ATH depending on range of maximum value\n         */\n\n        /* jd - 2001 feb27, mar12,20, jun30, jul22 */\n        /* continuous curves based on approximation */\n        /* to GB's original values. */\n        /* For an increase in approximate loudness, */\n        /* set ATH adjust to adjust_limit immediately */\n        /* after a delay of one frame. */\n        /* For a loudness decrease, reduce ATH adjust */\n        /* towards adjust_limit gradually. */\n        /* max_pow is a loudness squared or a power. */\n        if (max_pow > 0.03125) { /* ((1 - 0.000625)/ 31.98) from curve below */\n            if (gfc.ATH.adjust >= 1.0) {\n                gfc.ATH.adjust = 1.0;\n            } else {\n                /* preceding frame has lower ATH adjust; */\n                /* ascend only to the preceding adjust_limit */\n                /* in case there is leading low volume */\n                if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                    gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                }\n            }\n            gfc.ATH.adjustLimit = 1.0;\n        } else { /* adjustment curve */\n            /* about 32 dB maximum adjust (0.000625) */\n            var adj_lim_new = 31.98 * max_pow + 0.000625;\n            if (gfc.ATH.adjust >= adj_lim_new) { /* descend gradually */\n                gfc.ATH.adjust *= adj_lim_new * 0.075 + 0.925;\n                if (gfc.ATH.adjust < adj_lim_new) { /* stop descent */\n                    gfc.ATH.adjust = adj_lim_new;\n                }\n            } else { /* ascend */\n                if (gfc.ATH.adjustLimit >= adj_lim_new) {\n                    gfc.ATH.adjust = adj_lim_new;\n                } else {\n                    /* preceding frame has lower ATH adjust; */\n                    /* ascend only to the preceding adjust_limit */\n                    if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                        gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                    }\n                }\n            }\n            gfc.ATH.adjustLimit = adj_lim_new;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  some simple statistics\n     *\n     *  bitrate index 0: free bitrate . not allowed in VBR mode\n     *  : bitrates, kbps depending on MPEG version\n     *  bitrate index 15: forbidden\n     *\n     *  mode_ext:\n     *  0:  LR\n     *  1:  LR-i\n     *  2:  MS\n     *  3:  MS-i\n     * </PRE>\n     */\n    function updateStats(gfc) {\n        var gr, ch;\n        assert$5(0 <= gfc.bitrate_index && gfc.bitrate_index < 16);\n        assert$5(0 <= gfc.mode_ext && gfc.mode_ext < 4);\n\n        /* count bitrate indices */\n        gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][4]++;\n        gfc.bitrate_stereoMode_Hist[15][4]++;\n\n        /* count 'em for every mode extension in case of 2 channel encoding */\n        if (gfc.channels_out == 2) {\n            gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][gfc.mode_ext]++;\n            gfc.bitrate_stereoMode_Hist[15][gfc.mode_ext]++;\n        }\n        for (gr = 0; gr < gfc.mode_gr; ++gr) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                var bt = gfc.l3_side.tt[gr][ch].block_type | 0;\n                if (gfc.l3_side.tt[gr][ch].mixed_block_flag != 0)\n                    bt = 4;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][bt]++;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][5]++;\n                gfc.bitrate_blockType_Hist[15][bt]++;\n                gfc.bitrate_blockType_Hist[15][5]++;\n            }\n        }\n    }\n\n    function lame_encode_frame_init(gfp, inbuf) {\n        var gfc = gfp.internal_flags;\n\n        var ch, gr;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* prime the MDCT/polyphase filterbank with a short block */\n            var i, j;\n            var primebuff0 = new_float$5(286 + 1152 + 576);\n            var primebuff1 = new_float$5(286 + 1152 + 576);\n            gfc.lame_encode_frame_init = 1;\n            for (i = 0, j = 0; i < 286 + 576 * (1 + gfc.mode_gr); ++i) {\n                if (i < 576 * gfc.mode_gr) {\n                    primebuff0[i] = 0;\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = 0;\n                } else {\n                    primebuff0[i] = inbuf[0][j];\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = inbuf[1][j];\n                    ++j;\n                }\n            }\n            /* polyphase filtering / mdct */\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder$2.SHORT_TYPE;\n                }\n            }\n            newMDCT.mdct_sub48(gfc, primebuff0, primebuff1);\n\n            /* check FFT will not use a negative starting offset */\n            assert$5(576 >= Encoder$2.FFTOFFSET);\n            /* check if we have enough data for FFT */\n            assert$5(gfc.mf_size >= (Encoder$2.BLKSIZE + gfp.framesize - Encoder$2.FFTOFFSET));\n            /* check if we have enough data for polyphase filterbank */\n            assert$5(gfc.mf_size >= (512 + gfp.framesize - 32));\n        }\n\n    }\n\n    /**\n     * <PRE>\n     * encodeframe()           Layer 3\n     *\n     * encode a single frame\n     *\n     *\n     *    lame_encode_frame()\n     *\n     *\n     *                           gr 0            gr 1\n     *    inbuf:           |--------------|--------------|--------------|\n     *\n     *\n     *    Polyphase (18 windows, each shifted 32)\n     *    gr 0:\n     *    window1          <----512---.\n     *    window18                 <----512---.\n     *\n     *    gr 1:\n     *    window1                         <----512---.\n     *    window18                                <----512---.\n     *\n     *\n     *\n     *    MDCT output:  |--------------|--------------|--------------|\n     *\n     *    FFT's                    <---------1024---------.\n     *                                             <---------1024-------.\n     *\n     *\n     *\n     *        inbuf = buffer of PCM data size=MP3 framesize\n     *        encoder acts on inbuf[ch][0], but output is delayed by MDCTDELAY\n     *        so the MDCT coefficints are from inbuf[ch][-MDCTDELAY]\n     *\n     *        psy-model FFT has a 1 granule delay, so we feed it data for the\n     *        next granule.\n     *        FFT is centered over granule:  224+576+224\n     *        So FFT starts at:   576-224-MDCTDELAY\n     *\n     *        MPEG2:  FFT ends at:  BLKSIZE+576-224-MDCTDELAY      (1328)\n     *        MPEG1:  FFT ends at:  BLKSIZE+2*576-224-MDCTDELAY    (1904)\n     *\n     *        MPEG2:  polyphase first window:  [0..511]\n     *                          18th window:   [544..1055]          (1056)\n     *        MPEG1:            36th window:   [1120..1631]         (1632)\n     *                data needed:  512+framesize-32\n     *\n     *        A close look newmdct.c shows that the polyphase filterbank\n     *        only uses data from [0..510] for each window.  Perhaps because the window\n     *        used by the filterbank is zero for the last point, so Takehiro's\n     *        code doesn't bother to compute with it.\n     *\n     *        FFT starts at 576-224-MDCTDELAY (304)  = 576-FFTOFFSET\n     *\n     * </PRE>\n     */\n\n\n    this.lame_encode_mp3_frame = function (gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var mp3count;\n        var masking_LR = new_array_n$5([2, 2]);\n        /*\n         * LR masking &\n         * energy\n         */\n        masking_LR[0][0] = new III_psy_ratio();\n        masking_LR[0][1] = new III_psy_ratio();\n        masking_LR[1][0] = new III_psy_ratio();\n        masking_LR[1][1] = new III_psy_ratio();\n        var masking_MS = new_array_n$5([2, 2]);\n        /* MS masking & energy */\n        masking_MS[0][0] = new III_psy_ratio();\n        masking_MS[0][1] = new III_psy_ratio();\n        masking_MS[1][0] = new III_psy_ratio();\n        masking_MS[1][1] = new III_psy_ratio();\n        //III_psy_ratio masking[][];\n        var masking;\n        /* pointer to selected maskings */\n        var inbuf = [null, null];\n        var gfc = gfp.internal_flags;\n\n        var tot_ener = new_float_n$5([2, 4]);\n        var ms_ener_ratio = [.5, .5];\n        var pe = [[0., 0.], [0., 0.]];\n        var pe_MS = [[0., 0.], [0., 0.]];\n\n//float[][] pe_use;\n        var pe_use;\n\n        var ch, gr;\n\n        inbuf[0] = inbuf_l;\n        inbuf[1] = inbuf_r;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* first run? */\n            lame_encode_frame_init(gfp, inbuf);\n\n        }\n\n        /********************** padding *****************************/\n        /**\n         * <PRE>\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\"\n         * by Martin Sieler, Ralph Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         * </PRE>\n         */\n        gfc.padding = 0;\n        if ((gfc.slot_lag -= gfc.frac_SpF) < 0) {\n            gfc.slot_lag += gfp.out_samplerate;\n            gfc.padding = 1;\n        }\n\n        /****************************************\n         * Stage 1: psychoacoustic model *\n         ****************************************/\n\n        if (gfc.psymodel != 0) {\n            /*\n             * psychoacoustic model psy model has a 1 granule (576) delay that\n             * we must compensate for (mt 6/99).\n             */\n            var ret;\n            var bufp = [null, null];\n            /* address of beginning of left & right granule */\n            var bufpPos = 0;\n            /* address of beginning of left & right granule */\n            var blocktype = new_int$5(2);\n\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    bufp[ch] = inbuf[ch];\n                    bufpPos = 576 + gr * 576 - Encoder$2.FFTOFFSET;\n                }\n                if (gfp.VBR == VbrMode$5.vbr_mtrh || gfp.VBR == VbrMode$5.vbr_mt) {\n                    ret = psy.L3psycho_anal_vbr(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                } else {\n                    ret = psy.L3psycho_anal_ns(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                }\n                if (ret != 0)\n                    return -4;\n\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    ms_ener_ratio[gr] = tot_ener[gr][2] + tot_ener[gr][3];\n                    if (ms_ener_ratio[gr] > 0)\n                        ms_ener_ratio[gr] = tot_ener[gr][3] / ms_ener_ratio[gr];\n                }\n\n                /* block type flags */\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var cod_info = gfc.l3_side.tt[gr][ch];\n                    cod_info.block_type = blocktype[ch];\n                    cod_info.mixed_block_flag = 0;\n                }\n            }\n        } else {\n            /* no psy model */\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder$2.NORM_TYPE;\n                    gfc.l3_side.tt[gr][ch].mixed_block_flag = 0;\n                    pe_MS[gr][ch] = pe[gr][ch] = 700;\n                }\n        }\n\n        /* auto-adjust of ATH, useful for low volume */\n        adjust_ATH(gfc);\n\n        /****************************************\n         * Stage 2: MDCT *\n         ****************************************/\n\n        /* polyphase filtering / mdct */\n        newMDCT.mdct_sub48(gfc, inbuf[0], inbuf[1]);\n\n        /****************************************\n         * Stage 3: MS/LR decision *\n         ****************************************/\n\n        /* Here will be selected MS or LR coding of the 2 stereo channels */\n        gfc.mode_ext = Encoder$2.MPG_MD_LR_LR;\n\n        if (gfp.force_ms) {\n            gfc.mode_ext = Encoder$2.MPG_MD_MS_LR;\n        } else if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            /*\n             * ms_ratio = is scaled, for historical reasons, to look like a\n             * ratio of side_channel / total. 0 = signal is 100% mono .5 = L & R\n             * uncorrelated\n             */\n\n            /**\n             * <PRE>\n             * [0] and [1] are the results for the two granules in MPEG-1,\n             * in MPEG-2 it's only a faked averaging of the same value\n             * _prev is the value of the last granule of the previous frame\n             * _next is the value of the first granule of the next frame\n             * </PRE>\n             */\n\n            var sum_pe_MS = 0.;\n            var sum_pe_LR = 0.;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    sum_pe_MS += pe_MS[gr][ch];\n                    sum_pe_LR += pe[gr][ch];\n                }\n            }\n\n            /* based on PE: M/S coding would not use much more bits than L/R */\n            if (sum_pe_MS <= 1.00 * sum_pe_LR) {\n\n                var gi0 = gfc.l3_side.tt[0];\n                var gi1 = gfc.l3_side.tt[gfc.mode_gr - 1];\n\n                if (gi0[0].block_type == gi0[1].block_type\n                    && gi1[0].block_type == gi1[1].block_type) {\n\n                    gfc.mode_ext = Encoder$2.MPG_MD_MS_LR;\n                }\n            }\n        }\n\n        /* bit and noise allocation */\n        if (gfc.mode_ext == MPG_MD_MS_LR) {\n            masking = masking_MS;\n            /* use MS masking */\n            pe_use = pe_MS;\n        } else {\n            masking = masking_LR;\n            /* use LR masking */\n            pe_use = pe;\n        }\n\n        /* copy data for MP3 frame analyzer */\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.pinfo.ms_ratio[gr] = gfc.ms_ratio[gr];\n                    gfc.pinfo.ms_ener_ratio[gr] = ms_ener_ratio[gr];\n                    gfc.pinfo.blocktype[gr][ch] = gfc.l3_side.tt[gr][ch].block_type;\n                    gfc.pinfo.pe[gr][ch] = pe_use[gr][ch];\n                    System$5.arraycopy(gfc.l3_side.tt[gr][ch].xr, 0,\n                        gfc.pinfo.xr[gr][ch], 0, 576);\n                    /*\n                     * in psymodel, LR and MS data was stored in pinfo. switch\n                     * to MS data:\n                     */\n                    if (gfc.mode_ext == MPG_MD_MS_LR) {\n                        gfc.pinfo.ers[gr][ch] = gfc.pinfo.ers[gr][ch + 2];\n                        System$5.arraycopy(gfc.pinfo.energy[gr][ch + 2], 0,\n                            gfc.pinfo.energy[gr][ch], 0,\n                            gfc.pinfo.energy[gr][ch].length);\n                    }\n                }\n            }\n        }\n\n        /****************************************\n         * Stage 4: quantization loop *\n         ****************************************/\n\n        if (gfp.VBR == VbrMode$5.vbr_off || gfp.VBR == VbrMode$5.vbr_abr) {\n\n            var i;\n            var f;\n\n            for (i = 0; i < 18; i++)\n                gfc.nsPsy.pefirbuf[i] = gfc.nsPsy.pefirbuf[i + 1];\n\n            f = 0.0;\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    f += pe_use[gr][ch];\n            gfc.nsPsy.pefirbuf[18] = f;\n\n            f = gfc.nsPsy.pefirbuf[9];\n            for (i = 0; i < 9; i++)\n                f += (gfc.nsPsy.pefirbuf[i] + gfc.nsPsy.pefirbuf[18 - i])\n                    * Encoder$2.fircoef[i];\n\n            f = (670 * 5 * gfc.mode_gr * gfc.channels_out) / f;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    pe_use[gr][ch] *= f;\n                }\n            }\n        }\n        gfc.iteration_loop.iteration_loop(gfp, pe_use, ms_ener_ratio, masking);\n\n        /****************************************\n         * Stage 5: bitstream formatting *\n         ****************************************/\n\n        /* write the frame to the bitstream */\n        bs.format_bitstream(gfp);\n\n        /* copy mp3 bit buffer into array */\n        mp3count = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 1);\n\n        if (gfp.bWriteVbrTag)\n            vbr.addVbrFrame(gfp);\n\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var j;\n                for (j = 0; j < FFTOFFSET; j++)\n                    gfc.pinfo.pcmdata[ch][j] = gfc.pinfo.pcmdata[ch][j\n                    + gfp.framesize];\n                for (j = FFTOFFSET; j < 1600; j++) {\n                    gfc.pinfo.pcmdata[ch][j] = inbuf[ch][j - FFTOFFSET];\n                }\n            }\n            qupvt.set_frame_pinfo(gfp, masking);\n        }\n\n        updateStats(gfc);\n\n        return mp3count;\n    };\n}\n\n\nvar Encoder_1 = Encoder$2;\n\nvar Util$4 = common.Util;\nvar new_float$4 = common.new_float;\nfunction FFT() {\n\n    var window = new_float$4(Encoder_1.BLKSIZE);\n    var window_s = new_float$4(Encoder_1.BLKSIZE_s / 2);\n\n    var costab = [\n        9.238795325112867e-01, 3.826834323650898e-01,\n        9.951847266721969e-01, 9.801714032956060e-02,\n        9.996988186962042e-01, 2.454122852291229e-02,\n        9.999811752826011e-01, 6.135884649154475e-03\n    ];\n\n    function fht(fz, fzPos, n) {\n        var tri = 0;\n        var k4;\n        var fi;\n        var gi;\n\n        n <<= 1;\n        /* to get BLKSIZE, because of 3DNow! ASM routine */\n        var fn = fzPos + n;\n        k4 = 4;\n        do {\n            var s1, c1;\n            var i, k1, k2, k3, kx;\n            kx = k4 >> 1;\n            k1 = k4;\n            k2 = k4 << 1;\n            k3 = k2 + k1;\n            k4 = k2 << 1;\n            fi = fzPos;\n            gi = fi + kx;\n            do {\n                var f0, f1, f2, f3;\n                f1 = fz[fi + 0] - fz[fi + k1];\n                f0 = fz[fi + 0] + fz[fi + k1];\n                f3 = fz[fi + k2] - fz[fi + k3];\n                f2 = fz[fi + k2] + fz[fi + k3];\n                fz[fi + k2] = f0 - f2;\n                fz[fi + 0] = f0 + f2;\n                fz[fi + k3] = f1 - f3;\n                fz[fi + k1] = f1 + f3;\n                f1 = fz[gi + 0] - fz[gi + k1];\n                f0 = fz[gi + 0] + fz[gi + k1];\n                f3 = (Util$4.SQRT2 * fz[gi + k3]);\n                f2 = (Util$4.SQRT2 * fz[gi + k2]);\n                fz[gi + k2] = f0 - f2;\n                fz[gi + 0] = f0 + f2;\n                fz[gi + k3] = f1 - f3;\n                fz[gi + k1] = f1 + f3;\n                gi += k4;\n                fi += k4;\n            } while (fi < fn);\n            c1 = costab[tri + 0];\n            s1 = costab[tri + 1];\n            for (i = 1; i < kx; i++) {\n                var c2, s2;\n                c2 = 1 - (2 * s1) * s1;\n                s2 = (2 * s1) * c1;\n                fi = fzPos + i;\n                gi = fzPos + k1 - i;\n                do {\n                    var a, b, g0, f0, f1, g1, f2, g2, f3, g3;\n                    b = s2 * fz[fi + k1] - c2 * fz[gi + k1];\n                    a = c2 * fz[fi + k1] + s2 * fz[gi + k1];\n                    f1 = fz[fi + 0] - a;\n                    f0 = fz[fi + 0] + a;\n                    g1 = fz[gi + 0] - b;\n                    g0 = fz[gi + 0] + b;\n                    b = s2 * fz[fi + k3] - c2 * fz[gi + k3];\n                    a = c2 * fz[fi + k3] + s2 * fz[gi + k3];\n                    f3 = fz[fi + k2] - a;\n                    f2 = fz[fi + k2] + a;\n                    g3 = fz[gi + k2] - b;\n                    g2 = fz[gi + k2] + b;\n                    b = s1 * f2 - c1 * g3;\n                    a = c1 * f2 + s1 * g3;\n                    fz[fi + k2] = f0 - a;\n                    fz[fi + 0] = f0 + a;\n                    fz[gi + k3] = g1 - b;\n                    fz[gi + k1] = g1 + b;\n                    b = c1 * g2 - s1 * f3;\n                    a = s1 * g2 + c1 * f3;\n                    fz[gi + k2] = g0 - a;\n                    fz[gi + 0] = g0 + a;\n                    fz[fi + k3] = f1 - b;\n                    fz[fi + k1] = f1 + b;\n                    gi += k4;\n                    fi += k4;\n                } while (fi < fn);\n                c2 = c1;\n                c1 = c2 * costab[tri + 0] - s1 * costab[tri + 1];\n                s1 = c2 * costab[tri + 1] + s1 * costab[tri + 0];\n            }\n            tri += 2;\n        } while (k4 < n);\n    }\n\n    var rv_tbl = [0x00, 0x80, 0x40,\n        0xc0, 0x20, 0xa0, 0x60, 0xe0, 0x10,\n        0x90, 0x50, 0xd0, 0x30, 0xb0, 0x70,\n        0xf0, 0x08, 0x88, 0x48, 0xc8, 0x28,\n        0xa8, 0x68, 0xe8, 0x18, 0x98, 0x58,\n        0xd8, 0x38, 0xb8, 0x78, 0xf8, 0x04,\n        0x84, 0x44, 0xc4, 0x24, 0xa4, 0x64,\n        0xe4, 0x14, 0x94, 0x54, 0xd4, 0x34,\n        0xb4, 0x74, 0xf4, 0x0c, 0x8c, 0x4c,\n        0xcc, 0x2c, 0xac, 0x6c, 0xec, 0x1c,\n        0x9c, 0x5c, 0xdc, 0x3c, 0xbc, 0x7c,\n        0xfc, 0x02, 0x82, 0x42, 0xc2, 0x22,\n        0xa2, 0x62, 0xe2, 0x12, 0x92, 0x52,\n        0xd2, 0x32, 0xb2, 0x72, 0xf2, 0x0a,\n        0x8a, 0x4a, 0xca, 0x2a, 0xaa, 0x6a,\n        0xea, 0x1a, 0x9a, 0x5a, 0xda, 0x3a,\n        0xba, 0x7a, 0xfa, 0x06, 0x86, 0x46,\n        0xc6, 0x26, 0xa6, 0x66, 0xe6, 0x16,\n        0x96, 0x56, 0xd6, 0x36, 0xb6, 0x76,\n        0xf6, 0x0e, 0x8e, 0x4e, 0xce, 0x2e,\n        0xae, 0x6e, 0xee, 0x1e, 0x9e, 0x5e,\n        0xde, 0x3e, 0xbe, 0x7e, 0xfe];\n\n    this.fft_short = function (gfc, x_real, chn, buffer, bufPos) {\n        for (var b = 0; b < 3; b++) {\n            var x = Encoder_1.BLKSIZE_s / 2;\n            var k = 0xffff & ((576 / 3) * (b + 1));\n            var j = Encoder_1.BLKSIZE_s / 8 - 1;\n            do {\n                var f0, f1, f2, f3, w;\n                var i = rv_tbl[j << 2] & 0xff;\n\n                f0 = window_s[i] * buffer[chn][bufPos + i + k];\n                w = window_s[0x7f - i] * buffer[chn][bufPos + i + k + 0x80];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x40] * buffer[chn][bufPos + i + k + 0x40];\n                w = window_s[0x3f - i] * buffer[chn][bufPos + i + k + 0xc0];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x -= 4;\n                x_real[b][x + 0] = f0 + f2;\n                x_real[b][x + 2] = f0 - f2;\n                x_real[b][x + 1] = f1 + f3;\n                x_real[b][x + 3] = f1 - f3;\n\n                f0 = window_s[i + 0x01] * buffer[chn][bufPos + i + k + 0x01];\n                w = window_s[0x7e - i] * buffer[chn][bufPos + i + k + 0x81];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x41] * buffer[chn][bufPos + i + k + 0x41];\n                w = window_s[0x3e - i] * buffer[chn][bufPos + i + k + 0xc1];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 0] = f0 + f2;\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 2] = f0 - f2;\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 1] = f1 + f3;\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 3] = f1 - f3;\n            } while (--j >= 0);\n\n            fht(x_real[b], x, Encoder_1.BLKSIZE_s / 2);\n            /* BLKSIZE_s/2 because of 3DNow! ASM routine */\n            /* BLKSIZE/2 because of 3DNow! ASM routine */\n        }\n    };\n\n    this.fft_long = function (gfc, y, chn, buffer, bufPos) {\n        var jj = Encoder_1.BLKSIZE / 8 - 1;\n        var x = Encoder_1.BLKSIZE / 2;\n\n        do {\n            var f0, f1, f2, f3, w;\n            var i = rv_tbl[jj] & 0xff;\n            f0 = window[i] * buffer[chn][bufPos + i];\n            w = window[i + 0x200] * buffer[chn][bufPos + i + 0x200];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x100] * buffer[chn][bufPos + i + 0x100];\n            w = window[i + 0x300] * buffer[chn][bufPos + i + 0x300];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            x -= 4;\n            y[x + 0] = f0 + f2;\n            y[x + 2] = f0 - f2;\n            y[x + 1] = f1 + f3;\n            y[x + 3] = f1 - f3;\n\n            f0 = window[i + 0x001] * buffer[chn][bufPos + i + 0x001];\n            w = window[i + 0x201] * buffer[chn][bufPos + i + 0x201];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x101] * buffer[chn][bufPos + i + 0x101];\n            w = window[i + 0x301] * buffer[chn][bufPos + i + 0x301];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            y[x + Encoder_1.BLKSIZE / 2 + 0] = f0 + f2;\n            y[x + Encoder_1.BLKSIZE / 2 + 2] = f0 - f2;\n            y[x + Encoder_1.BLKSIZE / 2 + 1] = f1 + f3;\n            y[x + Encoder_1.BLKSIZE / 2 + 3] = f1 - f3;\n        } while (--jj >= 0);\n\n        fht(y, x, Encoder_1.BLKSIZE / 2);\n        /* BLKSIZE/2 because of 3DNow! ASM routine */\n    };\n\n    this.init_fft = function (gfc) {\n        /* The type of window used here will make no real difference, but */\n        /*\n         * in the interest of merging nspsytune stuff - switch to blackman\n         * window\n         */\n        for (var i = 0; i < Encoder_1.BLKSIZE; i++)\n            /* blackman window */\n            window[i] = (0.42 - 0.5 * Math.cos(2 * Math.PI * (i + .5)\n                / Encoder_1.BLKSIZE) + 0.08 * Math.cos(4 * Math.PI * (i + .5)\n                / Encoder_1.BLKSIZE));\n\n        for (var i = 0; i < Encoder_1.BLKSIZE_s / 2; i++)\n            window_s[i] = (0.5 * (1.0 - Math.cos(2.0 * Math.PI\n                * (i + 0.5) / Encoder_1.BLKSIZE_s)));\n\n    };\n\n}\n\nvar FFT_1 = FFT;\n\nvar VbrMode$3 = common.VbrMode;\nvar Float$3 = common.Float;\nvar ShortBlock$3 = common.ShortBlock;\nvar Util$3 = common.Util;\nvar Arrays$3 = common.Arrays;\nvar new_float$3 = common.new_float;\nvar new_float_n$3 = common.new_float_n;\nvar new_int$3 = common.new_int;\nvar assert$3 = common.assert;\n\n\n\n\nfunction PsyModel() {\n\n    var fft = new FFT_1();\n\n    var LOG10 = 2.30258509299404568402;\n\n    var rpelev = 2;\n    var rpelev2 = 16;\n    var rpelev_s = 2;\n    var rpelev2_s = 16;\n\n    /* size of each partition band, in barks: */\n    var DELBARK = .34;\n\n    /* tuned for output level (sensitive to energy scale) */\n    var VO_SCALE = (1. / (14752 * 14752) / (Encoder_1.BLKSIZE / 2));\n\n    var temporalmask_sustain_sec = 0.01;\n\n    var NS_PREECHO_ATT0 = 0.8;\n    var NS_PREECHO_ATT1 = 0.6;\n    var NS_PREECHO_ATT2 = 0.3;\n\n    var NS_MSFIX = 3.5;\n\n    var NSATTACKTHRE = 4.4;\n    var NSATTACKTHRE_S = 25;\n\n    var NSFIRLEN = 21;\n\n    /* size of each partition band, in barks: */\n    var LN_TO_LOG10 = 0.2302585093;\n\n    function NON_LINEAR_SCALE_ENERGY(x) {\n        return x;\n    }\n\n    /**\n     * <PRE>\n     *       L3psycho_anal.  Compute psycho acoustics.\n     *\n     *       Data returned to the calling program must be delayed by one\n     *       granule.\n     *\n     *       This is done in two places.\n     *       If we do not need to know the blocktype, the copying\n     *       can be done here at the top of the program: we copy the data for\n     *       the last granule (computed during the last call) before it is\n     *       overwritten with the new data.  It looks like this:\n     *\n     *       0. static psymodel_data\n     *       1. calling_program_data = psymodel_data\n     *       2. compute psymodel_data\n     *\n     *       For data which needs to know the blocktype, the copying must be\n     *       done at the end of this loop, and the old values must be saved:\n     *\n     *       0. static psymodel_data_old\n     *       1. compute psymodel_data\n     *       2. compute possible block type of this granule\n     *       3. compute final block type of previous granule based on #2.\n     *       4. calling_program_data = psymodel_data_old\n     *       5. psymodel_data_old = psymodel_data\n     *     psycho_loudness_approx\n     *       jd - 2001 mar 12\n     *    in:  energy   - BLKSIZE/2 elements of frequency magnitudes ^ 2\n     *         gfp      - uses out_samplerate, ATHtype (also needed for ATHformula)\n     *    returns: loudness^2 approximation, a positive value roughly tuned for a value\n     *             of 1.0 for signals near clipping.\n     *    notes:   When calibrated, feeding this function binary white noise at sample\n     *             values +32767 or -32768 should return values that approach 3.\n     *             ATHformula is used to approximate an equal loudness curve.\n     *    future:  Data indicates that the shape of the equal loudness curve varies\n     *             with intensity.  This function might be improved by using an equal\n     *             loudness curve shaped for typical playback levels (instead of the\n     *             ATH, that is shaped for the threshold).  A flexible realization might\n     *             simply bend the existing ATH curve to achieve the desired shape.\n     *             However, the potential gain may not be enough to justify an effort.\n     * </PRE>\n     */\n    function psycho_loudness_approx(energy, gfc) {\n        var loudness_power = 0.0;\n        /* apply weights to power in freq. bands */\n        for (var i = 0; i < Encoder_1.BLKSIZE / 2; ++i)\n            loudness_power += energy[i] * gfc.ATH.eql_w[i];\n        loudness_power *= VO_SCALE;\n\n        return loudness_power;\n    }\n\n    function compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, wsamp_lPos, wsamp_s, wsamp_sPos, gr_out, chn, buffer, bufPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        /* FFT data for mid and side channel is derived from L & R */\n        else if (chn == 2) {\n            for (var j = Encoder_1.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util$3.SQRT2 * 0.5;\n            }\n            for (var b = 2; b >= 0; --b) {\n                for (var j = Encoder_1.BLKSIZE_s - 1; j >= 0; --j) {\n                    var l = wsamp_s[wsamp_sPos + 0][b][j];\n                    var r = wsamp_s[wsamp_sPos + 1][b][j];\n                    wsamp_s[wsamp_sPos + 0][b][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                    wsamp_s[wsamp_sPos + 1][b][j] = (l - r) * Util$3.SQRT2 * 0.5;\n                }\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder_1.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = (wsamp_l[wsamp_lPos + 0])[Encoder_1.BLKSIZE / 2 - j];\n            var im = (wsamp_l[wsamp_lPos + 0])[Encoder_1.BLKSIZE / 2 + j];\n            fftenergy[Encoder_1.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        for (var b = 2; b >= 0; --b) {\n            fftenergy_s[b][0] = (wsamp_s[wsamp_sPos + 0])[b][0];\n            fftenergy_s[b][0] *= fftenergy_s[b][0];\n            for (var j = Encoder_1.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n                var re = (wsamp_s[wsamp_sPos + 0])[b][Encoder_1.BLKSIZE_s\n                / 2 - j];\n                var im = (wsamp_s[wsamp_sPos + 0])[b][Encoder_1.BLKSIZE_s\n                / 2 + j];\n                fftenergy_s[b][Encoder_1.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                    * re + im * im) * 0.5);\n            }\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder_1.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder_1.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n\n        /*********************************************************************\n         * compute loudness approximation (used for ATH auto-level adjustment)\n         *********************************************************************/\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    /* mask_add optimization */\n    /* init the limit values used to avoid computing log in mask_add when it is not necessary */\n\n    /**\n     * <PRE>\n     *  For example, with i = 10*log10(m2/m1)/10*16         (= log10(m2/m1)*16)\n     *\n     * abs(i)>8 is equivalent (as i is an integer) to\n     * abs(i)>=9\n     * i>=9 || i<=-9\n     * equivalent to (as i is the biggest integer smaller than log10(m2/m1)*16\n     * or the smallest integer bigger than log10(m2/m1)*16 depending on the sign of log10(m2/m1)*16)\n     * log10(m2/m1)>=9/16 || log10(m2/m1)<=-9/16\n     * exp10 is strictly increasing thus this is equivalent to\n     * m2/m1 >= 10^(9/16) || m2/m1<=10^(-9/16) which are comparisons to constants\n     * </PRE>\n     */\n\n    /**\n     * as in if(i>8)\n     */\n    var I1LIMIT = 8;\n    /**\n     * as in if(i>24) . changed 23\n     */\n    var I2LIMIT = 23;\n    /**\n     * as in if(m<15)\n     */\n    var MLIMIT = 15;\n\n    var ma_max_i1;\n    var ma_max_i2;\n    var ma_max_m;\n\n    /**\n     * This is the masking table:<BR>\n     * According to tonality, values are going from 0dB (TMN) to 9.3dB (NMT).<BR>\n     * After additive masking computation, 8dB are added, so final values are\n     * going from 8dB to 17.3dB\n     *\n     * pow(10, -0.0..-0.6)\n     */\n    var tab = [1.0, 0.79433, 0.63096, 0.63096,\n        0.63096, 0.63096, 0.63096, 0.25119, 0.11749];\n\n    function init_mask_add_max_values() {\n        ma_max_i1 = Math.pow(10, (I1LIMIT + 1) / 16.0);\n        ma_max_i2 = Math.pow(10, (I2LIMIT + 1) / 16.0);\n        ma_max_m = Math.pow(10, (MLIMIT) / 10.0);\n    }\n\n    var table1 = [3.3246 * 3.3246,\n        3.23837 * 3.23837, 3.15437 * 3.15437, 3.00412 * 3.00412,\n        2.86103 * 2.86103, 2.65407 * 2.65407, 2.46209 * 2.46209,\n        2.284 * 2.284, 2.11879 * 2.11879, 1.96552 * 1.96552,\n        1.82335 * 1.82335, 1.69146 * 1.69146, 1.56911 * 1.56911,\n        1.46658 * 1.46658, 1.37074 * 1.37074, 1.31036 * 1.31036,\n        1.25264 * 1.25264, 1.20648 * 1.20648, 1.16203 * 1.16203,\n        1.12765 * 1.12765, 1.09428 * 1.09428, 1.0659 * 1.0659,\n        1.03826 * 1.03826, 1.01895 * 1.01895, 1];\n\n    var table2 = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    var table3 = [2.35364 * 2.35364,\n        2.29259 * 2.29259, 2.23313 * 2.23313, 2.12675 * 2.12675,\n        2.02545 * 2.02545, 1.87894 * 1.87894, 1.74303 * 1.74303,\n        1.61695 * 1.61695, 1.49999 * 1.49999, 1.39148 * 1.39148,\n        1.29083 * 1.29083, 1.19746 * 1.19746, 1.11084 * 1.11084,\n        1.03826 * 1.03826];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function mask_add(m1, m2, kk, b, gfc, shortblock) {\n        var ratio;\n\n        if (m2 > m1) {\n            if (m2 < (m1 * ma_max_i2))\n                ratio = m2 / m1;\n            else\n                return (m1 + m2);\n        } else {\n            if (m1 >= (m2 * ma_max_i2))\n                return (m1 + m2);\n            ratio = m1 / m2;\n        }\n\n        /* Should always be true, just checking */\n        assert$3(m1 >= 0);\n        assert$3(m2 >= 0);\n\n        m1 += m2;\n        //if (((long)(b + 3) & 0xffffffff) <= 3 + 3) {\n        if ((b + 3) <= 3 + 3) {\n            /* approximately, 1 bark = 3 partitions */\n            /* 65% of the cases */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                /* 43% of the total */\n                return m1;\n            }\n\n            /* 22% of the total */\n            var i = 0 | (Util$3.FAST_LOG10_X(ratio, 16.0));\n            return m1 * table2[i];\n        }\n\n        /**\n         * <PRE>\n         * m<15 equ log10((m1+m2)/gfc.ATH.cb[k])<1.5\n         * equ (m1+m2)/gfc.ATH.cb[k]<10^1.5\n         * equ (m1+m2)<10^1.5 * gfc.ATH.cb[k]\n         * </PRE>\n         */\n        var i = 0 | Util$3.FAST_LOG10_X(ratio, 16.0);\n        if (shortblock != 0) {\n            m2 = gfc.ATH.cb_s[kk] * gfc.ATH.adjust;\n        } else {\n            m2 = gfc.ATH.cb_l[kk] * gfc.ATH.adjust;\n        }\n        assert$3(m2 >= 0);\n        if (m1 < ma_max_m * m2) {\n            /* 3% of the total */\n            /* Originally if (m > 0) { */\n            if (m1 > m2) {\n                var f, r;\n\n                f = 1.0;\n                if (i <= 13)\n                    f = table3[i];\n\n                r = Util$3.FAST_LOG10_X(m1 / m2, 10.0 / 15.0);\n                return m1 * ((table1[i] - f) * r + f);\n            }\n\n            if (i > 13)\n                return m1;\n\n            return m1 * table3[i];\n        }\n\n        /* 10% of total */\n        return m1 * table1[i];\n    }\n\n    var table2_ = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function vbrpsy_mask_add(m1, m2, b) {\n        var ratio;\n\n        if (m1 < 0) {\n            m1 = 0;\n        }\n        if (m2 < 0) {\n            m2 = 0;\n        }\n        if (m1 <= 0) {\n            return m2;\n        }\n        if (m2 <= 0) {\n            return m1;\n        }\n        if (m2 > m1) {\n            ratio = m2 / m1;\n        } else {\n            ratio = m1 / m2;\n        }\n        if (-2 <= b && b <= 2) {\n            /* approximately, 1 bark = 3 partitions */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                return m1 + m2;\n            } else {\n                var i = 0 | (Util$3.FAST_LOG10_X(ratio, 16.0));\n                return (m1 + m2) * table2_[i];\n            }\n        }\n        if (ratio < ma_max_i2) {\n            return m1 + m2;\n        }\n        if (m1 < m2) {\n            m1 = m2;\n        }\n        return m1;\n    }\n\n    /**\n     * compute interchannel masking effects\n     */\n    function calc_interchannel_masking(gfp, ratio) {\n        var gfc = gfp.internal_flags;\n        if (gfc.channels_out > 1) {\n            for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n                var l = gfc.thm[0].l[sb];\n                var r = gfc.thm[1].l[sb];\n                gfc.thm[0].l[sb] += r * ratio;\n                gfc.thm[1].l[sb] += l * ratio;\n            }\n            for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                for (var sblock = 0; sblock < 3; sblock++) {\n                    var l = gfc.thm[0].s[sb][sblock];\n                    var r = gfc.thm[1].s[sb][sblock];\n                    gfc.thm[0].s[sb][sblock] += r * ratio;\n                    gfc.thm[1].s[sb][sblock] += l * ratio;\n                }\n            }\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function msfix1(gfc) {\n        for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n            /* use this fix if L & R masking differs by 2db or less */\n            /* if db = 10*log10(x2/x1) < 2 */\n            /* if (x2 < 1.58*x1) { */\n            if (gfc.thm[0].l[sb] > 1.58 * gfc.thm[1].l[sb]\n                || gfc.thm[1].l[sb] > 1.58 * gfc.thm[0].l[sb])\n                continue;\n            var mld = gfc.mld_l[sb] * gfc.en[3].l[sb];\n            var rmid = Math.max(gfc.thm[2].l[sb],\n                Math.min(gfc.thm[3].l[sb], mld));\n\n            mld = gfc.mld_l[sb] * gfc.en[2].l[sb];\n            var rside = Math.max(gfc.thm[3].l[sb],\n                Math.min(gfc.thm[2].l[sb], mld));\n            gfc.thm[2].l[sb] = rmid;\n            gfc.thm[3].l[sb] = rside;\n        }\n\n        for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                if (gfc.thm[0].s[sb][sblock] > 1.58 * gfc.thm[1].s[sb][sblock]\n                    || gfc.thm[1].s[sb][sblock] > 1.58 * gfc.thm[0].s[sb][sblock])\n                    continue;\n                var mld = gfc.mld_s[sb] * gfc.en[3].s[sb][sblock];\n                var rmid = Math.max(gfc.thm[2].s[sb][sblock],\n                    Math.min(gfc.thm[3].s[sb][sblock], mld));\n\n                mld = gfc.mld_s[sb] * gfc.en[2].s[sb][sblock];\n                var rside = Math.max(gfc.thm[3].s[sb][sblock],\n                    Math.min(gfc.thm[2].s[sb][sblock], mld));\n\n                gfc.thm[2].s[sb][sblock] = rmid;\n                gfc.thm[3].s[sb][sblock] = rside;\n            }\n        }\n    }\n\n    /**\n     * Adjust M/S maskings if user set \"msfix\"\n     *\n     * Naoki Shibata 2000\n     */\n    function ns_msfix(gfc, msfix, athadjust) {\n        var msfix2 = msfix;\n        var athlower = Math.pow(10, athadjust);\n\n        msfix *= 2.0;\n        msfix2 *= 2.0;\n        for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n            var thmLR, thmM, thmS, ath;\n            ath = (gfc.ATH.cb_l[gfc.bm_l[sb]]) * athlower;\n            thmLR = Math.min(Math.max(gfc.thm[0].l[sb], ath),\n                Math.max(gfc.thm[1].l[sb], ath));\n            thmM = Math.max(gfc.thm[2].l[sb], ath);\n            thmS = Math.max(gfc.thm[3].l[sb], ath);\n            if (thmLR * msfix < thmM + thmS) {\n                var f = thmLR * msfix2 / (thmM + thmS);\n                thmM *= f;\n                thmS *= f;\n                assert$3(thmM + thmS > 0);\n            }\n            gfc.thm[2].l[sb] = Math.min(thmM, gfc.thm[2].l[sb]);\n            gfc.thm[3].l[sb] = Math.min(thmS, gfc.thm[3].l[sb]);\n        }\n\n        athlower *= ( Encoder_1.BLKSIZE_s / Encoder_1.BLKSIZE);\n        for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thmLR, thmM, thmS, ath;\n                ath = (gfc.ATH.cb_s[gfc.bm_s[sb]]) * athlower;\n                thmLR = Math.min(Math.max(gfc.thm[0].s[sb][sblock], ath),\n                    Math.max(gfc.thm[1].s[sb][sblock], ath));\n                thmM = Math.max(gfc.thm[2].s[sb][sblock], ath);\n                thmS = Math.max(gfc.thm[3].s[sb][sblock], ath);\n\n                if (thmLR * msfix < thmM + thmS) {\n                    var f = thmLR * msfix / (thmM + thmS);\n                    thmM *= f;\n                    thmS *= f;\n                    assert$3(thmM + thmS > 0);\n                }\n                gfc.thm[2].s[sb][sblock] = Math.min(gfc.thm[2].s[sb][sblock],\n                    thmM);\n                gfc.thm[3].s[sb][sblock] = Math.min(gfc.thm[3].s[sb][sblock],\n                    thmS);\n            }\n        }\n    }\n\n    /**\n     * short block threshold calculation (part 2)\n     *\n     * partition band bo_s[sfb] is at the transition from scalefactor band sfb\n     * to the next one sfb+1; enn and thmm have to be split between them\n     */\n    function convert_partition2scalefac_s(gfc, eb, thr, chn, sblock) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder_1.SBMAX_s; ++b, ++sb) {\n            var bo_s_sb = gfc.bo_s[sb];\n            var npart_s = gfc.npart_s;\n            var b_lim = bo_s_sb < npart_s ? bo_s_sb : npart_s;\n            while (b < b_lim) {\n                assert$3(eb[b] >= 0);\n                // iff failed, it may indicate some index error elsewhere\n                assert$3(thr[b] >= 0);\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].s[sb][sblock] = enn;\n            gfc.thm[chn].s[sb][sblock] = thmm;\n\n            if (b >= npart_s) {\n                ++sb;\n                break;\n            }\n            assert$3(eb[b] >= 0);\n            // iff failed, it may indicate some index error elsewhere\n            assert$3(thr[b] >= 0);\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_s_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].s[sb][sblock] += enn;\n                gfc.thm[chn].s[sb][sblock] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder_1.SBMAX_s; ++sb) {\n            gfc.en[chn].s[sb][sblock] = 0;\n            gfc.thm[chn].s[sb][sblock] = 0;\n        }\n    }\n\n    /**\n     * longblock threshold calculation (part 2)\n     */\n    function convert_partition2scalefac_l(gfc, eb, thr, chn) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder_1.SBMAX_l; ++b, ++sb) {\n            var bo_l_sb = gfc.bo_l[sb];\n            var npart_l = gfc.npart_l;\n            var b_lim = bo_l_sb < npart_l ? bo_l_sb : npart_l;\n            while (b < b_lim) {\n                assert$3(eb[b] >= 0);\n                // iff failed, it may indicate some index error elsewhere\n                assert$3(thr[b] >= 0);\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].l[sb] = enn;\n            gfc.thm[chn].l[sb] = thmm;\n\n            if (b >= npart_l) {\n                ++sb;\n                break;\n            }\n            assert$3(eb[b] >= 0);\n            assert$3(thr[b] >= 0);\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_l_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].l[sb] += enn;\n                gfc.thm[chn].l[sb] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder_1.SBMAX_l; ++sb) {\n            gfc.en[chn].l[sb] = 0;\n            gfc.thm[chn].l[sb] = 0;\n        }\n    }\n\n    function compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var j, b;\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (var i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n        }\n        assert$3(b == gfc.npart_s);\n        assert$3(j == 129);\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var ecb = gfc.s3_ss[j++] * eb[kk];\n            ++kk;\n            while (kk <= gfc.s3ind_s[b][1]) {\n                ecb += gfc.s3_ss[j] * eb[kk];\n                ++j;\n                ++kk;\n            }\n\n            { /* limit calculated threshold by previous granule */\n                var x = rpelev_s * gfc.nb_s1[chn][b];\n                thr[b] = Math.min(ecb, x);\n            }\n            if (gfc.blocktype_old[chn & 1] == Encoder_1.SHORT_TYPE) {\n                /* limit calculated threshold by even older granule */\n                var x = rpelev2_s * gfc.nb_s2[chn][b];\n                var y = thr[b];\n                thr[b] = Math.min(x, y);\n            }\n\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n            assert$3(thr[b] >= 0);\n        }\n        for (; b <= Encoder_1.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function block_type_set(gfp, uselongblock, blocktype_d, blocktype) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock$3.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            blocktype[chn] = Encoder_1.NORM_TYPE;\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock$3.short_block_dispensed)\n                uselongblock[chn] = 1;\n            if (gfp.short_blocks == ShortBlock$3.short_block_forced)\n                uselongblock[chn] = 0;\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                assert$3(gfc.blocktype_old[chn] != Encoder_1.START_TYPE);\n                if (gfc.blocktype_old[chn] == Encoder_1.SHORT_TYPE)\n                    blocktype[chn] = Encoder_1.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype[chn] = Encoder_1.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder_1.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder_1.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder_1.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder_1.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype[chn];\n            // save for next call to l3psy_anal\n        }\n    }\n\n    function NS_INTERP(x, y, r) {\n        /* was pow((x),(r))*pow((y),1-(r)) */\n        if (r >= 1.0) {\n            /* 99.7% of the time */\n            return x;\n        }\n        if (r <= 0.0)\n            return y;\n        if (y > 0.0) {\n            /* rest of the time */\n            return (Math.pow(x / y, r) * y);\n        }\n        /* never happens */\n        return 0.0;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_s = [11.8, 13.6, 17.2, 32, 46.5,\n        51.3, 57.5, 67.1, 71.5, 84.6, 97.6, 130,\n        /* 255.8 */\n    ];\n\n    function pecalc_s(mr, masking_lower) {\n        var pe_s = 1236.28 / 4;\n        for (var sb = 0; sb < Encoder_1.SBMAX_s - 1; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thm = mr.thm.s[sb][sblock];\n                assert$3(sb < regcoef_s.length);\n                if (thm > 0.0) {\n                    var x = thm * masking_lower;\n                    var en = mr.en.s[sb][sblock];\n                    if (en > x) {\n                        if (en > x * 1e10) {\n                            pe_s += regcoef_s[sb] * (10.0 * LOG10);\n                        } else {\n                            assert$3(x > 0);\n                            pe_s += regcoef_s[sb] * Util$3.FAST_LOG10(en / x);\n                        }\n                    }\n                }\n            }\n        }\n\n        return pe_s;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_l = [6.8, 5.8, 5.8, 6.4, 6.5, 9.9,\n        12.1, 14.4, 15, 18.9, 21.6, 26.9, 34.2, 40.2, 46.8, 56.5,\n        60.7, 73.9, 85.7, 93.4, 126.1,\n        /* 241.3 */\n    ];\n\n    function pecalc_l(mr, masking_lower) {\n        var pe_l = 1124.23 / 4;\n        for (var sb = 0; sb < Encoder_1.SBMAX_l - 1; sb++) {\n            var thm = mr.thm.l[sb];\n            assert$3(sb < regcoef_l.length);\n            if (thm > 0.0) {\n                var x = thm * masking_lower;\n                var en = mr.en.l[sb];\n                if (en > x) {\n                    if (en > x * 1e10) {\n                        pe_l += regcoef_l[sb] * (10.0 * LOG10);\n                    } else {\n                        assert$3(x > 0);\n                        pe_l += regcoef_l[sb] * Util$3.FAST_LOG10(en / x);\n                    }\n                }\n            }\n        }\n        return pe_l;\n    }\n\n    function calc_energy(gfc, fftenergy, eb, max, avg) {\n        var b, j;\n\n        for (b = j = 0; b < gfc.npart_l; ++b) {\n            var ebb = 0, m = 0;\n            var i;\n            for (i = 0; i < gfc.numlines_l[b]; ++i, ++j) {\n                var el = fftenergy[j];\n                assert$3(el >= 0);\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            max[b] = m;\n            avg[b] = ebb * gfc.rnumlines_l[b];\n            assert$3(gfc.rnumlines_l[b] >= 0);\n            assert$3(ebb >= 0);\n            assert$3(eb[b] >= 0);\n            assert$3(max[b] >= 0);\n            assert$3(avg[b] >= 0);\n        }\n    }\n\n    function calc_mask_index_l(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            assert$3((gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_l - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            assert$3(a >= 0);\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                assert$3((gfc.numlines_l[b - 1] + gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1) > 0);\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b]\n                    + gfc.numlines_l[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n        assert$3(b > 0);\n        assert$3(b == gfc.npart_l - 1);\n\n        a = avg[b - 1] + avg[b];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            assert$3((gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n        assert$3(b == (gfc.npart_l - 1));\n    }\n\n    var fircoef = [\n        -8.65163e-18 * 2, -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2, 0.0931738 * 2,\n        -5.52212e-17 * 2, -0.313819 * 2\n    ];\n\n    this.L3psycho_anal_ns = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        /*\n         * to get a good cache performance, one has to think about the sequence,\n         * in which the variables are used.\n         */\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_L = new_float_n$3([2, Encoder_1.BLKSIZE]);\n        var wsamp_S = new_float_n$3([2, 3, Encoder_1.BLKSIZE_s]);\n\n        /* convolution */\n        var eb_l = new_float$3(Encoder_1.CBANDS + 1);\n        var eb_s = new_float$3(Encoder_1.CBANDS + 1);\n        var thr = new_float$3(Encoder_1.CBANDS + 2);\n\n        /* block type */\n        var blocktype = new_int$3(2), uselongblock = new_int$3(2);\n\n        /* usual variables like loop indices, etc.. */\n        var numchn, chn;\n        var b, i, j, k;\n        var sb, sblock;\n\n        /* variables used for --nspsytune */\n        var ns_hpfsmpl = new_float_n$3([2, 576]);\n        var pcfact;\n        var mask_idx_l = new_int$3(Encoder_1.CBANDS + 2), mask_idx_s = new_int$3(Encoder_1.CBANDS + 2);\n\n        Arrays$3.fill(mask_idx_s, 0);\n\n        numchn = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        if (gfp.mode == MPEGMode.JOINT_STEREO)\n            numchn = 4;\n\n        if (gfp.VBR == VbrMode$3.vbr_off)\n            pcfact = gfc.ResvMax == 0 ? 0 : ( gfc.ResvSize)\n            / gfc.ResvMax * 0.5;\n        else if (gfp.VBR == VbrMode$3.vbr_rh || gfp.VBR == VbrMode$3.vbr_mtrh\n            || gfp.VBR == VbrMode$3.vbr_mt) {\n            pcfact = 0.6;\n        } else\n            pcfact = 1.0;\n\n        /**********************************************************************\n         * Apply HPF of fs/4 to the input signal. This is used for attack\n         * detection / handling.\n         **********************************************************************/\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (chn = 0; chn < gfc.channels_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            var firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            assert$3(fircoef.length == ((NSFIRLEN - 1) / 2));\n            for (i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (numchn > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n\n        for (chn = 0; chn < numchn; chn++) {\n            var wsamp_l;\n            var wsamp_s;\n            var en_subshort = new_float$3(12);\n            var en_short = [0, 0, 0, 0];\n            var attack_intensity = new_float$3(12);\n            var ns_uselongblock = 1;\n            var attackThreshold;\n            var max = new_float$3(Encoder_1.CBANDS), avg = new_float$3(Encoder_1.CBANDS);\n            var ns_attacks = [0, 0, 0, 0];\n            var fftenergy = new_float$3(Encoder_1.HBLKSIZE);\n            var fftenergy_s = new_float_n$3([3, Encoder_1.HBLKSIZE_s]);\n\n            /*\n             * rh 20040301: the following loops do access one off the limits so\n             * I increase the array dimensions by one and initialize the\n             * accessed values to zero\n             */\n            assert$3(gfc.npart_s <= Encoder_1.CBANDS);\n            assert$3(gfc.npart_l <= Encoder_1.CBANDS);\n\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                assert$3(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            if (chn == 2) {\n                for (i = 0; i < 576; i++) {\n                    var l, r;\n                    l = ns_hpfsmpl[0][i];\n                    r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            {\n                var pf = ns_hpfsmpl[chn & 1];\n                var pfPos = 0;\n                for (i = 0; i < 9; i++) {\n                    var pfe = pfPos + 576 / 9;\n                    var p = 1.;\n                    for (; pfPos < pfe; pfPos++)\n                        if (p < Math.abs(pf[pfPos]))\n                            p = Math.abs(pf[pfPos]);\n\n                    gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                    en_short[1 + i / 3] += p;\n                    if (p > en_subshort[i + 3 - 2]) {\n                        assert$3(en_subshort[i + 3 - 2] > 0);\n                        p = p / en_subshort[i + 3 - 2];\n                    } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                        assert$3(p > 0);\n                        p = en_subshort[i + 3 - 2] / (p * 10.0);\n                    } else\n                        p = 0.0;\n                    attack_intensity[i + 3] = p;\n                }\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (i = 1; i < 12; i++)\n                    if (x < attack_intensity[i])\n                        x = attack_intensity[i];\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            for (i = 0; i < 12; i++)\n                if (0 == ns_attacks[i / 3]\n                    && attack_intensity[i] > attackThreshold)\n                    ns_attacks[i / 3] = (i % 3) + 1;\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            for (i = 1; i < 4; i++) {\n                var ratio;\n                if (en_short[i - 1] > en_short[i]) {\n                    assert$3(en_short[i] > 0);\n                    ratio = en_short[i - 1] / en_short[i];\n                } else {\n                    assert$3(en_short[i - 1] > 0);\n                    ratio = en_short[i] / en_short[i - 1];\n                }\n                if (ratio < 1.7) {\n                    ns_attacks[i] = 0;\n                    if (i == 1)\n                        ns_attacks[0] = 0;\n                }\n            }\n\n            if (ns_attacks[0] != 0 && gfc.nsPsy.lastAttacks[chn] != 0)\n                ns_attacks[0] = 0;\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[0] + ns_attacks[1] + ns_attacks[2] + ns_attacks[3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[1] != 0 && ns_attacks[0] != 0)\n                    ns_attacks[1] = 0;\n                if (ns_attacks[2] != 0 && ns_attacks[1] != 0)\n                    ns_attacks[2] = 0;\n                if (ns_attacks[3] != 0 && ns_attacks[2] != 0)\n                    ns_attacks[3] = 0;\n            }\n\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n\n            /*********************************************************************\n             * compute FFTs\n             *********************************************************************/\n            wsamp_s = wsamp_S;\n            wsamp_l = wsamp_L;\n            compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, (chn & 1),\n                wsamp_s, (chn & 1), gr_out, chn, buffer, bufPos);\n\n            /*********************************************************************\n             * Calculate the energy and the tonality of each partition.\n             *********************************************************************/\n            calc_energy(gfc, fftenergy, eb_l, max, avg);\n            calc_mask_index_l(gfc, max, avg, mask_idx_l);\n            /* compute masking thresholds for short blocks */\n            for (sblock = 0; sblock < 3; sblock++) {\n                var enn, thmm;\n                compute_masking_s(gfp, fftenergy_s, eb_s, thr, chn, sblock);\n                convert_partition2scalefac_s(gfc, eb_s, thr, chn, sblock);\n                /**** short block pre-echo control ****/\n                for (sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                    thmm = gfc.thm[chn].s[sb][sblock];\n\n                    thmm *= NS_PREECHO_ATT0;\n                    if (ns_attacks[sblock] >= 2 || ns_attacks[sblock + 1] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT1 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    if (ns_attacks[sblock] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    } else if ((sblock != 0 && ns_attacks[sblock - 1] == 3)\n                        || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                        var idx = (sblock != 2) ? sblock + 1 : 0;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    /* pulse like signal detection for fatboy.wav and so on */\n                    enn = en_subshort[sblock * 3 + 3]\n                        + en_subshort[sblock * 3 + 4]\n                        + en_subshort[sblock * 3 + 5];\n                    if (en_subshort[sblock * 3 + 5] * 6 < enn) {\n                        thmm *= 0.5;\n                        if (en_subshort[sblock * 3 + 4] * 6 < enn)\n                            thmm *= 0.5;\n                    }\n\n                    gfc.thm[chn].s[sb][sblock] = thmm;\n                }\n            }\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[2];\n\n            /*********************************************************************\n             * convolve the partitioned energy and unpredictability with the\n             * spreading function, s3_l[b][k]\n             ********************************************************************/\n            k = 0;\n            {\n                for (b = 0; b < gfc.npart_l; b++) {\n                    /*\n                     * convolve the partitioned energy with the spreading\n                     * function\n                     */\n                    var kk = gfc.s3ind[b][0];\n                    var eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                    var ecb = gfc.s3_ll[k++] * eb2;\n                    while (++kk <= gfc.s3ind[b][1]) {\n                        eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                        ecb = mask_add(ecb, gfc.s3_ll[k++] * eb2, kk, kk - b,\n                            gfc, 0);\n                    }\n                    ecb *= 0.158489319246111;\n                    /* pow(10,-0.8) */\n\n                    /**** long block pre-echo control ****/\n                    /**\n                     * <PRE>\n                     * dont use long block pre-echo control if previous granule was\n                     * a short block.  This is to avoid the situation:\n                     * frame0:  quiet (very low masking)\n                     * frame1:  surge  (triggers short blocks)\n                     * frame2:  regular frame.  looks like pre-echo when compared to\n                     *          frame0, but all pre-echo was in frame1.\n                     * </PRE>\n                     */\n                    /*\n                     * chn=0,1 L and R channels\n                     *\n                     * chn=2,3 S and M channels.\n                     */\n\n                    if (gfc.blocktype_old[chn & 1] == Encoder_1.SHORT_TYPE)\n                        thr[b] = ecb;\n                    else\n                        thr[b] = NS_INTERP(\n                            Math.min(ecb, Math.min(rpelev\n                                * gfc.nb_1[chn][b], rpelev2\n                                * gfc.nb_2[chn][b])), ecb, pcfact);\n\n                    gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n                    gfc.nb_1[chn][b] = ecb;\n                }\n            }\n            for (; b <= Encoder_1.CBANDS; ++b) {\n                eb_l[b] = 0;\n                thr[b] = 0;\n            }\n            /* compute masking thresholds for long blocks */\n            convert_partition2scalefac_l(gfc, eb_l, thr, chn);\n        }\n        /* end loop over chn */\n\n        if (gfp.mode == MPEGMode.STEREO || gfp.mode == MPEGMode.JOINT_STEREO) {\n            if (gfp.interChRatio > 0.0) {\n                calc_interchannel_masking(gfp, gfp.interChRatio);\n            }\n        }\n\n        if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            var msfix;\n            msfix1(gfc);\n            msfix = gfp.msfix;\n            if (Math.abs(msfix) > 0.0)\n                ns_msfix(gfc, msfix, gfp.ATHlower * gfc.ATH.adjust);\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        block_type_set(gfp, uselongblock, blocktype_d, blocktype);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (chn = 0; chn < numchn; chn++) {\n            var ppe;\n            var ppePos = 0;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder_1.NORM_TYPE;\n                if (blocktype_d[0] == Encoder_1.SHORT_TYPE\n                    || blocktype_d[1] == Encoder_1.SHORT_TYPE)\n                    type = Encoder_1.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder_1.SHORT_TYPE)\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            else\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n\n            if (gfp.analysis)\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n\n        }\n        return 0;\n    };\n\n    function vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out, fftenergy, wsamp_l, wsamp_lPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n        } else if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder_1.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util$3.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder_1.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = wsamp_l[wsamp_lPos + 0][Encoder_1.BLKSIZE / 2 - j];\n            var im = wsamp_l[wsamp_lPos + 0][Encoder_1.BLKSIZE / 2 + j];\n            fftenergy[Encoder_1.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder_1.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder_1.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n    }\n\n    function vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock, fftenergy_s, wsamp_s, wsamp_sPos) {\n        var gfc = gfp.internal_flags;\n\n        if (sblock == 0 && chn < 2) {\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder_1.BLKSIZE_s - 1; j >= 0; --j) {\n                var l = wsamp_s[wsamp_sPos + 0][sblock][j];\n                var r = wsamp_s[wsamp_sPos + 1][sblock][j];\n                wsamp_s[wsamp_sPos + 0][sblock][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                wsamp_s[wsamp_sPos + 1][sblock][j] = (l - r) * Util$3.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy_s[sblock][0] = wsamp_s[wsamp_sPos + 0][sblock][0];\n        fftenergy_s[sblock][0] *= fftenergy_s[sblock][0];\n        for (var j = Encoder_1.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n            var re = wsamp_s[wsamp_sPos + 0][sblock][Encoder_1.BLKSIZE_s / 2 - j];\n            var im = wsamp_s[wsamp_sPos + 0][sblock][Encoder_1.BLKSIZE_s / 2 + j];\n            fftenergy_s[sblock][Encoder_1.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n    }\n\n    /**\n     * compute loudness approximation (used for ATH auto-level adjustment)\n     */\n    function vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn, fftenergy) {\n        var gfc = gfp.internal_flags;\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    var fircoef_ = [-8.65163e-18 * 2,\n        -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2,\n        0.0931738 * 2, -5.52212e-17 * 2, -0.313819 * 2];\n\n    /**\n     * Apply HPF of fs/4 to the input signal. This is used for attack detection\n     * / handling.\n     */\n    function vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, energy, sub_short_factor, ns_attacks, uselongblock) {\n        var ns_hpfsmpl = new_float_n$3([2, 576]);\n        var gfc = gfp.internal_flags;\n        var n_chn_out = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4 : n_chn_out;\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (var chn = 0; chn < n_chn_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            assert$3(fircoef_.length == ((NSFIRLEN - 1) / 2));\n            for (var i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (var j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef_[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef_[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (n_chn_psy > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var attack_intensity = new_float$3(12);\n            var en_subshort = new_float$3(12);\n            var en_short = [0, 0, 0, 0];\n            var pf = ns_hpfsmpl[chn & 1];\n            var pfPos = 0;\n            var attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            var ns_uselongblock = 1;\n\n            if (chn == 2) {\n                for (var i = 0, j = 576; j > 0; ++i, --j) {\n                    var l = ns_hpfsmpl[0][i];\n                    var r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (var i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                assert$3(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            for (var i = 0; i < 9; i++) {\n                var pfe = pfPos + 576 / 9;\n                var p = 1.;\n                for (; pfPos < pfe; pfPos++)\n                    if (p < Math.abs(pf[pfPos]))\n                        p = Math.abs(pf[pfPos]);\n\n                gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                en_short[1 + i / 3] += p;\n                if (p > en_subshort[i + 3 - 2]) {\n                    assert$3(en_subshort[i + 3 - 2] > 0);\n                    p = p / en_subshort[i + 3 - 2];\n                } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                    assert$3(p > 0);\n                    p = en_subshort[i + 3 - 2] / (p * 10.0);\n                } else {\n                    p = 0.0;\n                }\n                attack_intensity[i + 3] = p;\n            }\n            /* pulse like signal detection for fatboy.wav and so on */\n            for (var i = 0; i < 3; ++i) {\n                var enn = en_subshort[i * 3 + 3]\n                    + en_subshort[i * 3 + 4] + en_subshort[i * 3 + 5];\n                var factor = 1.;\n                if (en_subshort[i * 3 + 5] * 6 < enn) {\n                    factor *= 0.5;\n                    if (en_subshort[i * 3 + 4] * 6 < enn) {\n                        factor *= 0.5;\n                    }\n                }\n                sub_short_factor[chn][i] = factor;\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (var i = 1; i < 12; i++) {\n                    if (x < attack_intensity[i]) {\n                        x = attack_intensity[i];\n                    }\n                }\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            for (var i = 0; i < 12; i++) {\n                if (0 == ns_attacks[chn][i / 3]\n                    && attack_intensity[i] > attackThreshold) {\n                    ns_attacks[chn][i / 3] = (i % 3) + 1;\n                }\n            }\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            /* Good samples to show the effect are Trumpet test songs */\n            /*\n             * GB: tuned (1) to avoid too many short blocks for test sample\n             * TRUMPET\n             */\n            /*\n             * RH: tuned (2) to let enough short blocks through for test sample\n             * FSOL and SNAPS\n             */\n            for (var i = 1; i < 4; i++) {\n                var u = en_short[i - 1];\n                var v = en_short[i];\n                var m = Math.max(u, v);\n                if (m < 40000) { /* (2) */\n                    if (u < 1.7 * v && v < 1.7 * u) { /* (1) */\n                        if (i == 1 && ns_attacks[chn][0] <= ns_attacks[chn][i]) {\n                            ns_attacks[chn][0] = 0;\n                        }\n                        ns_attacks[chn][i] = 0;\n                    }\n                }\n            }\n\n            if (ns_attacks[chn][0] <= gfc.nsPsy.lastAttacks[chn]) {\n                ns_attacks[chn][0] = 0;\n            }\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[chn][0] + ns_attacks[chn][1]\n                + ns_attacks[chn][2] + ns_attacks[chn][3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[chn][1] != 0 && ns_attacks[chn][0] != 0) {\n                    ns_attacks[chn][1] = 0;\n                }\n                if (ns_attacks[chn][2] != 0 && ns_attacks[chn][1] != 0) {\n                    ns_attacks[chn][2] = 0;\n                }\n                if (ns_attacks[chn][3] != 0 && ns_attacks[chn][2] != 0) {\n                    ns_attacks[chn][3] = 0;\n                }\n            }\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n        }\n    }\n\n    function vbrpsy_skip_masking_s(gfc, chn, sblock) {\n        if (sblock == 0) {\n            for (var b = 0; b < gfc.npart_s; b++) {\n                gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n                gfc.nb_s1[chn][b] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_skip_masking_l(gfc, chn) {\n        for (var b = 0; b < gfc.npart_l; b++) {\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = 0;\n        }\n    }\n\n    function psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            assert$3((gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_s - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            assert$3(b + 1 < gfc.npart_s);\n            assert$3(a >= 0);\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                assert$3((gfc.numlines_s[b - 1] + gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1) > 0);\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b]\n                    + gfc.numlines_s[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n        assert$3(b > 0);\n        assert$3(b == gfc.npart_s - 1);\n\n        a = avg[b - 1] + avg[b];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            assert$3((gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n        assert$3(b == (gfc.npart_s - 1));\n    }\n\n    function vbrpsy_compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var max = new float[Encoder_1.CBANDS], avg = new_float$3(Encoder_1.CBANDS);\n        var i, j, b;\n        var mask_idx_s = new int[Encoder_1.CBANDS];\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            assert$3(ebb >= 0);\n            max[b] = m;\n            assert$3(n > 0);\n            avg[b] = ebb / n;\n            assert$3(avg[b] >= 0);\n        }\n        assert$3(b == gfc.npart_s);\n        assert$3(j == 129);\n        for (; b < Encoder_1.CBANDS; ++b) {\n            max[b] = 0;\n            avg[b] = 0;\n        }\n        psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx_s);\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var last = gfc.s3ind_s[b][1];\n            var dd, dd_n;\n            var x, ecb, avg_mask;\n            dd = mask_idx_s[kk];\n            dd_n = 1;\n            ecb = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n            ++j;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_s[kk];\n                dd_n += 1;\n                x = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n                ecb = vbrpsy_mask_add(ecb, x, kk - b);\n                ++j;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n            thr[b] = ecb;\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_s[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb[b]) {\n                thr[b] = eb[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n\n            assert$3(thr[b] >= 0);\n        }\n        for (; b < Encoder_1.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_masking_l(gfc, fftenergy, eb_l, thr, chn) {\n        var max = new_float$3(Encoder_1.CBANDS), avg = new_float$3(Encoder_1.CBANDS);\n        var mask_idx_l = new_int$3(Encoder_1.CBANDS + 2);\n        var b;\n\n        /*********************************************************************\n         * Calculate the energy and the tonality of each partition.\n         *********************************************************************/\n        calc_energy(gfc, fftenergy, eb_l, max, avg);\n        calc_mask_index_l(gfc, max, avg, mask_idx_l);\n\n        /*********************************************************************\n         * convolve the partitioned energy and unpredictability with the\n         * spreading function, s3_l[b][k]\n         ********************************************************************/\n        var k = 0;\n        for (b = 0; b < gfc.npart_l; b++) {\n            var x, ecb, avg_mask, t;\n            /* convolve the partitioned energy with the spreading function */\n            var kk = gfc.s3ind[b][0];\n            var last = gfc.s3ind[b][1];\n            var dd = 0, dd_n = 0;\n            dd = mask_idx_l[kk];\n            dd_n += 1;\n            ecb = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n            ++k;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_l[kk];\n                dd_n += 1;\n                x = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n                t = vbrpsy_mask_add(ecb, x, kk - b);\n                ecb = t;\n                ++k;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n\n            /**** long block pre-echo control ****/\n            /**\n             * <PRE>\n             * dont use long block pre-echo control if previous granule was\n             * a short block.  This is to avoid the situation:\n             * frame0:  quiet (very low masking)\n             * frame1:  surge  (triggers short blocks)\n             * frame2:  regular frame.  looks like pre-echo when compared to\n             *          frame0, but all pre-echo was in frame1.\n             * </PRE>\n             */\n            /*\n             * chn=0,1 L and R channels chn=2,3 S and M channels.\n             */\n            if (gfc.blocktype_old[chn & 0x01] == Encoder_1.SHORT_TYPE) {\n                var ecb_limit = rpelev * gfc.nb_1[chn][b];\n                if (ecb_limit > 0) {\n                    thr[b] = Math.min(ecb, ecb_limit);\n                } else {\n                    /**\n                     * <PRE>\n                     * Robert 071209:\n                     * Because we don't calculate long block psy when we know a granule\n                     * should be of short blocks, we don't have any clue how the granule\n                     * before would have looked like as a long block. So we have to guess\n                     * a little bit for this END_TYPE block.\n                     * Most of the time we get away with this sloppyness. (fingers crossed :)\n                     * The speed increase is worth it.\n                     * </PRE>\n                     */\n                    thr[b] = Math.min(ecb, eb_l[b] * NS_PREECHO_ATT2);\n                }\n            } else {\n                var ecb_limit_2 = rpelev2 * gfc.nb_2[chn][b];\n                var ecb_limit_1 = rpelev * gfc.nb_1[chn][b];\n                var ecb_limit;\n                if (ecb_limit_2 <= 0) {\n                    ecb_limit_2 = ecb;\n                }\n                if (ecb_limit_1 <= 0) {\n                    ecb_limit_1 = ecb;\n                }\n                if (gfc.blocktype_old[chn & 0x01] == Encoder_1.NORM_TYPE) {\n                    ecb_limit = Math.min(ecb_limit_1, ecb_limit_2);\n                } else {\n                    ecb_limit = ecb_limit_1;\n                }\n                thr[b] = Math.min(ecb, ecb_limit);\n            }\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_l[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb_l[b]) {\n                thr[b] = eb_l[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            assert$3(thr[b] >= 0);\n        }\n        for (; b < Encoder_1.CBANDS; ++b) {\n            eb_l[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_block_type(gfp, uselongblock) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock$3.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock$3.short_block_dispensed) {\n                uselongblock[chn] = 1;\n            }\n            if (gfp.short_blocks == ShortBlock$3.short_block_forced) {\n                uselongblock[chn] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            var blocktype = Encoder_1.NORM_TYPE;\n            /* disable short blocks */\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                assert$3(gfc.blocktype_old[chn] != Encoder_1.START_TYPE);\n                if (gfc.blocktype_old[chn] == Encoder_1.SHORT_TYPE)\n                    blocktype = Encoder_1.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype = Encoder_1.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder_1.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder_1.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder_1.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder_1.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype;\n            // save for next call to l3psy_anal\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function vbrpsy_compute_MS_thresholds(eb, thr, cb_mld, ath_cb, athadjust, msfix, n) {\n        var msfix2 = msfix * 2;\n        var athlower = msfix > 0 ? Math.pow(10, athadjust) : 1;\n        var rside, rmid;\n        for (var b = 0; b < n; ++b) {\n            var ebM = eb[2][b];\n            var ebS = eb[3][b];\n            var thmL = thr[0][b];\n            var thmR = thr[1][b];\n            var thmM = thr[2][b];\n            var thmS = thr[3][b];\n\n            /* use this fix if L & R masking differs by 2db or less */\n            if (thmL <= 1.58 * thmR && thmR <= 1.58 * thmL) {\n                var mld_m = cb_mld[b] * ebS;\n                var mld_s = cb_mld[b] * ebM;\n                rmid = Math.max(thmM, Math.min(thmS, mld_m));\n                rside = Math.max(thmS, Math.min(thmM, mld_s));\n            } else {\n                rmid = thmM;\n                rside = thmS;\n            }\n            if (msfix > 0) {\n                /***************************************************************/\n                /* Adjust M/S maskings if user set \"msfix\" */\n                /***************************************************************/\n                /* Naoki Shibata 2000 */\n                var thmLR, thmMS;\n                var ath = ath_cb[b] * athlower;\n                thmLR = Math.min(Math.max(thmL, ath), Math.max(thmR, ath));\n                thmM = Math.max(rmid, ath);\n                thmS = Math.max(rside, ath);\n                thmMS = thmM + thmS;\n                if (thmMS > 0 && (thmLR * msfix2) < thmMS) {\n                    var f = thmLR * msfix2 / thmMS;\n                    thmM *= f;\n                    thmS *= f;\n                    assert$3(thmMS > 0);\n                }\n                rmid = Math.min(thmM, rmid);\n                rside = Math.min(thmS, rside);\n            }\n            if (rmid > ebM) {\n                rmid = ebM;\n            }\n            if (rside > ebS) {\n                rside = ebS;\n            }\n            thr[2][b] = rmid;\n            thr[3][b] = rside;\n        }\n    }\n\n    this.L3psycho_anal_vbr = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_l;\n        var wsamp_s;\n        var fftenergy = new_float$3(Encoder_1.HBLKSIZE);\n        var fftenergy_s = new_float_n$3([3, Encoder_1.HBLKSIZE_s]);\n        var wsamp_L = new_float_n$3([2, Encoder_1.BLKSIZE]);\n        var wsamp_S = new_float_n$3([2, 3, Encoder_1.BLKSIZE_s]);\n        var eb = new_float_n$3([4, Encoder_1.CBANDS]), thr = new_float_n$3([4, Encoder_1.CBANDS]);\n        var sub_short_factor = new_float_n$3([4, 3]);\n        var pcfact = 0.6;\n\n        /* block type */\n        var ns_attacks = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0],\n            [0, 0, 0, 0]];\n        var uselongblock = new_int$3(2);\n\n        /* usual variables like loop indices, etc.. */\n\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4\n            : gfc.channels_out;\n\n        vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio,\n            masking_MS_ratio, energy, sub_short_factor, ns_attacks,\n            uselongblock);\n\n        vbrpsy_compute_block_type(gfp, uselongblock);\n\n        /* LONG BLOCK CASE */\n        {\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                wsamp_l = wsamp_L;\n                vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out,\n                    fftenergy, wsamp_l, ch01);\n\n                vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn,\n                    fftenergy);\n\n                if (uselongblock[ch01] != 0) {\n                    vbrpsy_compute_masking_l(gfc, fftenergy, eb[chn], thr[chn],\n                        chn);\n                } else {\n                    vbrpsy_skip_masking_l(gfc, chn);\n                }\n            }\n            if ((uselongblock[0] + uselongblock[1]) == 2) {\n                /* M/S channel */\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_l,\n                        gfc.ATH.cb_l, gfp.ATHlower * gfc.ATH.adjust,\n                        gfp.msfix, gfc.npart_l);\n                }\n            }\n            /* TODO: apply adaptive ATH masking here ?? */\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                if (uselongblock[ch01] != 0) {\n                    convert_partition2scalefac_l(gfc, eb[chn], thr[chn], chn);\n                }\n            }\n        }\n\n        /* SHORT BLOCKS CASE */\n        {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n\n                    if (uselongblock[ch01] != 0) {\n                        vbrpsy_skip_masking_s(gfc, chn, sblock);\n                    } else {\n                        /* compute masking thresholds for short blocks */\n                        wsamp_s = wsamp_S;\n                        vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock,\n                            fftenergy_s, wsamp_s, ch01);\n                        vbrpsy_compute_masking_s(gfp, fftenergy_s, eb[chn],\n                            thr[chn], chn, sblock);\n                    }\n                }\n                if ((uselongblock[0] + uselongblock[1]) == 0) {\n                    /* M/S channel */\n                    if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                        vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_s,\n                            gfc.ATH.cb_s, gfp.ATHlower * gfc.ATH.adjust,\n                            gfp.msfix, gfc.npart_s);\n                    }\n                    /* L/R channel */\n                }\n                /* TODO: apply adaptive ATH masking here ?? */\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n                    if (0 == uselongblock[ch01]) {\n                        convert_partition2scalefac_s(gfc, eb[chn], thr[chn],\n                            chn, sblock);\n                    }\n                }\n            }\n\n            /**** short block pre-echo control ****/\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n\n                if (uselongblock[ch01] != 0) {\n                    continue;\n                }\n                for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                    var new_thmm = new_float$3(3);\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        var thmm = gfc.thm[chn].s[sb][sblock];\n                        thmm *= NS_PREECHO_ATT0;\n\n                        if (ns_attacks[chn][sblock] >= 2\n                            || ns_attacks[chn][sblock + 1] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT1 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if (ns_attacks[chn][sblock] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if ((sblock != 0 && ns_attacks[chn][sblock - 1] == 3)\n                            || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                            var idx = (sblock != 2) ? sblock + 1 : 0;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        }\n\n                        /* pulse like signal detection for fatboy.wav and so on */\n                        thmm *= sub_short_factor[chn][sblock];\n\n                        new_thmm[sblock] = thmm;\n                    }\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        gfc.thm[chn].s[sb][sblock] = new_thmm[sblock];\n                    }\n                }\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[chn][2];\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var ppe;\n            var ppePos;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder_1.NORM_TYPE;\n                if (blocktype_d[0] == Encoder_1.SHORT_TYPE\n                    || blocktype_d[1] == Encoder_1.SHORT_TYPE)\n                    type = Encoder_1.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder_1.SHORT_TYPE) {\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            } else {\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n            }\n\n            if (gfp.analysis) {\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n            }\n        }\n        return 0;\n    };\n\n    function s3_func_x(bark, hf_slope) {\n        var tempx = bark, tempy;\n\n        if (tempx >= 0) {\n            tempy = -tempx * 27;\n        } else {\n            tempy = tempx * hf_slope;\n        }\n        if (tempy <= -72.0) {\n            return 0;\n        }\n        return Math.exp(tempy * LN_TO_LOG10);\n    }\n\n    function norm_s3_func_x(hf_slope) {\n        var lim_a = 0, lim_b = 0;\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x -= 1)\n                ;\n            l = x;\n            h = 0;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    h = x;\n                } else {\n                    l = x;\n                }\n            }\n            lim_a = l;\n        }\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x += 1)\n                ;\n            l = 0;\n            h = x;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    l = x;\n                } else {\n                    h = x;\n                }\n            }\n            lim_b = h;\n        }\n        {\n            var sum = 0;\n            var m = 1000;\n            var i;\n            for (i = 0; i <= m; ++i) {\n                var x = lim_a + i * (lim_b - lim_a) / m;\n                var y = s3_func_x(x, hf_slope);\n                sum += y;\n            }\n            {\n                var norm = (m + 1) / (sum * (lim_b - lim_a));\n                /* printf( \"norm = %lf\\n\",norm); */\n                return norm;\n            }\n        }\n    }\n\n    /**\n     *   The spreading function.  Values returned in units of energy\n     */\n    function s3_func(bark) {\n        var tempx, x, tempy, temp;\n        tempx = bark;\n        if (tempx >= 0)\n            tempx *= 3;\n        else\n            tempx *= 1.5;\n\n        if (tempx >= 0.5 && tempx <= 2.5) {\n            temp = tempx - 0.5;\n            x = 8.0 * (temp * temp - 2.0 * temp);\n        } else\n            x = 0.0;\n        tempx += 0.474;\n        tempy = 15.811389 + 7.5 * tempx - 17.5\n            * Math.sqrt(1.0 + tempx * tempx);\n\n        if (tempy <= -60.0)\n            return 0.0;\n\n        tempx = Math.exp((x + tempy) * LN_TO_LOG10);\n\n        /**\n         * <PRE>\n         * Normalization.  The spreading function should be normalized so that:\n         * +inf\n         * /\n         * |  s3 [ bark ]  d(bark)   =  1\n         * /\n         * -inf\n         * </PRE>\n         */\n        tempx /= .6609193;\n        return tempx;\n    }\n\n    /**\n     * see for example \"Zwicker: Psychoakustik, 1982; ISBN 3-540-11401-7\n     */\n    function freq2bark(freq) {\n        /* input: freq in hz output: barks */\n        if (freq < 0)\n            freq = 0;\n        freq = freq * 0.001;\n        return 13.0 * Math.atan(.76 * freq) + 3.5\n            * Math.atan(freq * freq / (7.5 * 7.5));\n    }\n\n    function init_numline(numlines, bo, bm, bval, bval_width, mld, bo_w, sfreq, blksize, scalepos, deltafreq, sbmax) {\n        var b_frq = new_float$3(Encoder_1.CBANDS + 1);\n        var sample_freq_frac = sfreq / (sbmax > 15 ? 2 * 576 : 2 * 192);\n        var partition = new_int$3(Encoder_1.HBLKSIZE);\n        var i;\n        sfreq /= blksize;\n        var j = 0;\n        var ni = 0;\n        /* compute numlines, the number of spectral lines in each partition band */\n        /* each partition band should be about DELBARK wide. */\n        for (i = 0; i < Encoder_1.CBANDS; i++) {\n            var bark1;\n            var j2;\n            bark1 = freq2bark(sfreq * j);\n\n            b_frq[i] = sfreq * j;\n\n            for (j2 = j; freq2bark(sfreq * j2) - bark1 < DELBARK\n            && j2 <= blksize / 2; j2++)\n                ;\n\n            numlines[i] = j2 - j;\n            ni = i + 1;\n\n            while (j < j2) {\n                assert$3(j < Encoder_1.HBLKSIZE);\n                partition[j++] = i;\n            }\n            if (j > blksize / 2) {\n                j = blksize / 2;\n                ++i;\n                break;\n            }\n        }\n        assert$3(i < Encoder_1.CBANDS);\n        b_frq[i] = sfreq * j;\n\n        for (var sfb = 0; sfb < sbmax; sfb++) {\n            var i1, i2, start, end;\n            var arg;\n            start = scalepos[sfb];\n            end = scalepos[sfb + 1];\n\n            i1 = 0 | Math.floor(.5 + deltafreq * (start - .5));\n            if (i1 < 0)\n                i1 = 0;\n            i2 = 0 | Math.floor(.5 + deltafreq * (end - .5));\n\n            if (i2 > blksize / 2)\n                i2 = blksize / 2;\n\n            bm[sfb] = (partition[i1] + partition[i2]) / 2;\n            bo[sfb] = partition[i2];\n            var f_tmp = sample_freq_frac * end;\n            /*\n             * calculate how much of this band belongs to current scalefactor\n             * band\n             */\n            bo_w[sfb] = (f_tmp - b_frq[bo[sfb]])\n                / (b_frq[bo[sfb] + 1] - b_frq[bo[sfb]]);\n            if (bo_w[sfb] < 0) {\n                bo_w[sfb] = 0;\n            } else {\n                if (bo_w[sfb] > 1) {\n                    bo_w[sfb] = 1;\n                }\n            }\n            /* setup stereo demasking thresholds */\n            /* formula reverse enginerred from plot in paper */\n            arg = freq2bark(sfreq * scalepos[sfb] * deltafreq);\n            arg = ( Math.min(arg, 15.5) / 15.5);\n\n            mld[sfb] = Math.pow(10.0,\n                1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n        }\n\n        /* compute bark values of each critical band */\n        j = 0;\n        for (var k = 0; k < ni; k++) {\n            var w = numlines[k];\n            var bark1, bark2;\n\n            bark1 = freq2bark(sfreq * (j));\n            bark2 = freq2bark(sfreq * (j + w - 1));\n            bval[k] = .5 * (bark1 + bark2);\n\n            bark1 = freq2bark(sfreq * (j - .5));\n            bark2 = freq2bark(sfreq * (j + w - .5));\n            bval_width[k] = bark2 - bark1;\n            j += w;\n        }\n\n        return ni;\n    }\n\n    function init_s3_values(s3ind, npart, bval, bval_width, norm, use_old_s3) {\n        var s3 = new_float_n$3([Encoder_1.CBANDS, Encoder_1.CBANDS]);\n        /*\n         * The s3 array is not linear in the bark scale.\n         *\n         * bval[x] should be used to get the bark value.\n         */\n        var j;\n        var numberOfNoneZero = 0;\n\n        /**\n         * <PRE>\n         * s[i][j], the value of the spreading function,\n         * centered at band j (masker), for band i (maskee)\n         *\n         * i.e.: sum over j to spread into signal barkval=i\n         * NOTE: i and j are used opposite as in the ISO docs\n         * </PRE>\n         */\n        if (use_old_s3) {\n            for (var i = 0; i < npart; i++) {\n                for (j = 0; j < npart; j++) {\n                    var v = s3_func(bval[i] - bval[j]) * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        } else {\n            for (j = 0; j < npart; j++) {\n                var hf_slope = 15 + Math.min(21 / bval[j], 12);\n                var s3_x_norm = norm_s3_func_x(hf_slope);\n                for (var i = 0; i < npart; i++) {\n                    var v = s3_x_norm\n                        * s3_func_x(bval[i] - bval[j], hf_slope)\n                        * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        }\n        for (var i = 0; i < npart; i++) {\n            for (j = 0; j < npart; j++) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][0] = j;\n\n            for (j = npart - 1; j > 0; j--) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][1] = j;\n            numberOfNoneZero += (s3ind[i][1] - s3ind[i][0] + 1);\n        }\n\n        var p = new_float$3(numberOfNoneZero);\n        var k = 0;\n        for (var i = 0; i < npart; i++)\n            for (j = s3ind[i][0]; j <= s3ind[i][1]; j++)\n                p[k++] = s3[i][j];\n\n        return p;\n    }\n\n    function stereo_demask(f) {\n        /* setup stereo demasking thresholds */\n        /* formula reverse enginerred from plot in paper */\n        var arg = freq2bark(f);\n        arg = (Math.min(arg, 15.5) / 15.5);\n\n        return Math.pow(10.0,\n            1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n    }\n\n    /**\n     * NOTE: the bitrate reduction from the inter-channel masking effect is low\n     * compared to the chance of getting annyoing artefacts. L3psycho_anal_vbr\n     * does not use this feature. (Robert 071216)\n     */\n    this.psymodel_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var i;\n        var useOldS3 = true;\n        var bvl_a = 13, bvl_b = 24;\n        var snr_l_a = 0, snr_l_b = 0;\n        var snr_s_a = -8.25, snr_s_b = -4.5;\n        var bval = new_float$3(Encoder_1.CBANDS);\n        var bval_width = new_float$3(Encoder_1.CBANDS);\n        var norm = new_float$3(Encoder_1.CBANDS);\n        var sfreq = gfp.out_samplerate;\n\n        switch (gfp.experimentalZ) {\n            default:\n            case 0:\n                useOldS3 = true;\n                break;\n            case 1:\n                useOldS3 = (gfp.VBR == VbrMode$3.vbr_mtrh || gfp.VBR == VbrMode$3.vbr_mt) ? false\n                    : true;\n                break;\n            case 2:\n                useOldS3 = false;\n                break;\n            case 3:\n                bvl_a = 8;\n                snr_l_a = -1.75;\n                snr_l_b = -0.0125;\n                snr_s_a = -8.25;\n                snr_s_b = -2.25;\n                break;\n        }\n        gfc.ms_ener_ratio_old = .25;\n        gfc.blocktype_old[0] = gfc.blocktype_old[1] = Encoder_1.NORM_TYPE;\n        // the vbr header is long blocks\n\n        for (i = 0; i < 4; ++i) {\n            for (var j = 0; j < Encoder_1.CBANDS; ++j) {\n                gfc.nb_1[i][j] = 1e20;\n                gfc.nb_2[i][j] = 1e20;\n                gfc.nb_s1[i][j] = gfc.nb_s2[i][j] = 1.0;\n            }\n            for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n                gfc.en[i].l[sb] = 1e20;\n                gfc.thm[i].l[sb] = 1e20;\n            }\n            for (var j = 0; j < 3; ++j) {\n                for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                    gfc.en[i].s[sb][j] = 1e20;\n                    gfc.thm[i].s[sb][j] = 1e20;\n                }\n                gfc.nsPsy.lastAttacks[i] = 0;\n            }\n            for (var j = 0; j < 9; j++)\n                gfc.nsPsy.last_en_subshort[i][j] = 10.;\n        }\n\n        /* init. for loudness approx. -jd 2001 mar 27 */\n        gfc.loudness_sq_save[0] = gfc.loudness_sq_save[1] = 0.0;\n\n        /*************************************************************************\n         * now compute the psychoacoustic model specific constants\n         ************************************************************************/\n        /* compute numlines, bo, bm, bval, bval_width, mld */\n\n        gfc.npart_l = init_numline(gfc.numlines_l, gfc.bo_l, gfc.bm_l, bval,\n            bval_width, gfc.mld_l, gfc.PSY.bo_l_weight, sfreq,\n            Encoder_1.BLKSIZE, gfc.scalefac_band.l, Encoder_1.BLKSIZE\n            / (2.0 * 576), Encoder_1.SBMAX_l);\n        assert$3(gfc.npart_l < Encoder_1.CBANDS);\n        /* compute the spreading function */\n        for (i = 0; i < gfc.npart_l; i++) {\n            var snr = snr_l_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_l_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_l_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n            if (gfc.numlines_l[i] > 0) {\n                gfc.rnumlines_l[i] = 1.0 / gfc.numlines_l[i];\n            } else {\n                gfc.rnumlines_l[i] = 0;\n            }\n        }\n        gfc.s3_ll = init_s3_values(gfc.s3ind, gfc.npart_l, bval, bval_width,\n            norm, useOldS3);\n\n        /* compute long block specific values, ATH and MINVAL */\n        var j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var x;\n\n            /* ATH */\n            x = Float$3.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_l[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder_1.BLKSIZE);\n                var level;\n                /*\n                 * ATH below 100 Hz constant, not further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_l[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_l[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            /*\n             * FIXME: it does work to reduce low-freq problems in S53-Wind-Sax\n             * and lead-voice samples, but introduces some 3 kbps bit bloat too.\n             * TODO: Further refinement of the shape of this hack.\n             */\n            x = -20 + bval[i] * 20 / 10;\n            if (x > 6) {\n                x = 100;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8.;\n            gfc.minval_l[i] = (Math.pow(10.0, x / 10.) * gfc.numlines_l[i]);\n        }\n\n        /************************************************************************\n         * do the same things for short blocks\n         ************************************************************************/\n        gfc.npart_s = init_numline(gfc.numlines_s, gfc.bo_s, gfc.bm_s, bval,\n            bval_width, gfc.mld_s, gfc.PSY.bo_s_weight, sfreq,\n            Encoder_1.BLKSIZE_s, gfc.scalefac_band.s, Encoder_1.BLKSIZE_s\n            / (2.0 * 192), Encoder_1.SBMAX_s);\n        assert$3(gfc.npart_s < Encoder_1.CBANDS);\n\n        /* SNR formula. short block is normalized by SNR. is it still right ? */\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var x;\n            var snr = snr_s_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_s_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_s_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n\n            /* ATH */\n            x = Float$3.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_s[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder_1.BLKSIZE_s);\n                var level;\n                /* freq = Min(.1,freq); */\n                /*\n                 * ATH below 100 Hz constant, not\n                 * further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_s[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_s[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            x = (-7.0 + bval[i] * 7.0 / 12.0);\n            if (bval[i] > 12) {\n                x *= 1 + Math.log(1 + x) * 3.1;\n            }\n            if (bval[i] < 12) {\n                x *= 1 + Math.log(1 - x) * 2.3;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8;\n            gfc.minval_s[i] = Math.pow(10.0, x / 10)\n                * gfc.numlines_s[i];\n        }\n\n        gfc.s3_ss = init_s3_values(gfc.s3ind_s, gfc.npart_s, bval, bval_width,\n            norm, useOldS3);\n\n        init_mask_add_max_values();\n        fft.init_fft(gfc);\n\n        /* setup temporal masking */\n        gfc.decay = Math.exp(-1.0 * LOG10\n            / (temporalmask_sustain_sec * sfreq / 192.0));\n\n        {\n            var msfix;\n            msfix = NS_MSFIX;\n            if ((gfp.exp_nspsytune & 2) != 0)\n                msfix = 1.0;\n            if (Math.abs(gfp.msfix) > 0.0)\n                msfix = gfp.msfix;\n            gfp.msfix = msfix;\n\n            /*\n             * spread only from npart_l bands. Normally, we use the spreading\n             * function to convolve from npart_l down to npart_l bands\n             */\n            for (var b = 0; b < gfc.npart_l; b++)\n                if (gfc.s3ind[b][1] > gfc.npart_l - 1)\n                    gfc.s3ind[b][1] = gfc.npart_l - 1;\n        }\n\n        /*\n         * prepare for ATH auto adjustment: we want to decrease the ATH by 12 dB\n         * per second\n         */\n        var frame_duration = (576. * gfc.mode_gr / sfreq);\n        gfc.ATH.decay = Math.pow(10., -12. / 10. * frame_duration);\n        gfc.ATH.adjust = 0.01;\n        /* minimum, for leading low loudness */\n        gfc.ATH.adjustLimit = 1.0;\n        /* on lead, allow adjust up to maximum */\n\n        assert$3(gfc.bo_l[Encoder_1.SBMAX_l - 1] <= gfc.npart_l);\n        assert$3(gfc.bo_s[Encoder_1.SBMAX_s - 1] <= gfc.npart_s);\n\n        if (gfp.ATHtype != -1) {\n            /* compute equal loudness weights (eql_w) */\n            var freq;\n            var freq_inc = gfp.out_samplerate\n                / (Encoder_1.BLKSIZE);\n            var eql_balance = 0.0;\n            freq = 0.0;\n            for (i = 0; i < Encoder_1.BLKSIZE / 2; ++i) {\n                /* convert ATH dB to relative power (not dB) */\n                /* to determine eql_w */\n                freq += freq_inc;\n                gfc.ATH.eql_w[i] = 1. / Math.pow(10, this.ATHformula(freq, gfp) / 10);\n                eql_balance += gfc.ATH.eql_w[i];\n            }\n            eql_balance = 1.0 / eql_balance;\n            for (i = Encoder_1.BLKSIZE / 2; --i >= 0;) { /* scale weights */\n                gfc.ATH.eql_w[i] *= eql_balance;\n            }\n        }\n        {\n            for (var b = j = 0; b < gfc.npart_s; ++b) {\n                for (i = 0; i < gfc.numlines_s[b]; ++i) {\n                    ++j;\n                }\n            }\n            assert$3(j == 129);\n            for (var b = j = 0; b < gfc.npart_l; ++b) {\n                for (i = 0; i < gfc.numlines_l[b]; ++i) {\n                    ++j;\n                }\n            }\n            assert$3(j == 513);\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var freq = sfreq * (j + gfc.numlines_l[i] / 2) / (1.0 * Encoder_1.BLKSIZE);\n            gfc.mld_cb_l[i] = stereo_demask(freq);\n            j += gfc.numlines_l[i];\n        }\n        for (; i < Encoder_1.CBANDS; ++i) {\n            gfc.mld_cb_l[i] = 1;\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var freq = sfreq * (j + gfc.numlines_s[i] / 2) / (1.0 * Encoder_1.BLKSIZE_s);\n            gfc.mld_cb_s[i] = stereo_demask(freq);\n            j += gfc.numlines_s[i];\n        }\n        for (; i < Encoder_1.CBANDS; ++i) {\n            gfc.mld_cb_s[i] = 1;\n        }\n        return 0;\n    };\n\n    /**\n     * Those ATH formulas are returning their minimum value for input = -1\n     */\n    function ATHformula_GB(f, value) {\n        /**\n         * <PRE>\n         *  from Painter & Spanias\n         *           modified by Gabriel Bouvigne to better fit the reality\n         *           ath =    3.640 * pow(f,-0.8)\n         *           - 6.800 * exp(-0.6*pow(f-3.4,2.0))\n         *           + 6.000 * exp(-0.15*pow(f-8.7,2.0))\n         *           + 0.6* 0.001 * pow(f,4.0);\n         *\n         *\n         *           In the past LAME was using the Painter &Spanias formula.\n         *           But we had some recurrent problems with HF content.\n         *           We measured real ATH values, and found the older formula\n         *           to be inaccurate in the higher part. So we made this new\n         *           formula and this solved most of HF problematic test cases.\n         *           The tradeoff is that in VBR mode it increases a lot the\n         *           bitrate.\n         * </PRE>\n         */\n\n        /*\n         * This curve can be adjusted according to the VBR scale: it adjusts\n         * from something close to Painter & Spanias on V9 up to Bouvigne's\n         * formula for V0. This way the VBR bitrate is more balanced according\n         * to the -V value.\n         */\n\n        // the following Hack allows to ask for the lowest value\n        if (f < -.3)\n            f = 3410;\n\n        // convert to khz\n        f /= 1000;\n        f = Math.max(0.1, f);\n        var ath = 3.640 * Math.pow(f, -0.8) - 6.800\n            * Math.exp(-0.6 * Math.pow(f - 3.4, 2.0)) + 6.000\n            * Math.exp(-0.15 * Math.pow(f - 8.7, 2.0))\n            + (0.6 + 0.04 * value) * 0.001 * Math.pow(f, 4.0);\n        return ath;\n    }\n\n    this.ATHformula = function (f, gfp) {\n        var ath;\n        switch (gfp.ATHtype) {\n            case 0:\n                ath = ATHformula_GB(f, 9);\n                break;\n            case 1:\n                // over sensitive, should probably be removed\n                ath = ATHformula_GB(f, -1);\n                break;\n            case 2:\n                ath = ATHformula_GB(f, 0);\n                break;\n            case 3:\n                // modification of GB formula by Roel\n                ath = ATHformula_GB(f, 1) + 6;\n                break;\n            case 4:\n                ath = ATHformula_GB(f, gfp.ATHcurve);\n                break;\n            default:\n                ath = ATHformula_GB(f, 0);\n                break;\n        }\n        return ath;\n    };\n\n}\n\nvar PsyModel_1 = PsyModel;\n\n//package mp3;\n\n/* MPEG modes */\nfunction MPEGMode$1(ordinal) {\n    var _ordinal = ordinal;\n    this.ordinal = function () {\n        return _ordinal;\n    };\n}\n\nMPEGMode$1.STEREO = new MPEGMode$1(0);\nMPEGMode$1.JOINT_STEREO = new MPEGMode$1(1);\nMPEGMode$1.DUAL_CHANNEL = new MPEGMode$1(2);\nMPEGMode$1.MONO = new MPEGMode$1(3);\nMPEGMode$1.NOT_SET = new MPEGMode$1(4);\n\nvar MPEGMode_1 = MPEGMode$1;\n\nfunction LameGlobalFlags() {\n\n    this.class_id = 0;\n\n    /* input description */\n\n    /**\n     * number of samples. default=-1\n     */\n    this.num_samples = 0;\n    /**\n     * input number of channels. default=2\n     */\n    this.num_channels = 0;\n    /**\n     * input_samp_rate in Hz. default=44.1 kHz\n     */\n    this.in_samplerate = 0;\n    /**\n     * output_samp_rate. default: LAME picks best value at least not used for\n     * MP3 decoding: Remember 44.1 kHz MP3s and AC97\n     */\n    this.out_samplerate = 0;\n    /**\n     * scale input by this amount before encoding at least not used for MP3\n     * decoding\n     */\n    this.scale = 0.;\n    /**\n     * scale input of channel 0 (left) by this amount before encoding\n     */\n    this.scale_left = 0.;\n    /**\n     * scale input of channel 1 (right) by this amount before encoding\n     */\n    this.scale_right = 0.;\n\n    /* general control params */\n    /**\n     * collect data for a MP3 frame analyzer?\n     */\n    this.analysis = false;\n    /**\n     * add Xing VBR tag?\n     */\n    this.bWriteVbrTag = false;\n\n    /**\n     * use lame/mpglib to convert mp3 to wav\n     */\n    this.decode_only = false;\n    /**\n     * quality setting 0=best, 9=worst default=5\n     */\n    this.quality = 0;\n    /**\n     * see enum default = LAME picks best value\n     */\n    this.mode = MPEGMode_1.STEREO;\n    /**\n     * force M/S mode. requires mode=1\n     */\n    this.force_ms = false;\n    /**\n     * use free format? default=0\n     */\n    this.free_format = false;\n    /**\n     * find the RG value? default=0\n     */\n    this.findReplayGain = false;\n    /**\n     * decode on the fly? default=0\n     */\n    this.decode_on_the_fly = false;\n    /**\n     * 1 (default) writes ID3 tags, 0 not\n     */\n    this.write_id3tag_automatic = false;\n\n    /*\n     * set either brate>0 or compression_ratio>0, LAME will compute the value of\n     * the variable not set. Default is compression_ratio = 11.025\n     */\n    /**\n     * bitrate\n     */\n    this.brate = 0;\n    /**\n     * sizeof(wav file)/sizeof(mp3 file)\n     */\n    this.compression_ratio = 0.;\n\n    /* frame params */\n    /**\n     * mark as copyright. default=0\n     */\n    this.copyright = 0;\n    /**\n     * mark as original. default=1\n     */\n    this.original = 0;\n    /**\n     * the MP3 'private extension' bit. Meaningless\n     */\n    this.extension = 0;\n    /**\n     * Input PCM is emphased PCM (for instance from one of the rarely emphased\n     * CDs), it is STRONGLY not recommended to use this, because psycho does not\n     * take it into account, and last but not least many decoders don't care\n     * about these bits\n     */\n    this.emphasis = 0;\n    /**\n     * use 2 bytes per frame for a CRC checksum. default=0\n     */\n    this.error_protection = 0;\n    /**\n     * enforce ISO spec as much as possible\n     */\n    this.strict_ISO = false;\n\n    /**\n     * use bit reservoir?\n     */\n    this.disable_reservoir = false;\n\n    /* quantization/noise shaping */\n    this.quant_comp = 0;\n    this.quant_comp_short = 0;\n    this.experimentalY = false;\n    this.experimentalZ = 0;\n    this.exp_nspsytune = 0;\n\n    this.preset = 0;\n\n    /* VBR control */\n    this.VBR = null;\n    /**\n     * Range [0,...,1[\n     */\n    this.VBR_q_frac = 0.;\n    /**\n     * Range [0,...,9]\n     */\n    this.VBR_q = 0;\n    this.VBR_mean_bitrate_kbps = 0;\n    this.VBR_min_bitrate_kbps = 0;\n    this.VBR_max_bitrate_kbps = 0;\n    /**\n     * strictly enforce VBR_min_bitrate normaly, it will be violated for analog\n     * silence\n     */\n    this.VBR_hard_min = 0;\n\n    /* resampling and filtering */\n\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.lowpassfreq = 0;\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.highpassfreq = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.lowpasswidth = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.highpasswidth = 0;\n\n    /*\n     * psycho acoustics and other arguments which you should not change unless\n     * you know what you are doing\n     */\n\n    this.maskingadjust = 0.;\n    this.maskingadjust_short = 0.;\n    /**\n     * only use ATH\n     */\n    this.ATHonly = false;\n    /**\n     * only use ATH for short blocks\n     */\n    this.ATHshort = false;\n    /**\n     * disable ATH\n     */\n    this.noATH = false;\n    /**\n     * select ATH formula\n     */\n    this.ATHtype = 0;\n    /**\n     * change ATH formula 4 shape\n     */\n    this.ATHcurve = 0.;\n    /**\n     * lower ATH by this many db\n     */\n    this.ATHlower = 0.;\n    /**\n     * select ATH auto-adjust scheme\n     */\n    this.athaa_type = 0;\n    /**\n     * select ATH auto-adjust loudness calc\n     */\n    this.athaa_loudapprox = 0;\n    /**\n     * dB, tune active region of auto-level\n     */\n    this.athaa_sensitivity = 0.;\n    this.short_blocks = null;\n    /**\n     * use temporal masking effect\n     */\n    this.useTemporal = false;\n    this.interChRatio = 0.;\n    /**\n     * Naoki's adjustment of Mid/Side maskings\n     */\n    this.msfix = 0.;\n\n    /**\n     * 0 off, 1 on\n     */\n    this.tune = false;\n    /**\n     * used to pass values for debugging and stuff\n     */\n    this.tune_value_a = 0.;\n\n    /************************************************************************/\n    /* internal variables, do not set... */\n    /* provided because they may be of use to calling application */\n    /************************************************************************/\n\n    /**\n     * 0=MPEG-2/2.5 1=MPEG-1\n     */\n    this.version = 0;\n    this.encoder_delay = 0;\n    /**\n     * number of samples of padding appended to input\n     */\n    this.encoder_padding = 0;\n    this.framesize = 0;\n    /**\n     * number of frames encoded\n     */\n    this.frameNum = 0;\n    /**\n     * is this struct owned by calling program or lame?\n     */\n    this.lame_allocated_gfp = 0;\n    /**************************************************************************/\n    /* more internal variables are stored in this structure: */\n    /**************************************************************************/\n    this.internal_flags = null;\n}\n\nvar LameGlobalFlags_1 = LameGlobalFlags;\n\nvar L3Side$1 = {};\n\n\n\t/**\n\t * max scalefactor band, max(SBMAX_l, SBMAX_s*3, (SBMAX_s-3)*3+8)\n\t */\nL3Side$1.SFBMAX = (Encoder_1.SBMAX_s * 3);\n\nvar L3Side_1 = L3Side$1;\n\nvar new_float$10 = common.new_float;\nvar new_int$10 = common.new_int;\nfunction GrInfo() {\n    //float xr[] = new float[576];\n    this.xr = new_float$10(576);\n    //int l3_enc[] = new int[576];\n    this.l3_enc = new_int$10(576);\n    //int scalefac[] = new int[L3Side.SFBMAX];\n    this.scalefac = new_int$10(L3Side_1.SFBMAX);\n    this.xrpow_max = 0.;\n\n    this.part2_3_length = 0;\n    this.big_values = 0;\n    this.count1 = 0;\n    this.global_gain = 0;\n    this.scalefac_compress = 0;\n    this.block_type = 0;\n    this.mixed_block_flag = 0;\n    this.table_select = new_int$10(3);\n    this.subblock_gain = new_int$10(3 + 1);\n    this.region0_count = 0;\n    this.region1_count = 0;\n    this.preflag = 0;\n    this.scalefac_scale = 0;\n    this.count1table_select = 0;\n\n    this.part2_length = 0;\n    this.sfb_lmax = 0;\n    this.sfb_smin = 0;\n    this.psy_lmax = 0;\n    this.sfbmax = 0;\n    this.psymax = 0;\n    this.sfbdivide = 0;\n    this.width = new_int$10(L3Side_1.SFBMAX);\n    this.window = new_int$10(L3Side_1.SFBMAX);\n    this.count1bits = 0;\n    /**\n     * added for LSF\n     */\n    this.sfb_partition_table = null;\n    this.slen = new_int$10(4);\n\n    this.max_nonzero_coeff = 0;\n\n    var self = this;\n    function clone_int(array) {\n        return new Int32Array(array);\n    }\n    function clone_float(array) {\n        return new Float32Array(array);\n    }\n    this.assign = function (other) {\n        self.xr = clone_float(other.xr); //.slice(0); //clone();\n        self.l3_enc = clone_int(other.l3_enc); //.slice(0); //clone();\n        self.scalefac = clone_int(other.scalefac);//.slice(0); //clone();\n        self.xrpow_max = other.xrpow_max;\n\n        self.part2_3_length = other.part2_3_length;\n        self.big_values = other.big_values;\n        self.count1 = other.count1;\n        self.global_gain = other.global_gain;\n        self.scalefac_compress = other.scalefac_compress;\n        self.block_type = other.block_type;\n        self.mixed_block_flag = other.mixed_block_flag;\n        self.table_select = clone_int(other.table_select);//.slice(0); //clone();\n        self.subblock_gain = clone_int(other.subblock_gain); //.slice(0); //.clone();\n        self.region0_count = other.region0_count;\n        self.region1_count = other.region1_count;\n        self.preflag = other.preflag;\n        self.scalefac_scale = other.scalefac_scale;\n        self.count1table_select = other.count1table_select;\n\n        self.part2_length = other.part2_length;\n        self.sfb_lmax = other.sfb_lmax;\n        self.sfb_smin = other.sfb_smin;\n        self.psy_lmax = other.psy_lmax;\n        self.sfbmax = other.sfbmax;\n        self.psymax = other.psymax;\n        self.sfbdivide = other.sfbdivide;\n        self.width = clone_int(other.width); //.slice(0); //.clone();\n        self.window = clone_int(other.window); //.slice(0); //.clone();\n        self.count1bits = other.count1bits;\n\n        self.sfb_partition_table = other.sfb_partition_table.slice(0); //.clone();\n        self.slen = clone_int(other.slen); //.slice(0); //.clone();\n        self.max_nonzero_coeff = other.max_nonzero_coeff;\n    };\n}\n\nvar GrInfo_1 = GrInfo;\n\nvar new_int$9 = common.new_int;\nfunction IIISideInfo() {\n    this.tt = [[null, null], [null, null]];\n    this.main_data_begin = 0;\n    this.private_bits = 0;\n    this.resvDrain_pre = 0;\n    this.resvDrain_post = 0;\n    this.scfsi = [new_int$9(4), new_int$9(4)];\n\n    for (var gr = 0; gr < 2; gr++) {\n        for (var ch = 0; ch < 2; ch++) {\n            this.tt[gr][ch] = new GrInfo_1();\n        }\n    }\n}\n\nvar IIISideInfo_1 = IIISideInfo;\n\n//package mp3;\n\n/**\n * Layer III side information.\n *\n * @author Ken\n *\n */\n\n\nvar System$11 = common.System;\nvar new_int$11 = common.new_int;\nfunction ScaleFac(arrL, arrS, arr21, arr12) {\n\n    this.l = new_int$11(1 + Encoder_1.SBMAX_l);\n    this.s = new_int$11(1 + Encoder_1.SBMAX_s);\n    this.psfb21 = new_int$11(1 + Encoder_1.PSFB21);\n    this.psfb12 = new_int$11(1 + Encoder_1.PSFB12);\n    var l = this.l;\n    var s = this.s;\n\n    if (arguments.length == 4) {\n        //public ScaleFac(final int[] arrL, final int[] arrS, final int[] arr21,\n        //    final int[] arr12) {\n        this.arrL = arguments[0];\n        this.arrS = arguments[1];\n        this.arr21 = arguments[2];\n        this.arr12 = arguments[3];\n\n        System$11.arraycopy(this.arrL, 0, l, 0, Math.min(this.arrL.length, this.l.length));\n        System$11.arraycopy(this.arrS, 0, s, 0, Math.min(this.arrS.length, this.s.length));\n        System$11.arraycopy(this.arr21, 0, this.psfb21, 0, Math.min(this.arr21.length, this.psfb21.length));\n        System$11.arraycopy(this.arr12, 0, this.psfb12, 0, Math.min(this.arr12.length, this.psfb12.length));\n    }\n}\n\nvar ScaleFac_1 = ScaleFac;\n\nvar new_float$12 = common.new_float;\nvar new_float_n$12 = common.new_float_n;\nvar new_int$12 = common.new_int;\n//package mp3;\n\n/**\n * Variables used for --nspsytune\n *\n * @author Ken\n *\n */\nfunction NsPsy() {\n    this.last_en_subshort = new_float_n$12([4, 9]);\n    this.lastAttacks = new_int$12(4);\n    this.pefirbuf = new_float$12(19);\n    this.longfact = new_float$12(Encoder_1.SBMAX_l);\n    this.shortfact = new_float$12(Encoder_1.SBMAX_s);\n\n    /**\n     * short block tuning\n     */\n    this.attackthre = 0.;\n    this.attackthre_s = 0.;\n}\n\nvar NsPsy_1 = NsPsy;\n\n//package mp3;\n\nfunction VBRSeekInfo() {\n    /**\n     * What we have seen so far.\n     */\n    this.sum = 0;\n    /**\n     * How many frames we have seen in this chunk.\n     */\n    this.seen = 0;\n    /**\n     * How many frames we want to collect into one chunk.\n     */\n    this.want = 0;\n    /**\n     * Actual position in our bag.\n     */\n    this.pos = 0;\n    /**\n     * Size of our bag.\n     */\n    this.size = 0;\n    /**\n     * Pointer to our bag.\n     */\n    this.bag = null;\n    this.nVbrNumFrames = 0;\n    this.nBytesWritten = 0;\n    /* VBR tag data */\n    this.TotalFrameSize = 0;\n}\n\nvar VBRSeekInfo_1 = VBRSeekInfo;\n\nvar new_byte$8 = common.new_byte;\nvar new_double$8 = common.new_double;\nvar new_float$8 = common.new_float;\nvar new_float_n$8 = common.new_float_n;\nvar new_int$8 = common.new_int;\nvar new_int_n$8 = common.new_int_n;\nLameInternalFlags$1.MFSIZE = (3 * 1152 + Encoder_1.ENCDELAY - Encoder_1.MDCTDELAY);\nLameInternalFlags$1.MAX_HEADER_BUF = 256;\nLameInternalFlags$1.MAX_BITS_PER_CHANNEL = 4095;\nLameInternalFlags$1.MAX_BITS_PER_GRANULE = 7680;\nLameInternalFlags$1.BPC = 320;\n\nfunction LameInternalFlags$1() {\n    var MAX_HEADER_LEN = 40;\n\n\n    /********************************************************************\n     * internal variables NOT set by calling program, and should not be *\n     * modified by the calling program *\n     ********************************************************************/\n\n    /**\n     * Some remarks to the Class_ID field: The Class ID is an Identifier for a\n     * pointer to this struct. It is very unlikely that a pointer to\n     * lame_global_flags has the same 32 bits in it's structure (large and other\n     * special properties, for instance prime).\n     *\n     * To test that the structure is right and initialized, use: if ( gfc .\n     * Class_ID == LAME_ID ) ... Other remark: If you set a flag to 0 for uninit\n     * data and 1 for init data, the right test should be \"if (flag == 1)\" and\n     * NOT \"if (flag)\". Unintended modification of this element will be\n     * otherwise misinterpreted as an init.\n     */\n    this.Class_ID = 0;\n\n    this.lame_encode_frame_init = 0;\n    this.iteration_init_init = 0;\n    this.fill_buffer_resample_init = 0;\n\n    //public float mfbuf[][] = new float[2][MFSIZE];\n    this.mfbuf = new_float_n$8([2, LameInternalFlags$1.MFSIZE]);\n\n    /**\n     * granules per frame\n     */\n    this.mode_gr = 0;\n    /**\n     * number of channels in the input data stream (PCM or decoded PCM)\n     */\n    this.channels_in = 0;\n    /**\n     * number of channels in the output data stream (not used for decoding)\n     */\n    this.channels_out = 0;\n    /**\n     * input_samp_rate/output_samp_rate\n     */\n        //public double resample_ratio;\n    this.resample_ratio = 0.;\n\n    this.mf_samples_to_encode = 0;\n    this.mf_size = 0;\n    /**\n     * min bitrate index\n     */\n    this.VBR_min_bitrate = 0;\n    /**\n     * max bitrate index\n     */\n    this.VBR_max_bitrate = 0;\n    this.bitrate_index = 0;\n    this.samplerate_index = 0;\n    this.mode_ext = 0;\n\n    /* lowpass and highpass filter control */\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.lowpass1 = 0.;\n    this.lowpass2 = 0.;\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.highpass1 = 0.;\n    this.highpass2 = 0.;\n\n    /**\n     * 0 = none 1 = ISO AAC model 2 = allow scalefac_select=1\n     */\n    this.noise_shaping = 0;\n\n    /**\n     * 0 = ISO model: amplify all distorted bands<BR>\n     * 1 = amplify within 50% of max (on db scale)<BR>\n     * 2 = amplify only most distorted band<BR>\n     * 3 = method 1 and refine with method 2<BR>\n     */\n    this.noise_shaping_amp = 0;\n    /**\n     * 0 = no substep<BR>\n     * 1 = use substep shaping at last step(VBR only)<BR>\n     * (not implemented yet)<BR>\n     * 2 = use substep inside loop<BR>\n     * 3 = use substep inside loop and last step<BR>\n     */\n    this.substep_shaping = 0;\n\n    /**\n     * 1 = gpsycho. 0 = none\n     */\n    this.psymodel = 0;\n    /**\n     * 0 = stop at over=0, all scalefacs amplified or<BR>\n     * a scalefac has reached max value<BR>\n     * 1 = stop when all scalefacs amplified or a scalefac has reached max value<BR>\n     * 2 = stop when all scalefacs amplified\n     */\n    this.noise_shaping_stop = 0;\n\n    /**\n     * 0 = no, 1 = yes\n     */\n    this.subblock_gain = 0;\n    /**\n     * 0 = no. 1=outside loop 2=inside loop(slow)\n     */\n    this.use_best_huffman = 0;\n\n    /**\n     * 0 = stop early after 0 distortion found. 1 = full search\n     */\n    this.full_outer_loop = 0;\n\n    //public IIISideInfo l3_side = new IIISideInfo();\n    this.l3_side = new IIISideInfo_1();\n    this.ms_ratio = new_float$8(2);\n\n    /* used for padding */\n    /**\n     * padding for the current frame?\n     */\n    this.padding = 0;\n    this.frac_SpF = 0;\n    this.slot_lag = 0;\n\n    /**\n     * optional ID3 tags\n     */\n        //public ID3TagSpec tag_spec;\n    this.tag_spec = null;\n    this.nMusicCRC = 0;\n\n    /* variables used by Quantize */\n    //public int OldValue[] = new int[2];\n    this.OldValue = new_int$8(2);\n    //public int CurrentStep[] = new int[2];\n    this.CurrentStep = new_int$8(2);\n\n    this.masking_lower = 0.;\n    //public int bv_scf[] = new int[576];\n    this.bv_scf = new_int$8(576);\n    //public int pseudohalf[] = new int[L3Side.SFBMAX];\n    this.pseudohalf = new_int$8(L3Side_1.SFBMAX);\n\n    /**\n     * will be set in lame_init_params\n     */\n    this.sfb21_extra = false;\n\n    /* BPC = maximum number of filter convolution windows to precompute */\n    //public float[][] inbuf_old = new float[2][];\n    this.inbuf_old = new Array(2);\n    //public float[][] blackfilt = new float[2 * BPC + 1][];\n    this.blackfilt = new Array(2 * LameInternalFlags$1.BPC + 1);\n    //public double itime[] = new double[2];\n    this.itime = new_double$8(2);\n    this.sideinfo_len = 0;\n\n    /* variables for newmdct.c */\n    //public float sb_sample[][][][] = new float[2][2][18][Encoder.SBLIMIT];\n    this.sb_sample = new_float_n$8([2, 2, 18, Encoder_1.SBLIMIT]);\n    this.amp_filter = new_float$8(32);\n\n    /* variables for BitStream */\n\n    /**\n     * <PRE>\n     * mpeg1: buffer=511 bytes  smallest frame: 96-38(sideinfo)=58\n     * max number of frames in reservoir:  8\n     * mpeg2: buffer=255 bytes.  smallest frame: 24-23bytes=1\n     * with VBR, if you are encoding all silence, it is possible to\n     * have 8kbs/24khz frames with 1byte of data each, which means we need\n     * to buffer up to 255 headers!\n     * </PRE>\n     */\n    /**\n     * also, max_header_buf has to be a power of two\n     */\n    /**\n     * max size of header is 38\n     */\n\n    function Header() {\n        this.write_timing = 0;\n        this.ptr = 0;\n        //public byte buf[] = new byte[MAX_HEADER_LEN];\n        this.buf = new_byte$8(MAX_HEADER_LEN);\n    }\n\n    this.header = new Array(LameInternalFlags$1.MAX_HEADER_BUF);\n\n    this.h_ptr = 0;\n    this.w_ptr = 0;\n    this.ancillary_flag = 0;\n\n    /* variables for Reservoir */\n    /**\n     * in bits\n     */\n    this.ResvSize = 0;\n    /**\n     * in bits\n     */\n    this.ResvMax = 0;\n\n    //public ScaleFac scalefac_band = new ScaleFac();\n    this.scalefac_band = new ScaleFac_1();\n\n    /* daa from PsyModel */\n    /* The static variables \"r\", \"phi_sav\", \"new\", \"old\" and \"oldest\" have */\n    /* to be remembered for the unpredictability measure. For \"r\" and */\n    /* \"phi_sav\", the first index from the left is the channel select and */\n    /* the second index is the \"age\" of the data. */\n    this.minval_l = new_float$8(Encoder_1.CBANDS);\n    this.minval_s = new_float$8(Encoder_1.CBANDS);\n    this.nb_1 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.nb_2 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.nb_s1 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.nb_s2 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.s3_ss = null;\n    this.s3_ll = null;\n    this.decay = 0.;\n\n    //public III_psy_xmin[] thm = new III_psy_xmin[4];\n    //public III_psy_xmin[] en = new III_psy_xmin[4];\n    this.thm = new Array(4);\n    this.en = new Array(4);\n\n    /**\n     * fft and energy calculation\n     */\n    this.tot_ener = new_float$8(4);\n\n    /* loudness calculation (for adaptive threshold of hearing) */\n    /**\n     * loudness^2 approx. per granule and channel\n     */\n    this.loudness_sq = new_float_n$8([2, 2]);\n    /**\n     * account for granule delay of L3psycho_anal\n     */\n    this.loudness_sq_save = new_float$8(2);\n\n    /**\n     * Scale Factor Bands\n     */\n    this.mld_l = new_float$8(Encoder_1.SBMAX_l);\n    this.mld_s = new_float$8(Encoder_1.SBMAX_s);\n    this.bm_l = new_int$8(Encoder_1.SBMAX_l);\n    this.bo_l = new_int$8(Encoder_1.SBMAX_l);\n    this.bm_s = new_int$8(Encoder_1.SBMAX_s);\n    this.bo_s = new_int$8(Encoder_1.SBMAX_s);\n    this.npart_l = 0;\n    this.npart_s = 0;\n\n    this.s3ind = new_int_n$8([Encoder_1.CBANDS, 2]);\n    this.s3ind_s = new_int_n$8([Encoder_1.CBANDS, 2]);\n\n    this.numlines_s = new_int$8(Encoder_1.CBANDS);\n    this.numlines_l = new_int$8(Encoder_1.CBANDS);\n    this.rnumlines_l = new_float$8(Encoder_1.CBANDS);\n    this.mld_cb_l = new_float$8(Encoder_1.CBANDS);\n    this.mld_cb_s = new_float$8(Encoder_1.CBANDS);\n    this.numlines_s_num1 = 0;\n    this.numlines_l_num1 = 0;\n\n    /* ratios */\n    this.pe = new_float$8(4);\n    this.ms_ratio_s_old = 0.;\n    this.ms_ratio_l_old = 0.;\n    this.ms_ener_ratio_old = 0.;\n\n    /**\n     * block type\n     */\n    this.blocktype_old = new_int$8(2);\n\n    /**\n     * variables used for --nspsytune\n     */\n    this.nsPsy = new NsPsy_1();\n\n    /**\n     * used for Xing VBR header\n     */\n    this.VBR_seek_table = new VBRSeekInfo_1();\n\n    /**\n     * all ATH related stuff\n     */\n        //public ATH ATH;\n    this.ATH = null;\n\n    this.PSY = null;\n\n    this.nogap_total = 0;\n    this.nogap_current = 0;\n\n    /* ReplayGain */\n    this.decode_on_the_fly = true;\n    this.findReplayGain = true;\n    this.findPeakSample = true;\n    this.PeakSample = 0.;\n    this.RadioGain = 0;\n    this.AudiophileGain = 0;\n    //public ReplayGain rgdata;\n    this.rgdata = null;\n\n    /**\n     * gain change required for preventing clipping\n     */\n    this.noclipGainChange = 0;\n    /**\n     * user-specified scale factor required for preventing clipping\n     */\n    this.noclipScale = 0.;\n\n    /* simple statistics */\n    this.bitrate_stereoMode_Hist = new_int_n$8([16, 4 + 1]);\n    /**\n     * norm/start/short/stop/mixed(short)/sum\n     */\n    this.bitrate_blockType_Hist = new_int_n$8([16, 4 + 1 + 1]);\n\n    //public PlottingData pinfo;\n    //public MPGLib.mpstr_tag hip;\n    this.pinfo = null;\n    this.hip = null;\n\n    this.in_buffer_nsamples = 0;\n    //public float[] in_buffer_0;\n    //public float[] in_buffer_1;\n    this.in_buffer_0 = null;\n    this.in_buffer_1 = null;\n\n    //public IIterationLoop iteration_loop;\n    this.iteration_loop = null;\n\n    for (var i = 0; i < this.en.length; i++) {\n        this.en[i] = new III_psy_xmin_1();\n    }\n    for (var i = 0; i < this.thm.length; i++) {\n        this.thm[i] = new III_psy_xmin_1();\n    }\n    for (var i = 0; i < this.header.length; i++) {\n        this.header[i] = new Header();\n    }\n\n}\n\nvar LameInternalFlags_1 = LameInternalFlags$1;\n\nvar new_float$13 = common.new_float;\n/**\n * ATH related stuff, if something new ATH related has to be added, please plug\n * it here into the ATH.\n */\nfunction ATH() {\n    /**\n     * Method for the auto adjustment.\n     */\n    this.useAdjust = 0;\n    /**\n     * factor for tuning the (sample power) point below which adaptive threshold\n     * of hearing adjustment occurs\n     */\n    this.aaSensitivityP = 0.;\n    /**\n     * Lowering based on peak volume, 1 = no lowering.\n     */\n    this.adjust = 0.;\n    /**\n     * Limit for dynamic ATH adjust.\n     */\n    this.adjustLimit = 0.;\n    /**\n     * Determined to lower x dB each second.\n     */\n    this.decay = 0.;\n    /**\n     * Lowest ATH value.\n     */\n    this.floor = 0.;\n    /**\n     * ATH for sfbs in long blocks.\n     */\n    this.l = new_float$13(Encoder_1.SBMAX_l);\n    /**\n     * ATH for sfbs in short blocks.\n     */\n    this.s = new_float$13(Encoder_1.SBMAX_s);\n    /**\n     * ATH for partitioned sfb21 in long blocks.\n     */\n    this.psfb21 = new_float$13(Encoder_1.PSFB21);\n    /**\n     * ATH for partitioned sfb12 in short blocks.\n     */\n    this.psfb12 = new_float$13(Encoder_1.PSFB12);\n    /**\n     * ATH for long block convolution bands.\n     */\n    this.cb_l = new_float$13(Encoder_1.CBANDS);\n    /**\n     * ATH for short block convolution bands.\n     */\n    this.cb_s = new_float$13(Encoder_1.CBANDS);\n    /**\n     * Equal loudness weights (based on ATH).\n     */\n    this.eql_w = new_float$13(Encoder_1.BLKSIZE / 2);\n}\n\nvar ATH_1 = ATH;\n\n/*\n *  ReplayGainAnalysis - analyzes input samples and give the recommended dB change\n *  Copyright (C) 2001 David Robinson and Glen Sawyer\n *  Improvements and optimizations added by Frank Klemm, and by Marcel Muller \n *\n *  This library is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU Lesser General Public\n *  License as published by the Free Software Foundation; either\n *  version 2.1 of the License, or (at your option) any later version.\n *\n *  This library is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n *  Lesser General Public License for more details.\n *\n *  You should have received a copy of the GNU Lesser General Public\n *  License along with this library; if not, write to the Free Software\n *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n *\n *  concept and filter values by David Robinson (David@Robinson.org)\n *    -- blame him if you think the idea is flawed\n *  original coding by Glen Sawyer (mp3gain@hotmail.com)\n *    -- blame him if you think this runs too slowly, or the coding is otherwise flawed\n *\n *  lots of code improvements by Frank Klemm ( http://www.uni-jena.de/~pfk/mpp/ )\n *    -- credit him for all the _good_ programming ;)\n *\n *\n *  For an explanation of the concepts and the basic algorithms involved, go to:\n *    http://www.replaygain.org/\n */\n\n/*\n *  Here's the deal. Call\n *\n *    InitGainAnalysis ( long samplefreq );\n *\n *  to initialize everything. Call\n *\n *    AnalyzeSamples ( var Float_t*  left_samples,\n *                     var Float_t*  right_samples,\n *                     size_t          num_samples,\n *                     int             num_channels );\n *\n *  as many times as you want, with as many or as few samples as you want.\n *  If mono, pass the sample buffer in through left_samples, leave\n *  right_samples NULL, and make sure num_channels = 1.\n *\n *    GetTitleGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  SINCE THE LAST TIME you called GetTitleGain() OR InitGainAnalysis().\n *\n *    GetAlbumGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  since InitGainAnalysis() was called and finalized with GetTitleGain().\n *\n *  Pseudo-code to process an album:\n *\n *    Float_t       l_samples [4096];\n *    Float_t       r_samples [4096];\n *    size_t        num_samples;\n *    unsigned int  num_songs;\n *    unsigned int  i;\n *\n *    InitGainAnalysis ( 44100 );\n *    for ( i = 1; i <= num_songs; i++ ) {\n *        while ( ( num_samples = getSongSamples ( song[i], left_samples, right_samples ) ) > 0 )\n *            AnalyzeSamples ( left_samples, right_samples, num_samples, 2 );\n *        fprintf (\"Recommended dB change for song %2d: %+6.2 dB\\n\", i, GetTitleGain() );\n *    }\n *    fprintf (\"Recommended dB change for whole album: %+6.2 dB\\n\", GetAlbumGain() );\n */\n\n/*\n *  So here's the main source of potential code confusion:\n *\n *  The filters applied to the incoming samples are IIR filters,\n *  meaning they rely on up to <filter order> number of previous samples\n *  AND up to <filter order> number of previous filtered samples.\n *\n *  I set up the AnalyzeSamples routine to minimize memory usage and interface\n *  complexity. The speed isn't compromised too much (I don't think), but the\n *  internal complexity is higher than it should be for such a relatively\n *  simple routine.\n *\n *  Optimization/clarity suggestions are welcome.\n */\n\nvar System$15 = common.System;\nvar Arrays$15 = common.Arrays;\n/**\n * Table entries per dB\n */\nGainAnalysis$1.STEPS_per_dB = 100.;\n/**\n * Table entries for 0...MAX_dB (normal max. values are 70...80 dB)\n */\nGainAnalysis$1.MAX_dB = 120.;\nGainAnalysis$1.GAIN_NOT_ENOUGH_SAMPLES = -24601;\nGainAnalysis$1.GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis$1.GAIN_ANALYSIS_OK = 1;\nGainAnalysis$1.INIT_GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis$1.INIT_GAIN_ANALYSIS_OK = 1;\n\nGainAnalysis$1.YULE_ORDER = 10;\nGainAnalysis$1.MAX_ORDER = GainAnalysis$1.YULE_ORDER;\n\nGainAnalysis$1.MAX_SAMP_FREQ = 48000;\nGainAnalysis$1.RMS_WINDOW_TIME_NUMERATOR = 1;\nGainAnalysis$1.RMS_WINDOW_TIME_DENOMINATOR = 20;\nGainAnalysis$1.MAX_SAMPLES_PER_WINDOW = ((GainAnalysis$1.MAX_SAMP_FREQ * GainAnalysis$1.RMS_WINDOW_TIME_NUMERATOR) / GainAnalysis$1.RMS_WINDOW_TIME_DENOMINATOR + 1);\n\nfunction GainAnalysis$1() {\n    /**\n     * calibration value for 89dB\n     */\n    var PINK_REF = 64.82;\n\n    var YULE_ORDER = GainAnalysis$1.YULE_ORDER;\n    /**\n     * percentile which is louder than the proposed level\n     */\n    var RMS_PERCENTILE = 0.95;\n    /**\n     * maximum allowed sample frequency [Hz]\n     */\n    var MAX_SAMP_FREQ = GainAnalysis$1.MAX_SAMP_FREQ;\n    var RMS_WINDOW_TIME_NUMERATOR = GainAnalysis$1.RMS_WINDOW_TIME_NUMERATOR;\n    /**\n     * numerator / denominator = time slice size [s]\n     */\n    var RMS_WINDOW_TIME_DENOMINATOR = GainAnalysis$1.RMS_WINDOW_TIME_DENOMINATOR;\n    /**\n     * max. Samples per Time slice\n     */\n    var MAX_SAMPLES_PER_WINDOW = GainAnalysis$1.MAX_SAMPLES_PER_WINDOW;\n\n\n    var ABYule = [\n        [0.03857599435200, -3.84664617118067, -0.02160367184185,\n            7.81501653005538, -0.00123395316851, -11.34170355132042,\n            -0.00009291677959, 13.05504219327545, -0.01655260341619,\n            -12.28759895145294, 0.02161526843274, 9.48293806319790,\n            -0.02074045215285, -5.87257861775999, 0.00594298065125,\n            2.75465861874613, 0.00306428023191, -0.86984376593551,\n            0.00012025322027, 0.13919314567432, 0.00288463683916],\n        [0.05418656406430, -3.47845948550071, -0.02911007808948,\n            6.36317777566148, -0.00848709379851, -8.54751527471874,\n            -0.00851165645469, 9.47693607801280, -0.00834990904936,\n            -8.81498681370155, 0.02245293253339, 6.85401540936998,\n            -0.02596338512915, -4.39470996079559, 0.01624864962975,\n            2.19611684890774, -0.00240879051584, -0.75104302451432,\n            0.00674613682247, 0.13149317958808, -0.00187763777362],\n        [0.15457299681924, -2.37898834973084, -0.09331049056315,\n            2.84868151156327, -0.06247880153653, -2.64577170229825,\n            0.02163541888798, 2.23697657451713, -0.05588393329856,\n            -1.67148153367602, 0.04781476674921, 1.00595954808547,\n            0.00222312597743, -0.45953458054983, 0.03174092540049,\n            0.16378164858596, -0.01390589421898, -0.05032077717131,\n            0.00651420667831, 0.02347897407020, -0.00881362733839],\n        [0.30296907319327, -1.61273165137247, -0.22613988682123,\n            1.07977492259970, -0.08587323730772, -0.25656257754070,\n            0.03282930172664, -0.16276719120440, -0.00915702933434,\n            -0.22638893773906, -0.02364141202522, 0.39120800788284,\n            -0.00584456039913, -0.22138138954925, 0.06276101321749,\n            0.04500235387352, -0.00000828086748, 0.02005851806501,\n            0.00205861885564, 0.00302439095741, -0.02950134983287],\n        [0.33642304856132, -1.49858979367799, -0.25572241425570,\n            0.87350271418188, -0.11828570177555, 0.12205022308084,\n            0.11921148675203, -0.80774944671438, -0.07834489609479,\n            0.47854794562326, -0.00469977914380, -0.12453458140019,\n            -0.00589500224440, -0.04067510197014, 0.05724228140351,\n            0.08333755284107, 0.00832043980773, -0.04237348025746,\n            -0.01635381384540, 0.02977207319925, -0.01760176568150],\n        [0.44915256608450, -0.62820619233671, -0.14351757464547,\n            0.29661783706366, -0.22784394429749, -0.37256372942400,\n            -0.01419140100551, 0.00213767857124, 0.04078262797139,\n            -0.42029820170918, -0.12398163381748, 0.22199650564824,\n            0.04097565135648, 0.00613424350682, 0.10478503600251,\n            0.06747620744683, -0.01863887810927, 0.05784820375801,\n            -0.03193428438915, 0.03222754072173, 0.00541907748707],\n        [0.56619470757641, -1.04800335126349, -0.75464456939302,\n            0.29156311971249, 0.16242137742230, -0.26806001042947,\n            0.16744243493672, 0.00819999645858, -0.18901604199609,\n            0.45054734505008, 0.30931782841830, -0.33032403314006,\n            -0.27562961986224, 0.06739368333110, 0.00647310677246,\n            -0.04784254229033, 0.08647503780351, 0.01639907836189,\n            -0.03788984554840, 0.01807364323573, -0.00588215443421],\n        [0.58100494960553, -0.51035327095184, -0.53174909058578,\n            -0.31863563325245, -0.14289799034253, -0.20256413484477,\n            0.17520704835522, 0.14728154134330, 0.02377945217615,\n            0.38952639978999, 0.15558449135573, -0.23313271880868,\n            -0.25344790059353, -0.05246019024463, 0.01628462406333,\n            -0.02505961724053, 0.06920467763959, 0.02442357316099,\n            -0.03721611395801, 0.01818801111503, -0.00749618797172],\n        [0.53648789255105, -0.25049871956020, -0.42163034350696,\n            -0.43193942311114, -0.00275953611929, -0.03424681017675,\n            0.04267842219415, -0.04678328784242, -0.10214864179676,\n            0.26408300200955, 0.14590772289388, 0.15113130533216,\n            -0.02459864859345, -0.17556493366449, -0.11202315195388,\n            -0.18823009262115, -0.04060034127000, 0.05477720428674,\n            0.04788665548180, 0.04704409688120, -0.02217936801134]];\n\n    var ABButter = [\n        [0.98621192462708, -1.97223372919527, -1.97242384925416,\n            0.97261396931306, 0.98621192462708],\n        [0.98500175787242, -1.96977855582618, -1.97000351574484,\n            0.97022847566350, 0.98500175787242],\n        [0.97938932735214, -1.95835380975398, -1.95877865470428,\n            0.95920349965459, 0.97938932735214],\n        [0.97531843204928, -1.95002759149878, -1.95063686409857,\n            0.95124613669835, 0.97531843204928],\n        [0.97316523498161, -1.94561023566527, -1.94633046996323,\n            0.94705070426118, 0.97316523498161],\n        [0.96454515552826, -1.92783286977036, -1.92909031105652,\n            0.93034775234268, 0.96454515552826],\n        [0.96009142950541, -1.91858953033784, -1.92018285901082,\n            0.92177618768381, 0.96009142950541],\n        [0.95856916599601, -1.91542108074780, -1.91713833199203,\n            0.91885558323625, 0.95856916599601],\n        [0.94597685600279, -1.88903307939452, -1.89195371200558,\n            0.89487434461664, 0.94597685600279]];\n\n\n    /**\n     * When calling this procedure, make sure that ip[-order] and op[-order]\n     * point to real data\n     */\n    //private void filterYule(final float[] input, int inputPos, float[] output,\n    //int outputPos, int nSamples, final float[] kernel) {\n    function filterYule(input, inputPos, output, outputPos, nSamples, kernel) {\n\n        while ((nSamples--) != 0) {\n            /* 1e-10 is a hack to avoid slowdown because of denormals */\n            output[outputPos] = 1e-10 + input[inputPos + 0] * kernel[0]\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\n                * kernel[2] - output[outputPos - 2] * kernel[3]\n                + input[inputPos - 2] * kernel[4] - output[outputPos - 3]\n                * kernel[5] + input[inputPos - 3] * kernel[6]\n                - output[outputPos - 4] * kernel[7] + input[inputPos - 4]\n                * kernel[8] - output[outputPos - 5] * kernel[9]\n                + input[inputPos - 5] * kernel[10] - output[outputPos - 6]\n                * kernel[11] + input[inputPos - 6] * kernel[12]\n                - output[outputPos - 7] * kernel[13] + input[inputPos - 7]\n                * kernel[14] - output[outputPos - 8] * kernel[15]\n                + input[inputPos - 8] * kernel[16] - output[outputPos - 9]\n                * kernel[17] + input[inputPos - 9] * kernel[18]\n                - output[outputPos - 10] * kernel[19]\n                + input[inputPos - 10] * kernel[20];\n            ++outputPos;\n            ++inputPos;\n        }\n    }\n\n//private void filterButter(final float[] input, int inputPos,\n//    float[] output, int outputPos, int nSamples, final float[] kernel) {\n    function filterButter(input, inputPos, output, outputPos, nSamples, kernel) {\n\n        while ((nSamples--) != 0) {\n            output[outputPos] = input[inputPos + 0] * kernel[0]\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\n                * kernel[2] - output[outputPos - 2] * kernel[3]\n                + input[inputPos - 2] * kernel[4];\n            ++outputPos;\n            ++inputPos;\n        }\n    }\n\n    /**\n     * @return INIT_GAIN_ANALYSIS_OK if successful, INIT_GAIN_ANALYSIS_ERROR if\n     *         not\n     */\n    function ResetSampleFrequency(rgData, samplefreq) {\n        /* zero out initial values */\n        for (var i = 0; i < MAX_ORDER; i++)\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\n\n        switch (0 | (samplefreq)) {\n            case 48000:\n                rgData.reqindex = 0;\n                break;\n            case 44100:\n                rgData.reqindex = 1;\n                break;\n            case 32000:\n                rgData.reqindex = 2;\n                break;\n            case 24000:\n                rgData.reqindex = 3;\n                break;\n            case 22050:\n                rgData.reqindex = 4;\n                break;\n            case 16000:\n                rgData.reqindex = 5;\n                break;\n            case 12000:\n                rgData.reqindex = 6;\n                break;\n            case 11025:\n                rgData.reqindex = 7;\n                break;\n            case 8000:\n                rgData.reqindex = 8;\n                break;\n            default:\n                return INIT_GAIN_ANALYSIS_ERROR;\n        }\n\n        rgData.sampleWindow = 0 | ((samplefreq * RMS_WINDOW_TIME_NUMERATOR\n            + RMS_WINDOW_TIME_DENOMINATOR - 1) / RMS_WINDOW_TIME_DENOMINATOR);\n\n        rgData.lsum = 0.;\n        rgData.rsum = 0.;\n        rgData.totsamp = 0;\n\n        Arrays$15.ill(rgData.A, 0);\n\n        return INIT_GAIN_ANALYSIS_OK;\n    }\n\n    this.InitGainAnalysis = function (rgData, samplefreq) {\n        if (ResetSampleFrequency(rgData, samplefreq) != INIT_GAIN_ANALYSIS_OK) {\n            return INIT_GAIN_ANALYSIS_ERROR;\n        }\n\n        rgData.linpre = MAX_ORDER;\n        rgData.rinpre = MAX_ORDER;\n        rgData.lstep = MAX_ORDER;\n        rgData.rstep = MAX_ORDER;\n        rgData.lout = MAX_ORDER;\n        rgData.rout = MAX_ORDER;\n\n        Arrays$15.fill(rgData.B, 0);\n\n        return INIT_GAIN_ANALYSIS_OK;\n    };\n\n    /**\n     * square\n     */\n    function fsqr(d) {\n        return d * d;\n    }\n\n    this.AnalyzeSamples = function (rgData, left_samples, left_samplesPos, right_samples, right_samplesPos, num_samples,\n                                    num_channels) {\n        var curleft;\n        var curleftBase;\n        var curright;\n        var currightBase;\n        var batchsamples;\n        var cursamples;\n        var cursamplepos;\n\n        if (num_samples == 0)\n            return GAIN_ANALYSIS_OK;\n\n        cursamplepos = 0;\n        batchsamples = num_samples;\n\n        switch (num_channels) {\n            case 1:\n                right_samples = left_samples;\n                right_samplesPos = left_samplesPos;\n                break;\n            case 2:\n                break;\n            default:\n                return GAIN_ANALYSIS_ERROR;\n        }\n\n        if (num_samples < MAX_ORDER) {\n            System$15.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER, num_samples);\n            System$15.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER, num_samples);\n        } else {\n            System$15.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER, MAX_ORDER);\n            System$15.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER, MAX_ORDER);\n        }\n\n        while (batchsamples > 0) {\n            cursamples = batchsamples > rgData.sampleWindow - rgData.totsamp ? rgData.sampleWindow\n            - rgData.totsamp\n                : batchsamples;\n            if (cursamplepos < MAX_ORDER) {\n                curleft = rgData.linpre + cursamplepos;\n                curleftBase = rgData.linprebuf;\n                curright = rgData.rinpre + cursamplepos;\n                currightBase = rgData.rinprebuf;\n                if (cursamples > MAX_ORDER - cursamplepos)\n                    cursamples = MAX_ORDER - cursamplepos;\n            } else {\n                curleft = left_samplesPos + cursamplepos;\n                curleftBase = left_samples;\n                curright = right_samplesPos + cursamplepos;\n                currightBase = right_samples;\n            }\n\n            filterYule(curleftBase, curleft, rgData.lstepbuf, rgData.lstep\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\n            filterYule(currightBase, curright, rgData.rstepbuf, rgData.rstep\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\n\n            filterButter(rgData.lstepbuf, rgData.lstep + rgData.totsamp,\n                rgData.loutbuf, rgData.lout + rgData.totsamp, cursamples,\n                ABButter[rgData.reqindex]);\n            filterButter(rgData.rstepbuf, rgData.rstep + rgData.totsamp,\n                rgData.routbuf, rgData.rout + rgData.totsamp, cursamples,\n                ABButter[rgData.reqindex]);\n\n            curleft = rgData.lout + rgData.totsamp;\n            /* Get the squared values */\n            curleftBase = rgData.loutbuf;\n            curright = rgData.rout + rgData.totsamp;\n            currightBase = rgData.routbuf;\n\n            var i = cursamples % 8;\n            while ((i--) != 0) {\n                rgData.lsum += fsqr(curleftBase[curleft++]);\n                rgData.rsum += fsqr(currightBase[curright++]);\n            }\n            i = cursamples / 8;\n            while ((i--) != 0) {\n                rgData.lsum += fsqr(curleftBase[curleft + 0])\n                    + fsqr(curleftBase[curleft + 1])\n                    + fsqr(curleftBase[curleft + 2])\n                    + fsqr(curleftBase[curleft + 3])\n                    + fsqr(curleftBase[curleft + 4])\n                    + fsqr(curleftBase[curleft + 5])\n                    + fsqr(curleftBase[curleft + 6])\n                    + fsqr(curleftBase[curleft + 7]);\n                curleft += 8;\n                rgData.rsum += fsqr(currightBase[curright + 0])\n                    + fsqr(currightBase[curright + 1])\n                    + fsqr(currightBase[curright + 2])\n                    + fsqr(currightBase[curright + 3])\n                    + fsqr(currightBase[curright + 4])\n                    + fsqr(currightBase[curright + 5])\n                    + fsqr(currightBase[curright + 6])\n                    + fsqr(currightBase[curright + 7]);\n                curright += 8;\n            }\n\n            batchsamples -= cursamples;\n            cursamplepos += cursamples;\n            rgData.totsamp += cursamples;\n            if (rgData.totsamp == rgData.sampleWindow) {\n                /* Get the Root Mean Square (RMS) for this set of samples */\n                var val = GainAnalysis$1.STEPS_per_dB\n                    * 10.\n                    * Math.log10((rgData.lsum + rgData.rsum)\n                        / rgData.totsamp * 0.5 + 1.e-37);\n                var ival = (val <= 0) ? 0 : 0 | val;\n                if (ival >= rgData.A.length)\n                    ival = rgData.A.length - 1;\n                rgData.A[ival]++;\n                rgData.lsum = rgData.rsum = 0.;\n\n                System$15.arraycopy(rgData.loutbuf, rgData.totsamp,\n                    rgData.loutbuf, 0, MAX_ORDER);\n                System$15.arraycopy(rgData.routbuf, rgData.totsamp,\n                    rgData.routbuf, 0, MAX_ORDER);\n                System$15.arraycopy(rgData.lstepbuf, rgData.totsamp,\n                    rgData.lstepbuf, 0, MAX_ORDER);\n                System$15.arraycopy(rgData.rstepbuf, rgData.totsamp,\n                    rgData.rstepbuf, 0, MAX_ORDER);\n                rgData.totsamp = 0;\n            }\n            if (rgData.totsamp > rgData.sampleWindow) {\n                /*\n                 * somehow I really screwed up: Error in programming! Contact\n                 * author about totsamp > sampleWindow\n                 */\n                return GAIN_ANALYSIS_ERROR;\n            }\n        }\n        if (num_samples < MAX_ORDER) {\n            System$15.arraycopy(rgData.linprebuf, num_samples, rgData.linprebuf,\n                0, MAX_ORDER - num_samples);\n            System$15.arraycopy(rgData.rinprebuf, num_samples, rgData.rinprebuf,\n                0, MAX_ORDER - num_samples);\n            System$15.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER - num_samples, num_samples);\n            System$15.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER - num_samples, num_samples);\n        } else {\n            System$15.arraycopy(left_samples, left_samplesPos + num_samples\n                - MAX_ORDER, rgData.linprebuf, 0, MAX_ORDER);\n            System$15.arraycopy(right_samples, right_samplesPos + num_samples\n                - MAX_ORDER, rgData.rinprebuf, 0, MAX_ORDER);\n        }\n\n        return GAIN_ANALYSIS_OK;\n    };\n\n    function analyzeResult(Array, len) {\n        var i;\n\n        var elems = 0;\n        for (i = 0; i < len; i++)\n            elems += Array[i];\n        if (elems == 0)\n            return GAIN_NOT_ENOUGH_SAMPLES;\n\n        var upper = 0 | Math.ceil(elems * (1. - RMS_PERCENTILE));\n        for (i = len; i-- > 0;) {\n            if ((upper -= Array[i]) <= 0)\n                break;\n        }\n\n        //return (float) ((float) PINK_REF - (float) i / (float) STEPS_per_dB);\n        return (PINK_REF - i / GainAnalysis$1.STEPS_per_dB);\n    }\n\n    this.GetTitleGain = function (rgData) {\n        var retval = analyzeResult(rgData.A, rgData.A.length);\n\n        for (var i = 0; i < rgData.A.length; i++) {\n            rgData.B[i] += rgData.A[i];\n            rgData.A[i] = 0;\n        }\n\n        for (var i = 0; i < MAX_ORDER; i++)\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\n\n        rgData.totsamp = 0;\n        rgData.lsum = rgData.rsum = 0.;\n        return retval;\n    };\n\n}\n\nvar GainAnalysis_1 = GainAnalysis$1;\n\nvar new_float$14 = common.new_float;\nvar new_int$14 = common.new_int;\nfunction ReplayGain() {\n    this.linprebuf = new_float$14(GainAnalysis_1.MAX_ORDER * 2);\n    /**\n     * left input samples, with pre-buffer\n     */\n    this.linpre = 0;\n    this.lstepbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    /**\n     * left \"first step\" (i.e. post first filter) samples\n     */\n    this.lstep = 0;\n    this.loutbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    /**\n     * left \"out\" (i.e. post second filter) samples\n     */\n    this.lout = 0;\n    this.rinprebuf = new_float$14(GainAnalysis_1.MAX_ORDER * 2);\n    /**\n     * right input samples ...\n     */\n    this.rinpre = 0;\n    this.rstepbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    this.rstep = 0;\n    this.routbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    this.rout = 0;\n    /**\n     * number of samples required to reach number of milliseconds required\n     * for RMS window\n     */\n    this.sampleWindow = 0;\n    this.totsamp = 0;\n    this.lsum = 0.;\n    this.rsum = 0.;\n    this.freqindex = 0;\n    this.first = 0;\n    this.A = new_int$14(0 | (GainAnalysis_1.STEPS_per_dB * GainAnalysis_1.MAX_dB));\n    this.B = new_int$14(0 | (GainAnalysis_1.STEPS_per_dB * GainAnalysis_1.MAX_dB));\n\n}\n\nvar ReplayGain_1 = ReplayGain;\n\nfunction MeanBits$1(meanBits) {\n    this.bits = meanBits;\n}\n\nvar MeanBits_1 = MeanBits$1;\n\nvar new_float$16 = common.new_float;\nvar new_int$16 = common.new_int;\nvar assert$16 = common.assert;\n\n\n\n\n\n\nfunction CBRNewIterationLoop(_quantize)  {\n    var quantize = _quantize;\n    this.quantize = quantize;\n\tthis.iteration_loop = function(gfp, pe, ms_ener_ratio, ratio) {\n\t\tvar gfc = gfp.internal_flags;\n        var l3_xmin = new_float$16(L3Side_1.SFBMAX);\n\t\tvar xrpow = new_float$16(576);\n\t\tvar targ_bits = new_int$16(2);\n\t\tvar mean_bits = 0, max_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar mb = new MeanBits_1(mean_bits);\n\t\tthis.quantize.rv.ResvFrameBegin(gfp, mb);\n\t\tmean_bits = mb.bits;\n\n\t\t/* quantize! */\n\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\n\t\t\t/*\n\t\t\t * calculate needed bits\n\t\t\t */\n\t\t\tmax_bits = this.quantize.qupvt.on_pe(gfp, pe, targ_bits, mean_bits,\n\t\t\t\t\tgr, gr);\n\n\t\t\tif (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR) {\n\t\t\t\tthis.quantize.ms_convert(gfc.l3_side, gr);\n\t\t\t\tthis.quantize.qupvt.reduce_side(targ_bits, ms_ener_ratio[gr],\n\t\t\t\t\t\tmean_bits, max_bits);\n\t\t\t}\n\n\t\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\t\tvar adjust, masking_lower_db;\n\t\t\t\tvar cod_info = l3_side.tt[gr][ch];\n\n\t\t\t\tif (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n\t\t\t\t\t// NORM, START or STOP type\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust - adjust;\n\t\t\t\t} else {\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n\t\t\t\t}\n\t\t\t\tgfc.masking_lower =  Math.pow(10.0,\n\t\t\t\t\t\tmasking_lower_db * 0.1);\n\n\t\t\t\t/*\n\t\t\t\t * init_outer_loop sets up cod_info, scalefac and xrpow\n\t\t\t\t */\n\t\t\t\tthis.quantize.init_outer_loop(gfc, cod_info);\n\t\t\t\tif (this.quantize.init_xrpow(gfc, cod_info, xrpow)) {\n\t\t\t\t\t/*\n\t\t\t\t\t * xr contains energy we will have to encode calculate the\n\t\t\t\t\t * masking abilities find some good quantization in\n\t\t\t\t\t * outer_loop\n\t\t\t\t\t */\n\t\t\t\t\tthis.quantize.qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n\t\t\t\t\t\t\tl3_xmin);\n\t\t\t\t\tthis.quantize.outer_loop(gfp, cod_info, l3_xmin, xrpow, ch,\n\t\t\t\t\t\t\ttarg_bits[ch]);\n\t\t\t\t}\n\n\t\t\t\tthis.quantize.iteration_finish_one(gfc, gr, ch);\n\t\t\t\tassert$16 (cod_info.part2_3_length <= LameInternalFlags_1.MAX_BITS_PER_CHANNEL);\n\t\t\t\tassert$16 (cod_info.part2_3_length <= targ_bits[ch]);\n\t\t\t} /* for ch */\n\t\t} /* for gr */\n\n\t\tthis.quantize.rv.ResvFrameEnd(gfc, mean_bits);\n\t};\n}\nvar CBRNewIterationLoop_1 = CBRNewIterationLoop;\n\nfunction HuffCodeTab(len, max, tab, hl) {\n    this.xlen = len;\n    this.linmax = max;\n    this.table = tab;\n    this.hlen = hl;\n}\n\nvar Tables$1 = {};\n\n\nTables$1.t1HB = [\n    1, 1,\n    1, 0\n];\n\nTables$1.t2HB = [\n    1, 2, 1,\n    3, 1, 1,\n    3, 2, 0\n];\n\nTables$1.t3HB = [\n    3, 2, 1,\n    1, 1, 1,\n    3, 2, 0\n];\n\nTables$1.t5HB = [\n    1, 2, 6, 5,\n    3, 1, 4, 4,\n    7, 5, 7, 1,\n    6, 1, 1, 0\n];\n\nTables$1.t6HB = [\n    7, 3, 5, 1,\n    6, 2, 3, 2,\n    5, 4, 4, 1,\n    3, 3, 2, 0\n];\n\nTables$1.t7HB = [\n    1, 2, 10, 19, 16, 10,\n    3, 3, 7, 10, 5, 3,\n    11, 4, 13, 17, 8, 4,\n    12, 11, 18, 15, 11, 2,\n    7, 6, 9, 14, 3, 1,\n    6, 4, 5, 3, 2, 0\n];\n\nTables$1.t8HB = [\n    3, 4, 6, 18, 12, 5,\n    5, 1, 2, 16, 9, 3,\n    7, 3, 5, 14, 7, 3,\n    19, 17, 15, 13, 10, 4,\n    13, 5, 8, 11, 5, 1,\n    12, 4, 4, 1, 1, 0\n];\n\nTables$1.t9HB = [\n    7, 5, 9, 14, 15, 7,\n    6, 4, 5, 5, 6, 7,\n    7, 6, 8, 8, 8, 5,\n    15, 6, 9, 10, 5, 1,\n    11, 7, 9, 6, 4, 1,\n    14, 4, 6, 2, 6, 0\n];\n\nTables$1.t10HB = [\n    1, 2, 10, 23, 35, 30, 12, 17,\n    3, 3, 8, 12, 18, 21, 12, 7,\n    11, 9, 15, 21, 32, 40, 19, 6,\n    14, 13, 22, 34, 46, 23, 18, 7,\n    20, 19, 33, 47, 27, 22, 9, 3,\n    31, 22, 41, 26, 21, 20, 5, 3,\n    14, 13, 10, 11, 16, 6, 5, 1,\n    9, 8, 7, 8, 4, 4, 2, 0\n];\n\nTables$1.t11HB = [\n    3, 4, 10, 24, 34, 33, 21, 15,\n    5, 3, 4, 10, 32, 17, 11, 10,\n    11, 7, 13, 18, 30, 31, 20, 5,\n    25, 11, 19, 59, 27, 18, 12, 5,\n    35, 33, 31, 58, 30, 16, 7, 5,\n    28, 26, 32, 19, 17, 15, 8, 14,\n    14, 12, 9, 13, 14, 9, 4, 1,\n    11, 4, 6, 6, 6, 3, 2, 0\n];\n\nTables$1.t12HB = [\n    9, 6, 16, 33, 41, 39, 38, 26,\n    7, 5, 6, 9, 23, 16, 26, 11,\n    17, 7, 11, 14, 21, 30, 10, 7,\n    17, 10, 15, 12, 18, 28, 14, 5,\n    32, 13, 22, 19, 18, 16, 9, 5,\n    40, 17, 31, 29, 17, 13, 4, 2,\n    27, 12, 11, 15, 10, 7, 4, 1,\n    27, 12, 8, 12, 6, 3, 1, 0\n];\n\nTables$1.t13HB = [\n    1, 5, 14, 21, 34, 51, 46, 71, 42, 52, 68, 52, 67, 44, 43, 19,\n    3, 4, 12, 19, 31, 26, 44, 33, 31, 24, 32, 24, 31, 35, 22, 14,\n    15, 13, 23, 36, 59, 49, 77, 65, 29, 40, 30, 40, 27, 33, 42, 16,\n    22, 20, 37, 61, 56, 79, 73, 64, 43, 76, 56, 37, 26, 31, 25, 14,\n    35, 16, 60, 57, 97, 75, 114, 91, 54, 73, 55, 41, 48, 53, 23, 24,\n    58, 27, 50, 96, 76, 70, 93, 84, 77, 58, 79, 29, 74, 49, 41, 17,\n    47, 45, 78, 74, 115, 94, 90, 79, 69, 83, 71, 50, 59, 38, 36, 15,\n    72, 34, 56, 95, 92, 85, 91, 90, 86, 73, 77, 65, 51, 44, 43, 42,\n    43, 20, 30, 44, 55, 78, 72, 87, 78, 61, 46, 54, 37, 30, 20, 16,\n    53, 25, 41, 37, 44, 59, 54, 81, 66, 76, 57, 54, 37, 18, 39, 11,\n    35, 33, 31, 57, 42, 82, 72, 80, 47, 58, 55, 21, 22, 26, 38, 22,\n    53, 25, 23, 38, 70, 60, 51, 36, 55, 26, 34, 23, 27, 14, 9, 7,\n    34, 32, 28, 39, 49, 75, 30, 52, 48, 40, 52, 28, 18, 17, 9, 5,\n    45, 21, 34, 64, 56, 50, 49, 45, 31, 19, 12, 15, 10, 7, 6, 3,\n    48, 23, 20, 39, 36, 35, 53, 21, 16, 23, 13, 10, 6, 1, 4, 2,\n    16, 15, 17, 27, 25, 20, 29, 11, 17, 12, 16, 8, 1, 1, 0, 1\n];\n\nTables$1.t15HB = [\n    7, 12, 18, 53, 47, 76, 124, 108, 89, 123, 108, 119, 107, 81, 122, 63,\n    13, 5, 16, 27, 46, 36, 61, 51, 42, 70, 52, 83, 65, 41, 59, 36,\n    19, 17, 15, 24, 41, 34, 59, 48, 40, 64, 50, 78, 62, 80, 56, 33,\n    29, 28, 25, 43, 39, 63, 55, 93, 76, 59, 93, 72, 54, 75, 50, 29,\n    52, 22, 42, 40, 67, 57, 95, 79, 72, 57, 89, 69, 49, 66, 46, 27,\n    77, 37, 35, 66, 58, 52, 91, 74, 62, 48, 79, 63, 90, 62, 40, 38,\n    125, 32, 60, 56, 50, 92, 78, 65, 55, 87, 71, 51, 73, 51, 70, 30,\n    109, 53, 49, 94, 88, 75, 66, 122, 91, 73, 56, 42, 64, 44, 21, 25,\n    90, 43, 41, 77, 73, 63, 56, 92, 77, 66, 47, 67, 48, 53, 36, 20,\n    71, 34, 67, 60, 58, 49, 88, 76, 67, 106, 71, 54, 38, 39, 23, 15,\n    109, 53, 51, 47, 90, 82, 58, 57, 48, 72, 57, 41, 23, 27, 62, 9,\n    86, 42, 40, 37, 70, 64, 52, 43, 70, 55, 42, 25, 29, 18, 11, 11,\n    118, 68, 30, 55, 50, 46, 74, 65, 49, 39, 24, 16, 22, 13, 14, 7,\n    91, 44, 39, 38, 34, 63, 52, 45, 31, 52, 28, 19, 14, 8, 9, 3,\n    123, 60, 58, 53, 47, 43, 32, 22, 37, 24, 17, 12, 15, 10, 2, 1,\n    71, 37, 34, 30, 28, 20, 17, 26, 21, 16, 10, 6, 8, 6, 2, 0\n];\n\nTables$1.t16HB = [\n    1, 5, 14, 44, 74, 63, 110, 93, 172, 149, 138, 242, 225, 195, 376, 17,\n    3, 4, 12, 20, 35, 62, 53, 47, 83, 75, 68, 119, 201, 107, 207, 9,\n    15, 13, 23, 38, 67, 58, 103, 90, 161, 72, 127, 117, 110, 209, 206, 16,\n    45, 21, 39, 69, 64, 114, 99, 87, 158, 140, 252, 212, 199, 387, 365, 26,\n    75, 36, 68, 65, 115, 101, 179, 164, 155, 264, 246, 226, 395, 382, 362, 9,\n    66, 30, 59, 56, 102, 185, 173, 265, 142, 253, 232, 400, 388, 378, 445, 16,\n    111, 54, 52, 100, 184, 178, 160, 133, 257, 244, 228, 217, 385, 366, 715, 10,\n    98, 48, 91, 88, 165, 157, 148, 261, 248, 407, 397, 372, 380, 889, 884, 8,\n    85, 84, 81, 159, 156, 143, 260, 249, 427, 401, 392, 383, 727, 713, 708, 7,\n    154, 76, 73, 141, 131, 256, 245, 426, 406, 394, 384, 735, 359, 710, 352, 11,\n    139, 129, 67, 125, 247, 233, 229, 219, 393, 743, 737, 720, 885, 882, 439, 4,\n    243, 120, 118, 115, 227, 223, 396, 746, 742, 736, 721, 712, 706, 223, 436, 6,\n    202, 224, 222, 218, 216, 389, 386, 381, 364, 888, 443, 707, 440, 437, 1728, 4,\n    747, 211, 210, 208, 370, 379, 734, 723, 714, 1735, 883, 877, 876, 3459, 865, 2,\n    377, 369, 102, 187, 726, 722, 358, 711, 709, 866, 1734, 871, 3458, 870, 434, 0,\n    12, 10, 7, 11, 10, 17, 11, 9, 13, 12, 10, 7, 5, 3, 1, 3\n];\n\nTables$1.t24HB = [\n    15, 13, 46, 80, 146, 262, 248, 434, 426, 669, 653, 649, 621, 517, 1032, 88,\n    14, 12, 21, 38, 71, 130, 122, 216, 209, 198, 327, 345, 319, 297, 279, 42,\n    47, 22, 41, 74, 68, 128, 120, 221, 207, 194, 182, 340, 315, 295, 541, 18,\n    81, 39, 75, 70, 134, 125, 116, 220, 204, 190, 178, 325, 311, 293, 271, 16,\n    147, 72, 69, 135, 127, 118, 112, 210, 200, 188, 352, 323, 306, 285, 540, 14,\n    263, 66, 129, 126, 119, 114, 214, 202, 192, 180, 341, 317, 301, 281, 262, 12,\n    249, 123, 121, 117, 113, 215, 206, 195, 185, 347, 330, 308, 291, 272, 520, 10,\n    435, 115, 111, 109, 211, 203, 196, 187, 353, 332, 313, 298, 283, 531, 381, 17,\n    427, 212, 208, 205, 201, 193, 186, 177, 169, 320, 303, 286, 268, 514, 377, 16,\n    335, 199, 197, 191, 189, 181, 174, 333, 321, 305, 289, 275, 521, 379, 371, 11,\n    668, 184, 183, 179, 175, 344, 331, 314, 304, 290, 277, 530, 383, 373, 366, 10,\n    652, 346, 171, 168, 164, 318, 309, 299, 287, 276, 263, 513, 375, 368, 362, 6,\n    648, 322, 316, 312, 307, 302, 292, 284, 269, 261, 512, 376, 370, 364, 359, 4,\n    620, 300, 296, 294, 288, 282, 273, 266, 515, 380, 374, 369, 365, 361, 357, 2,\n    1033, 280, 278, 274, 267, 264, 259, 382, 378, 372, 367, 363, 360, 358, 356, 0,\n    43, 20, 19, 17, 15, 13, 11, 9, 7, 6, 4, 7, 5, 3, 1, 3\n];\n\nTables$1.t32HB = [\n    1 << 0, 5 << 1, 4 << 1, 5 << 2, 6 << 1, 5 << 2, 4 << 2, 4 << 3,\n    7 << 1, 3 << 2, 6 << 2, 0 << 3, 7 << 2, 2 << 3, 3 << 3, 1 << 4\n];\n\nTables$1.t33HB = [\n    15 << 0, 14 << 1, 13 << 1, 12 << 2, 11 << 1, 10 << 2, 9 << 2, 8 << 3,\n    7 << 1, 6 << 2, 5 << 2, 4 << 3, 3 << 2, 2 << 3, 1 << 3, 0 << 4\n];\n\nTables$1.t1l = [\n    1, 4,\n    3, 5\n];\n\nTables$1.t2l = [\n    1, 4, 7,\n    4, 5, 7,\n    6, 7, 8\n];\n\nTables$1.t3l = [\n    2, 3, 7,\n    4, 4, 7,\n    6, 7, 8\n];\n\nTables$1.t5l = [\n    1, 4, 7, 8,\n    4, 5, 8, 9,\n    7, 8, 9, 10,\n    8, 8, 9, 10\n];\n\nTables$1.t6l = [\n    3, 4, 6, 8,\n    4, 4, 6, 7,\n    5, 6, 7, 8,\n    7, 7, 8, 9\n];\n\nTables$1.t7l = [\n    1, 4, 7, 9, 9, 10,\n    4, 6, 8, 9, 9, 10,\n    7, 7, 9, 10, 10, 11,\n    8, 9, 10, 11, 11, 11,\n    8, 9, 10, 11, 11, 12,\n    9, 10, 11, 12, 12, 12\n];\n\nTables$1.t8l = [\n    2, 4, 7, 9, 9, 10,\n    4, 4, 6, 10, 10, 10,\n    7, 6, 8, 10, 10, 11,\n    9, 10, 10, 11, 11, 12,\n    9, 9, 10, 11, 12, 12,\n    10, 10, 11, 11, 13, 13\n];\n\nTables$1.t9l = [\n    3, 4, 6, 7, 9, 10,\n    4, 5, 6, 7, 8, 10,\n    5, 6, 7, 8, 9, 10,\n    7, 7, 8, 9, 9, 10,\n    8, 8, 9, 9, 10, 11,\n    9, 9, 10, 10, 11, 11\n];\n\nTables$1.t10l = [\n    1, 4, 7, 9, 10, 10, 10, 11,\n    4, 6, 8, 9, 10, 11, 10, 10,\n    7, 8, 9, 10, 11, 12, 11, 11,\n    8, 9, 10, 11, 12, 12, 11, 12,\n    9, 10, 11, 12, 12, 12, 12, 12,\n    10, 11, 12, 12, 13, 13, 12, 13,\n    9, 10, 11, 12, 12, 12, 13, 13,\n    10, 10, 11, 12, 12, 13, 13, 13\n];\n\nTables$1.t11l = [\n    2, 4, 6, 8, 9, 10, 9, 10,\n    4, 5, 6, 8, 10, 10, 9, 10,\n    6, 7, 8, 9, 10, 11, 10, 10,\n    8, 8, 9, 11, 10, 12, 10, 11,\n    9, 10, 10, 11, 11, 12, 11, 12,\n    9, 10, 11, 12, 12, 13, 12, 13,\n    9, 9, 9, 10, 11, 12, 12, 12,\n    9, 9, 10, 11, 12, 12, 12, 12\n];\n\nTables$1.t12l = [\n    4, 4, 6, 8, 9, 10, 10, 10,\n    4, 5, 6, 7, 9, 9, 10, 10,\n    6, 6, 7, 8, 9, 10, 9, 10,\n    7, 7, 8, 8, 9, 10, 10, 10,\n    8, 8, 9, 9, 10, 10, 10, 11,\n    9, 9, 10, 10, 10, 11, 10, 11,\n    9, 9, 9, 10, 10, 11, 11, 12,\n    10, 10, 10, 11, 11, 11, 11, 12\n];\n\nTables$1.t13l = [\n    1, 5, 7, 8, 9, 10, 10, 11, 10, 11, 12, 12, 13, 13, 14, 14,\n    4, 6, 8, 9, 10, 10, 11, 11, 11, 11, 12, 12, 13, 14, 14, 14,\n    7, 8, 9, 10, 11, 11, 12, 12, 11, 12, 12, 13, 13, 14, 15, 15,\n    8, 9, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 15,\n    9, 9, 11, 11, 12, 12, 13, 13, 12, 13, 13, 14, 14, 15, 15, 16,\n    10, 10, 11, 12, 12, 12, 13, 13, 13, 13, 14, 13, 15, 15, 16, 16,\n    10, 11, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 15, 15, 16, 16,\n    11, 11, 12, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 16, 18, 18,\n    10, 10, 11, 12, 12, 13, 13, 14, 14, 14, 14, 15, 15, 16, 17, 17,\n    11, 11, 12, 12, 13, 13, 13, 15, 14, 15, 15, 16, 16, 16, 18, 17,\n    11, 12, 12, 13, 13, 14, 14, 15, 14, 15, 16, 15, 16, 17, 18, 19,\n    12, 12, 12, 13, 14, 14, 14, 14, 15, 15, 15, 16, 17, 17, 17, 18,\n    12, 13, 13, 14, 14, 15, 14, 15, 16, 16, 17, 17, 17, 18, 18, 18,\n    13, 13, 14, 15, 15, 15, 16, 16, 16, 16, 16, 17, 18, 17, 18, 18,\n    14, 14, 14, 15, 15, 15, 17, 16, 16, 19, 17, 17, 17, 19, 18, 18,\n    13, 14, 15, 16, 16, 16, 17, 16, 17, 17, 18, 18, 21, 20, 21, 18\n];\n\nTables$1.t15l = [\n    3, 5, 6, 8, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 14,\n    5, 5, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13,\n    6, 7, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 13, 13, 13,\n    7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 13, 13, 13, 14,\n    10, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 14, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 14, 14, 14,\n    10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 15,\n    12, 12, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 15, 15,\n    12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15,\n    13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 14, 15,\n    13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15\n];\n\nTables$1.t16_5l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 11,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 11,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 12,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 13,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 12,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 13,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 13,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 13,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 13,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 14,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 13,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 14,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 14,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 14,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 14,\n    11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 12\n];\n\nTables$1.t16l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 10,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 10,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 11,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 12,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 11,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 12,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 12,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 12,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 12,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 13,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 12,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 13,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 13,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 13,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 13,\n    10, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10\n];\n\nTables$1.t24l = [\n    4, 5, 7, 8, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 13, 10,\n    5, 6, 7, 8, 9, 10, 10, 11, 11, 11, 12, 12, 12, 12, 12, 10,\n    7, 7, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 9,\n    8, 8, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 9,\n    9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 12, 12, 12, 12, 13, 9,\n    10, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 9,\n    10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 9,\n    11, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 10,\n    12, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10,\n    13, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 10,\n    9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 6\n];\n\nTables$1.t32l = [\n    1 + 0, 4 + 1, 4 + 1, 5 + 2, 4 + 1, 6 + 2, 5 + 2, 6 + 3,\n    4 + 1, 5 + 2, 5 + 2, 6 + 3, 5 + 2, 6 + 3, 6 + 3, 6 + 4\n];\n\nTables$1.t33l = [\n    4 + 0, 4 + 1, 4 + 1, 4 + 2, 4 + 1, 4 + 2, 4 + 2, 4 + 3,\n    4 + 1, 4 + 2, 4 + 2, 4 + 3, 4 + 2, 4 + 3, 4 + 3, 4 + 4\n];\n\nTables$1.ht = [\n    /* xlen, linmax, table, hlen */\n    new HuffCodeTab(0, 0, null, null),\n    new HuffCodeTab(2, 0, Tables$1.t1HB, Tables$1.t1l),\n    new HuffCodeTab(3, 0, Tables$1.t2HB, Tables$1.t2l),\n    new HuffCodeTab(3, 0, Tables$1.t3HB, Tables$1.t3l),\n    new HuffCodeTab(0, 0, null, null), /* Apparently not used */\n    new HuffCodeTab(4, 0, Tables$1.t5HB, Tables$1.t5l),\n    new HuffCodeTab(4, 0, Tables$1.t6HB, Tables$1.t6l),\n    new HuffCodeTab(6, 0, Tables$1.t7HB, Tables$1.t7l),\n    new HuffCodeTab(6, 0, Tables$1.t8HB, Tables$1.t8l),\n    new HuffCodeTab(6, 0, Tables$1.t9HB, Tables$1.t9l),\n    new HuffCodeTab(8, 0, Tables$1.t10HB, Tables$1.t10l),\n    new HuffCodeTab(8, 0, Tables$1.t11HB, Tables$1.t11l),\n    new HuffCodeTab(8, 0, Tables$1.t12HB, Tables$1.t12l),\n    new HuffCodeTab(16, 0, Tables$1.t13HB, Tables$1.t13l),\n    new HuffCodeTab(0, 0, null, Tables$1.t16_5l), /* Apparently not used */\n    new HuffCodeTab(16, 0, Tables$1.t15HB, Tables$1.t15l),\n\n    new HuffCodeTab(1, 1, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(2, 3, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(3, 7, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(4, 15, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(6, 63, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(8, 255, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(10, 1023, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(13, 8191, Tables$1.t16HB, Tables$1.t16l),\n\n    new HuffCodeTab(4, 15, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(5, 31, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(6, 63, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(7, 127, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(8, 255, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(9, 511, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(11, 2047, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(13, 8191, Tables$1.t24HB, Tables$1.t24l),\n\n    new HuffCodeTab(0, 0, Tables$1.t32HB, Tables$1.t32l),\n    new HuffCodeTab(0, 0, Tables$1.t33HB, Tables$1.t33l),\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 16*16; i++) [\n *      largetbl[i] = ((ht[16].hlen[i]) << 16) + ht[24].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables$1.largetbl = [\n    0x010004, 0x050005, 0x070007, 0x090008, 0x0a0009, 0x0a000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000c, 0x0c000c, 0x0d000c, 0x0d000c, 0x0d000c, 0x0e000d, 0x0a000a,\n    0x040005, 0x060006, 0x080007, 0x090008, 0x0a0009, 0x0b000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000b, 0x0c000c, 0x0d000c, 0x0e000c, 0x0d000c, 0x0e000c, 0x0a000a,\n    0x070007, 0x080007, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0c000b, 0x0d000b, 0x0d000c, 0x0d000c, 0x0e000c, 0x0e000d, 0x0b0009,\n    0x090008, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0c0009,\n    0x0a0009, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000a, 0x0d000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000d, 0x0b0009,\n    0x0a000a, 0x0a0009, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0e000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0c0009,\n    0x0b000a, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0d000b, 0x0d000b,\n    0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000d, 0x0c0009,\n    0x0b000b, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b,\n    0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x11000d, 0x11000d, 0x0c000a,\n    0x0b000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b,\n    0x0f000b, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000d, 0x10000d, 0x0c000a,\n    0x0c000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b, 0x0f000c,\n    0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0f000d, 0x10000d, 0x0f000d, 0x0d000a,\n    0x0c000c, 0x0d000b, 0x0c000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c,\n    0x0f000c, 0x10000c, 0x10000c, 0x10000d, 0x11000d, 0x11000d, 0x10000d, 0x0c000a,\n    0x0d000c, 0x0d000c, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x10000c,\n    0x10000c, 0x10000c, 0x10000c, 0x10000d, 0x10000d, 0x0f000d, 0x10000d, 0x0d000a,\n    0x0d000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c,\n    0x0f000c, 0x11000c, 0x10000d, 0x10000d, 0x10000d, 0x10000d, 0x12000d, 0x0d000a,\n    0x0f000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000c,\n    0x10000d, 0x12000d, 0x11000d, 0x11000d, 0x11000d, 0x13000d, 0x11000d, 0x0d000a,\n    0x0e000d, 0x0f000c, 0x0d000c, 0x0e000c, 0x10000c, 0x10000c, 0x0f000c, 0x10000d,\n    0x10000d, 0x11000d, 0x12000d, 0x11000d, 0x13000d, 0x11000d, 0x10000d, 0x0d000a,\n    0x0a0009, 0x0a0009, 0x0a0009, 0x0b0009, 0x0b0009, 0x0c0009, 0x0c0009, 0x0c0009,\n    0x0d0009, 0x0d0009, 0x0d0009, 0x0d000a, 0x0d000a, 0x0d000a, 0x0d000a, 0x0a0006\n];\n/**\n * <CODE>\n *  for (i = 0; i < 3*3; i++) [\n *      table23[i] = ((ht[2].hlen[i]) << 16) + ht[3].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables$1.table23 = [\n    0x010002, 0x040003, 0x070007,\n    0x040004, 0x050004, 0x070007,\n    0x060006, 0x070007, 0x080008\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 4*4; i++) [\n *       table56[i] = ((ht[5].hlen[i]) << 16) + ht[6].hlen[i];\n *   ]\n * </CODE>\n *\n */\nTables$1.table56 = [\n    0x010003, 0x040004, 0x070006, 0x080008, 0x040004, 0x050004, 0x080006, 0x090007,\n    0x070005, 0x080006, 0x090007, 0x0a0008, 0x080007, 0x080007, 0x090008, 0x0a0009\n];\n\nTables$1.bitrate_table = [\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1], /* MPEG 2 */\n    [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1], /* MPEG 1 */\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, -1, -1, -1, -1, -1, -1, -1], /* MPEG 2.5 */\n];\n\n/**\n * MPEG 2, MPEG 1, MPEG 2.5.\n */\nTables$1.samplerate_table = [\n    [22050, 24000, 16000, -1],\n    [44100, 48000, 32000, -1],\n    [11025, 12000, 8000, -1],\n];\n\n/**\n * This is the scfsi_band table from 2.4.2.7 of the IS.\n */\nTables$1.scfsi_band = [0, 6, 11, 16, 21];\n\nvar Tables_1 = Tables$1;\n\nvar VbrMode$19 = common.VbrMode;\nvar Float$19 = common.Float;\nvar Util$19 = common.Util;\nvar new_float$19 = common.new_float;\nvar new_int$19 = common.new_int;\nvar assert$19 = common.assert;\n\n\n\n\n\nQuantizePVT$1.Q_MAX = (256 + 1);\nQuantizePVT$1.Q_MAX2 = 116;\nQuantizePVT$1.LARGE_BITS = 100000;\nQuantizePVT$1.IXMAX_VAL = 8206;\n\nfunction QuantizePVT$1() {\n\n    var tak = null;\n    var rv = null;\n    var psy = null;\n\n    this.setModules = function (_tk, _rv, _psy) {\n        tak = _tk;\n        rv = _rv;\n        psy = _psy;\n    };\n\n    function POW20(x) {\n        assert$19(0 <= (x + QuantizePVT$1.Q_MAX2) && x < QuantizePVT$1.Q_MAX);\n        return pow20[x + QuantizePVT$1.Q_MAX2];\n    }\n\n    this.IPOW20 = function (x) {\n        assert$19(0 <= x && x < QuantizePVT$1.Q_MAX);\n        return ipow20[x];\n    };\n\n    /**\n     * smallest such that 1.0+DBL_EPSILON != 1.0\n     */\n    var DBL_EPSILON = 2.2204460492503131e-016;\n\n    /**\n     * ix always <= 8191+15. see count_bits()\n     */\n    var IXMAX_VAL = QuantizePVT$1.IXMAX_VAL;\n\n    var PRECALC_SIZE = (IXMAX_VAL + 2);\n\n    var Q_MAX = QuantizePVT$1.Q_MAX;\n\n\n    /**\n     * <CODE>\n     * minimum possible number of\n     * -cod_info.global_gain + ((scalefac[] + (cod_info.preflag ? pretab[sfb] : 0))\n     * << (cod_info.scalefac_scale + 1)) + cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n     *\n     * for long block, 0+((15+3)<<2) = 18*4 = 72\n     * for short block, 0+(15<<2)+7*8 = 15*4+56 = 116\n     * </CODE>\n     */\n    var Q_MAX2 = QuantizePVT$1.Q_MAX2;\n\n    var LARGE_BITS = QuantizePVT$1.LARGE_BITS;\n\n\n    /**\n     * Assuming dynamic range=96dB, this value should be 92\n     */\n    var NSATHSCALE = 100;\n\n    /**\n     * The following table is used to implement the scalefactor partitioning for\n     * MPEG2 as described in section 2.4.3.2 of the IS. The indexing corresponds\n     * to the way the tables are presented in the IS:\n     *\n     * [table_number][row_in_table][column of nr_of_sfb]\n     */\n    this.nr_of_sfb_block = [\n        [[6, 5, 5, 5], [9, 9, 9, 9], [6, 9, 9, 9]],\n        [[6, 5, 7, 3], [9, 9, 12, 6], [6, 9, 12, 6]],\n        [[11, 10, 0, 0], [18, 18, 0, 0], [15, 18, 0, 0]],\n        [[7, 7, 7, 0], [12, 12, 12, 0], [6, 15, 12, 0]],\n        [[6, 6, 6, 3], [12, 9, 9, 6], [6, 12, 9, 6]],\n        [[8, 8, 5, 0], [15, 12, 9, 0], [6, 18, 9, 0]]];\n\n    /**\n     * Table B.6: layer3 preemphasis\n     */\n    var pretab = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n        2, 2, 3, 3, 3, 2, 0];\n    this.pretab = pretab;\n\n    /**\n     * Here are MPEG1 Table B.8 and MPEG2 Table B.1 -- Layer III scalefactor\n     * bands. <BR>\n     * Index into this using a method such as:<BR>\n     * idx = fr_ps.header.sampling_frequency + (fr_ps.header.version * 3)\n     */\n    this.sfBandIndex = [\n        // Table B.2.b: 22.05 kHz\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 24, 32, 42, 56, 74, 100, 132, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb21 pseudo sub bands\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb12 pseudo sub bands\n        ),\n        /* Table B.2.c: 24 kHz */ /* docs: 332. mpg123(broken): 330 */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 114, 136, 162, 194, 232, 278, 332, 394, 464,\n                540, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 136, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.2.a: 16 kHz */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.b: 44.1 kHz */\n        new ScaleFac_1([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134, 162, 196, 238, 288, 342, 418,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 40, 52, 66, 84, 106, 136, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.c: 48 kHz */\n        new ScaleFac_1([0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88, 106, 128, 156, 190, 230, 276, 330, 384,\n                576],\n            [0, 4, 8, 12, 16, 22, 28, 38, 50, 64, 80, 100, 126, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.a: 32 kHz */\n        new ScaleFac_1([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82, 102, 126, 156, 194, 240, 296, 364, 448, 550,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 11.025 kHz */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 12 kHz */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 8 kHz */\n        new ScaleFac_1([0, 12, 24, 36, 48, 60, 72, 88, 108, 132, 160, 192, 232, 280, 336, 400, 476, 566, 568, 570,\n                572, 574, 576],\n            [0 / 3, 24 / 3, 48 / 3, 72 / 3, 108 / 3, 156 / 3, 216 / 3, 288 / 3, 372 / 3, 480 / 3, 486 / 3,\n                492 / 3, 498 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        )\n    ];\n\n    var pow20 = new_float$19(Q_MAX + Q_MAX2 + 1);\n    var ipow20 = new_float$19(Q_MAX);\n    var pow43 = new_float$19(PRECALC_SIZE);\n\n    var adj43 = new_float$19(PRECALC_SIZE);\n    this.adj43 = adj43;\n\n    /**\n     * <PRE>\n     * compute the ATH for each scalefactor band cd range: 0..96db\n     *\n     * Input: 3.3kHz signal 32767 amplitude (3.3kHz is where ATH is smallest =\n     * -5db) longblocks: sfb=12 en0/bw=-11db max_en0 = 1.3db shortblocks: sfb=5\n     * -9db 0db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) longblocks: amp=1\n     * sfb=12 en0/bw=-103 db max_en0 = -92db amp=32767 sfb=12 -12 db -1.4db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) shortblocks: amp=1\n     * sfb=5 en0/bw= -99 -86 amp=32767 sfb=5 -9 db 4db\n     *\n     *\n     * MAX energy of largest wave at 3.3kHz = 1db AVE energy of largest wave at\n     * 3.3kHz = -11db Let's take AVE: -11db = maximum signal in sfb=12. Dynamic\n     * range of CD: 96db. Therefor energy of smallest audible wave in sfb=12 =\n     * -11 - 96 = -107db = ATH at 3.3kHz.\n     *\n     * ATH formula for this wave: -5db. To adjust to LAME scaling, we need ATH =\n     * ATH_formula - 103 (db) ATH = ATH * 2.5e-10 (ener)\n     * </PRE>\n     */\n    function ATHmdct(gfp, f) {\n        var ath = psy.ATHformula(f, gfp);\n\n        ath -= NSATHSCALE;\n\n        /* modify the MDCT scaling for the ATH and convert to energy */\n        ath = Math.pow(10.0, ath / 10.0 + gfp.ATHlower);\n        return ath;\n    }\n\n    function compute_ath(gfp) {\n        var ATH_l = gfp.internal_flags.ATH.l;\n        var ATH_psfb21 = gfp.internal_flags.ATH.psfb21;\n        var ATH_s = gfp.internal_flags.ATH.s;\n        var ATH_psfb12 = gfp.internal_flags.ATH.psfb12;\n        var gfc = gfp.internal_flags;\n        var samp_freq = gfp.out_samplerate;\n\n        for (var sfb = 0; sfb < Encoder_1.SBMAX_l; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            ATH_l[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_l[sfb] = Math.min(ATH_l[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder_1.PSFB21; sfb++) {\n            var start = gfc.scalefac_band.psfb21[sfb];\n            var end = gfc.scalefac_band.psfb21[sfb + 1];\n            ATH_psfb21[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb21[sfb] = Math.min(ATH_psfb21[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder_1.SBMAX_s; sfb++) {\n            var start = gfc.scalefac_band.s[sfb];\n            var end = gfc.scalefac_band.s[sfb + 1];\n            ATH_s[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_s[sfb] = Math.min(ATH_s[sfb], ATH_f);\n            }\n            ATH_s[sfb] *= (gfc.scalefac_band.s[sfb + 1] - gfc.scalefac_band.s[sfb]);\n        }\n\n        for (var sfb = 0; sfb < Encoder_1.PSFB12; sfb++) {\n            var start = gfc.scalefac_band.psfb12[sfb];\n            var end = gfc.scalefac_band.psfb12[sfb + 1];\n            ATH_psfb12[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb12[sfb] = Math.min(ATH_psfb12[sfb], ATH_f);\n            }\n            /* not sure about the following */\n            ATH_psfb12[sfb] *= (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12]);\n        }\n\n        /*\n         * no-ATH mode: reduce ATH to -200 dB\n         */\n        if (gfp.noATH) {\n            for (var sfb = 0; sfb < Encoder_1.SBMAX_l; sfb++) {\n                ATH_l[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder_1.PSFB21; sfb++) {\n                ATH_psfb21[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder_1.SBMAX_s; sfb++) {\n                ATH_s[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder_1.PSFB12; sfb++) {\n                ATH_psfb12[sfb] = 1E-20;\n            }\n        }\n\n        /*\n         * work in progress, don't rely on it too much\n         */\n        gfc.ATH.floor = 10. * Math.log10(ATHmdct(gfp, -1.));\n    }\n\n    /**\n     * initialization for iteration_loop\n     */\n    this.iteration_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var i;\n\n        if (gfc.iteration_init_init == 0) {\n            gfc.iteration_init_init = 1;\n\n            l3_side.main_data_begin = 0;\n            compute_ath(gfp);\n\n            pow43[0] = 0.0;\n            for (i = 1; i < PRECALC_SIZE; i++)\n                pow43[i] = Math.pow(i, 4.0 / 3.0);\n\n            for (i = 0; i < PRECALC_SIZE - 1; i++)\n                adj43[i] = ((i + 1) - Math.pow(\n                    0.5 * (pow43[i] + pow43[i + 1]), 0.75));\n            adj43[i] = 0.5;\n\n            for (i = 0; i < Q_MAX; i++)\n                ipow20[i] = Math.pow(2.0, (i - 210) * -0.1875);\n            for (i = 0; i <= Q_MAX + Q_MAX2; i++)\n                pow20[i] = Math.pow(2.0, (i - 210 - Q_MAX2) * 0.25);\n\n            tak.huffman_init(gfc);\n\n            {\n                var bass, alto, treble, sfb21;\n\n                i = (gfp.exp_nspsytune >> 2) & 63;\n                if (i >= 32)\n                    i -= 64;\n                bass = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 8) & 63;\n                if (i >= 32)\n                    i -= 64;\n                alto = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 14) & 63;\n                if (i >= 32)\n                    i -= 64;\n                treble = Math.pow(10, i / 4.0 / 10.0);\n\n                /*\n                 * to be compatible with Naoki's original code, the next 6 bits\n                 * define only the amount of changing treble for sfb21\n                 */\n                i = (gfp.exp_nspsytune >> 20) & 63;\n                if (i >= 32)\n                    i -= 64;\n                sfb21 = treble * Math.pow(10, i / 4.0 / 10.0);\n                for (i = 0; i < Encoder_1.SBMAX_l; i++) {\n                    var f;\n                    if (i <= 6)\n                        f = bass;\n                    else if (i <= 13)\n                        f = alto;\n                    else if (i <= 20)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.longfact[i] = f;\n                }\n                for (i = 0; i < Encoder_1.SBMAX_s; i++) {\n                    var f;\n                    if (i <= 5)\n                        f = bass;\n                    else if (i <= 10)\n                        f = alto;\n                    else if (i <= 11)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.shortfact[i] = f;\n                }\n            }\n        }\n    };\n\n    /**\n     * allocate bits among 2 channels based on PE<BR>\n     * mt 6/99<BR>\n     * bugfixes rh 8/01: often allocated more than the allowed 4095 bits\n     */\n    this.on_pe = function (gfp, pe,\n                           targ_bits, mean_bits, gr, cbr) {\n        var gfc = gfp.internal_flags;\n        var tbits = 0, bits;\n        var add_bits = new_int$19(2);\n        var ch;\n\n        /* allocate targ_bits for granule */\n        var mb = new MeanBits_1(tbits);\n        var extra_bits = rv.ResvMaxBits(gfp, mean_bits, mb, cbr);\n        tbits = mb.bits;\n        /* maximum allowed bits for this granule */\n        var max_bits = tbits + extra_bits;\n        if (max_bits > LameInternalFlags_1.MAX_BITS_PER_GRANULE) {\n            // hard limit per granule\n            max_bits = LameInternalFlags_1.MAX_BITS_PER_GRANULE;\n        }\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            /******************************************************************\n             * allocate bits for each channel\n             ******************************************************************/\n            targ_bits[ch] = Math.min(LameInternalFlags_1.MAX_BITS_PER_CHANNEL,\n                tbits / gfc.channels_out);\n\n            add_bits[ch] = 0 | (targ_bits[ch] * pe[gr][ch] / 700.0 - targ_bits[ch]);\n\n            /* at most increase bits by 1.5*average */\n            if (add_bits[ch] > mean_bits * 3 / 4)\n                add_bits[ch] = mean_bits * 3 / 4;\n            if (add_bits[ch] < 0)\n                add_bits[ch] = 0;\n\n            if (add_bits[ch] + targ_bits[ch] > LameInternalFlags_1.MAX_BITS_PER_CHANNEL)\n                add_bits[ch] = Math.max(0,\n                    LameInternalFlags_1.MAX_BITS_PER_CHANNEL - targ_bits[ch]);\n\n            bits += add_bits[ch];\n        }\n        if (bits > extra_bits) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                add_bits[ch] = extra_bits * add_bits[ch] / bits;\n            }\n        }\n\n        for (ch = 0; ch < gfc.channels_out; ++ch) {\n            targ_bits[ch] += add_bits[ch];\n            extra_bits -= add_bits[ch];\n        }\n\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            bits += targ_bits[ch];\n        }\n        if (bits > LameInternalFlags_1.MAX_BITS_PER_GRANULE) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                targ_bits[ch] *= LameInternalFlags_1.MAX_BITS_PER_GRANULE;\n                targ_bits[ch] /= bits;\n                sum += targ_bits[ch];\n            }\n            assert$19(sum <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n        }\n\n        return max_bits;\n    };\n\n    this.reduce_side = function (targ_bits, ms_ener_ratio, mean_bits, max_bits) {\n        assert$19(max_bits <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n        assert$19(targ_bits[0] + targ_bits[1] <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n\n        /*\n         * ms_ener_ratio = 0: allocate 66/33 mid/side fac=.33 ms_ener_ratio =.5:\n         * allocate 50/50 mid/side fac= 0\n         */\n        /* 75/25 split is fac=.5 */\n        var fac = .33 * (.5 - ms_ener_ratio) / .5;\n        if (fac < 0)\n            fac = 0;\n        if (fac > .5)\n            fac = .5;\n\n        /* number of bits to move from side channel to mid channel */\n        /* move_bits = fac*targ_bits[1]; */\n        var move_bits = 0 | (fac * .5 * (targ_bits[0] + targ_bits[1]));\n\n        if (move_bits > LameInternalFlags_1.MAX_BITS_PER_CHANNEL - targ_bits[0]) {\n            move_bits = LameInternalFlags_1.MAX_BITS_PER_CHANNEL - targ_bits[0];\n        }\n        if (move_bits < 0)\n            move_bits = 0;\n\n        if (targ_bits[1] >= 125) {\n            /* dont reduce side channel below 125 bits */\n            if (targ_bits[1] - move_bits > 125) {\n\n                /* if mid channel already has 2x more than average, dont bother */\n                /* mean_bits = bits per granule (for both channels) */\n                if (targ_bits[0] < mean_bits)\n                    targ_bits[0] += move_bits;\n                targ_bits[1] -= move_bits;\n            } else {\n                targ_bits[0] += targ_bits[1] - 125;\n                targ_bits[1] = 125;\n            }\n        }\n\n        move_bits = targ_bits[0] + targ_bits[1];\n        if (move_bits > max_bits) {\n            targ_bits[0] = (max_bits * targ_bits[0]) / move_bits;\n            targ_bits[1] = (max_bits * targ_bits[1]) / move_bits;\n        }\n        assert$19(targ_bits[0] <= LameInternalFlags_1.MAX_BITS_PER_CHANNEL);\n        assert$19(targ_bits[1] <= LameInternalFlags_1.MAX_BITS_PER_CHANNEL);\n        assert$19(targ_bits[0] + targ_bits[1] <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n    };\n\n    /**\n     *  Robert Hegemann 2001-04-27:\n     *  this adjusts the ATH, keeping the original noise floor\n     *  affects the higher frequencies more than the lower ones\n     */\n    this.athAdjust = function (a, x, athFloor) {\n        /*\n         * work in progress\n         */\n        var o = 90.30873362;\n        var p = 94.82444863;\n        var u = Util$19.FAST_LOG10_X(x, 10.0);\n        var v = a * a;\n        var w = 0.0;\n        u -= athFloor;\n        /* undo scaling */\n        if (v > 1E-20)\n            w = 1. + Util$19.FAST_LOG10_X(v, 10.0 / o);\n        if (w < 0)\n            w = 0.;\n        u *= w;\n        u += athFloor + o - p;\n        /* redo scaling */\n\n        return Math.pow(10., 0.1 * u);\n    };\n\n    /**\n     * Calculate the allowed distortion for each scalefactor band, as determined\n     * by the psychoacoustic model. xmin(sb) = ratio(sb) * en(sb) / bw(sb)\n     *\n     * returns number of sfb's with energy > ATH\n     */\n    this.calc_xmin = function (gfp, ratio, cod_info, pxmin) {\n        var pxminPos = 0;\n        var gfc = gfp.internal_flags;\n        var gsfb, j = 0, ath_over = 0;\n        var ATH = gfc.ATH;\n        var xr = cod_info.xr;\n        var enable_athaa_fix = (gfp.VBR == VbrMode$19.vbr_mtrh) ? 1 : 0;\n        var masking_lower = gfc.masking_lower;\n\n        if (gfp.VBR == VbrMode$19.vbr_mtrh || gfp.VBR == VbrMode$19.vbr_mt) {\n            /* was already done in PSY-Model */\n            masking_lower = 1.0;\n        }\n\n        for (gsfb = 0; gsfb < cod_info.psy_lmax; gsfb++) {\n            var en0, xmin;\n            var rh1, rh2;\n            var width, l;\n\n            if (gfp.VBR == VbrMode$19.vbr_rh || gfp.VBR == VbrMode$19.vbr_mtrh)\n                xmin = athAdjust(ATH.adjust, ATH.l[gsfb], ATH.floor);\n            else\n                xmin = ATH.adjust * ATH.l[gsfb];\n\n            width = cod_info.width[gsfb];\n            rh1 = xmin / width;\n            rh2 = DBL_EPSILON;\n            l = width >> 1;\n            en0 = 0.0;\n            do {\n                var xa, xb;\n                xa = xr[j] * xr[j];\n                en0 += xa;\n                rh2 += (xa < rh1) ? xa : rh1;\n                j++;\n                xb = xr[j] * xr[j];\n                en0 += xb;\n                rh2 += (xb < rh1) ? xb : rh1;\n                j++;\n            } while (--l > 0);\n            if (en0 > xmin)\n                ath_over++;\n\n            if (gsfb == Encoder_1.SBPSY_l) {\n                var x = xmin * gfc.nsPsy.longfact[gsfb];\n                if (rh2 < x) {\n                    rh2 = x;\n                }\n            }\n            if (enable_athaa_fix != 0) {\n                xmin = rh2;\n            }\n            if (!gfp.ATHonly) {\n                var e = ratio.en.l[gsfb];\n                if (e > 0.0) {\n                    var x;\n                    x = en0 * ratio.thm.l[gsfb] * masking_lower / e;\n                    if (enable_athaa_fix != 0)\n                        x *= gfc.nsPsy.longfact[gsfb];\n                    if (xmin < x)\n                        xmin = x;\n                }\n            }\n            if (enable_athaa_fix != 0)\n                pxmin[pxminPos++] = xmin;\n            else\n                pxmin[pxminPos++] = xmin * gfc.nsPsy.longfact[gsfb];\n        }\n        /* end of long block loop */\n\n        /* use this function to determine the highest non-zero coeff */\n        var max_nonzero = 575;\n        if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n            // NORM, START or STOP type, but not SHORT\n            var k = 576;\n            while (k-- != 0 && BitStream.EQ(xr[k], 0)) {\n                max_nonzero = k;\n            }\n        }\n        cod_info.max_nonzero_coeff = max_nonzero;\n\n        for (var sfb = cod_info.sfb_smin; gsfb < cod_info.psymax; sfb++, gsfb += 3) {\n            var width, b;\n            var tmpATH;\n            if (gfp.VBR == VbrMode$19.vbr_rh || gfp.VBR == VbrMode$19.vbr_mtrh)\n                tmpATH = athAdjust(ATH.adjust, ATH.s[sfb], ATH.floor);\n            else\n                tmpATH = ATH.adjust * ATH.s[sfb];\n\n            width = cod_info.width[gsfb];\n            for (b = 0; b < 3; b++) {\n                var en0 = 0.0, xmin;\n                var rh1, rh2;\n                var l = width >> 1;\n\n                rh1 = tmpATH / width;\n                rh2 = DBL_EPSILON;\n                do {\n                    var xa, xb;\n                    xa = xr[j] * xr[j];\n                    en0 += xa;\n                    rh2 += (xa < rh1) ? xa : rh1;\n                    j++;\n                    xb = xr[j] * xr[j];\n                    en0 += xb;\n                    rh2 += (xb < rh1) ? xb : rh1;\n                    j++;\n                } while (--l > 0);\n                if (en0 > tmpATH)\n                    ath_over++;\n                if (sfb == Encoder_1.SBPSY_s) {\n                    var x = tmpATH * gfc.nsPsy.shortfact[sfb];\n                    if (rh2 < x) {\n                        rh2 = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    xmin = rh2;\n                else\n                    xmin = tmpATH;\n\n                if (!gfp.ATHonly && !gfp.ATHshort) {\n                    var e = ratio.en.s[sfb][b];\n                    if (e > 0.0) {\n                        var x;\n                        x = en0 * ratio.thm.s[sfb][b] * masking_lower / e;\n                        if (enable_athaa_fix != 0)\n                            x *= gfc.nsPsy.shortfact[sfb];\n                        if (xmin < x)\n                            xmin = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    pxmin[pxminPos++] = xmin;\n                else\n                    pxmin[pxminPos++] = xmin * gfc.nsPsy.shortfact[sfb];\n            }\n            /* b */\n            if (gfp.useTemporal) {\n                if (pxmin[pxminPos - 3] > pxmin[pxminPos - 3 + 1])\n                    pxmin[pxminPos - 3 + 1] += (pxmin[pxminPos - 3] - pxmin[pxminPos - 3 + 1])\n                        * gfc.decay;\n                if (pxmin[pxminPos - 3 + 1] > pxmin[pxminPos - 3 + 2])\n                    pxmin[pxminPos - 3 + 2] += (pxmin[pxminPos - 3 + 1] - pxmin[pxminPos - 3 + 2])\n                        * gfc.decay;\n            }\n        }\n        /* end of short block sfb loop */\n\n        return ath_over;\n    };\n\n    function StartLine(j) {\n        this.s = j;\n    }\n\n    this.calc_noise_core = function (cod_info, startline, l, step) {\n        var noise = 0;\n        var j = startline.s;\n        var ix = cod_info.l3_enc;\n\n        if (j > cod_info.count1) {\n            while ((l--) != 0) {\n                var temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n            }\n        } else if (j > cod_info.big_values) {\n            var ix01 = new_float$19(2);\n            ix01[0] = 0;\n            ix01[1] = step;\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n            }\n        } else {\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n            }\n        }\n\n        startline.s = j;\n        return noise;\n    };\n\n    /**\n     * <PRE>\n     * -oo dB  =>  -1.00\n     * - 6 dB  =>  -0.97\n     * - 3 dB  =>  -0.80\n     * - 2 dB  =>  -0.64\n     * - 1 dB  =>  -0.38\n     *   0 dB  =>   0.00\n     * + 1 dB  =>  +0.49\n     * + 2 dB  =>  +1.06\n     * + 3 dB  =>  +1.68\n     * + 6 dB  =>  +3.69\n     * +10 dB  =>  +6.45\n     * </PRE>\n     */\n    this.calc_noise = function (cod_info, l3_xmin, distort, res, prev_noise) {\n        var distortPos = 0;\n        var l3_xminPos = 0;\n        var sfb, l, over = 0;\n        var over_noise_db = 0;\n        /* 0 dB relative to masking */\n        var tot_noise_db = 0;\n        /* -200 dB relative to masking */\n        var max_noise = -20.0;\n        var j = 0;\n        var scalefac = cod_info.scalefac;\n        var scalefacPos = 0;\n\n        res.over_SSD = 0;\n\n        for (sfb = 0; sfb < cod_info.psymax; sfb++) {\n            var s = cod_info.global_gain\n                - (((scalefac[scalefacPos++]) + (cod_info.preflag != 0 ? pretab[sfb]\n                    : 0)) << (cod_info.scalefac_scale + 1))\n                - cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n            var noise = 0.0;\n\n            if (prev_noise != null && (prev_noise.step[sfb] == s)) {\n\n                /* use previously computed values */\n                noise = prev_noise.noise[sfb];\n                j += cod_info.width[sfb];\n                distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                noise = prev_noise.noise_log[sfb];\n\n            } else {\n                var step = POW20(s);\n                l = cod_info.width[sfb] >> 1;\n\n                if ((j + cod_info.width[sfb]) > cod_info.max_nonzero_coeff) {\n                    var usefullsize;\n                    usefullsize = cod_info.max_nonzero_coeff - j + 1;\n\n                    if (usefullsize > 0)\n                        l = usefullsize >> 1;\n                    else\n                        l = 0;\n                }\n\n                var sl = new StartLine(j);\n                noise = this.calc_noise_core(cod_info, sl, l, step);\n                j = sl.s;\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.step[sfb] = s;\n                    prev_noise.noise[sfb] = noise;\n                }\n\n                noise = distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                /* multiplying here is adding in dB, but can overflow */\n                noise = Util$19.FAST_LOG10(Math.max(noise, 1E-20));\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.noise_log[sfb] = noise;\n                }\n            }\n\n            if (prev_noise != null) {\n                /* save noise values */\n                prev_noise.global_gain = cod_info.global_gain;\n            }\n\n            tot_noise_db += noise;\n\n            if (noise > 0.0) {\n                var tmp;\n\n                tmp = Math.max(0 | (noise * 10 + .5), 1);\n                res.over_SSD += tmp * tmp;\n\n                over++;\n                /* multiplying here is adding in dB -but can overflow */\n                /* over_noise *= noise; */\n                over_noise_db += noise;\n            }\n            max_noise = Math.max(max_noise, noise);\n\n        }\n\n        res.over_count = over;\n        res.tot_noise = tot_noise_db;\n        res.over_noise = over_noise_db;\n        res.max_noise = max_noise;\n\n        return over;\n    };\n\n    /**\n     * updates plotting data\n     *\n     * Mark Taylor 2000-??-??\n     *\n     * Robert Hegemann: moved noise/distortion calc into it\n     */\n    this.set_pinfo = function (gfp, cod_info, ratio, gr, ch) {\n        var gfc = gfp.internal_flags;\n        var sfb, sfb2;\n        var l;\n        var en0, en1;\n        var ifqstep = (cod_info.scalefac_scale == 0) ? .5 : 1.0;\n        var scalefac = cod_info.scalefac;\n\n        var l3_xmin = new_float$19(L3Side.SFBMAX);\n        var xfsf = new_float$19(L3Side.SFBMAX);\n        var noise = new CalcNoiseResult();\n\n        calc_xmin(gfp, ratio, cod_info, l3_xmin);\n        calc_noise(cod_info, l3_xmin, xfsf, noise, null);\n\n        var j = 0;\n        sfb2 = cod_info.sfb_lmax;\n        if (cod_info.block_type != Encoder_1.SHORT_TYPE\n            && 0 == cod_info.mixed_block_flag)\n            sfb2 = 22;\n        for (sfb = 0; sfb < sfb2; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            var bw = end - start;\n            for (en0 = 0.0; j < end; j++)\n                en0 += cod_info.xr[j] * cod_info.xr[j];\n            en0 /= bw;\n            /* convert to MDCT units */\n            /* scaling so it shows up on FFT plot */\n            en1 = 1e15;\n            gfc.pinfo.en[gr][ch][sfb] = en1 * en0;\n            gfc.pinfo.xfsf[gr][ch][sfb] = en1 * l3_xmin[sfb] * xfsf[sfb] / bw;\n\n            if (ratio.en.l[sfb] > 0 && !gfp.ATHonly)\n                en0 = en0 / ratio.en.l[sfb];\n            else\n                en0 = 0.0;\n\n            gfc.pinfo.thr[gr][ch][sfb] = en1\n                * Math.max(en0 * ratio.thm.l[sfb], gfc.ATH.l[sfb]);\n\n            /* there is no scalefactor bands >= SBPSY_l */\n            gfc.pinfo.LAMEsfb[gr][ch][sfb] = 0;\n            if (cod_info.preflag != 0 && sfb >= 11)\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] = -ifqstep * pretab[sfb];\n\n            if (sfb < Encoder_1.SBPSY_l) {\n                /* scfsi should be decoded by caller side */\n                assert$19(scalefac[sfb] >= 0);\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] -= ifqstep * scalefac[sfb];\n            }\n        }\n        /* for sfb */\n\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            sfb2 = sfb;\n            for (sfb = cod_info.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                var bw = end - start;\n                for (var i = 0; i < 3; i++) {\n                    for (en0 = 0.0, l = start; l < end; l++) {\n                        en0 += cod_info.xr[j] * cod_info.xr[j];\n                        j++;\n                    }\n                    en0 = Math.max(en0 / bw, 1e-20);\n                    /* convert to MDCT units */\n                    /* scaling so it shows up on FFT plot */\n                    en1 = 1e15;\n\n                    gfc.pinfo.en_s[gr][ch][3 * sfb + i] = en1 * en0;\n                    gfc.pinfo.xfsf_s[gr][ch][3 * sfb + i] = en1 * l3_xmin[sfb2]\n                        * xfsf[sfb2] / bw;\n                    if (ratio.en.s[sfb][i] > 0)\n                        en0 = en0 / ratio.en.s[sfb][i];\n                    else\n                        en0 = 0.0;\n                    if (gfp.ATHonly || gfp.ATHshort)\n                        en0 = 0;\n\n                    gfc.pinfo.thr_s[gr][ch][3 * sfb + i] = en1\n                        * Math.max(en0 * ratio.thm.s[sfb][i],\n                            gfc.ATH.s[sfb]);\n\n                    /* there is no scalefactor bands >= SBPSY_s */\n                    gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] = -2.0\n                        * cod_info.subblock_gain[i];\n                    if (sfb < Encoder_1.SBPSY_s) {\n                        gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] -= ifqstep\n                            * scalefac[sfb2];\n                    }\n                    sfb2++;\n                }\n            }\n        }\n        /* block type short */\n        gfc.pinfo.LAMEqss[gr][ch] = cod_info.global_gain;\n        gfc.pinfo.LAMEmainbits[gr][ch] = cod_info.part2_3_length\n            + cod_info.part2_length;\n        gfc.pinfo.LAMEsfbits[gr][ch] = cod_info.part2_length;\n\n        gfc.pinfo.over[gr][ch] = noise.over_count;\n        gfc.pinfo.max_noise[gr][ch] = noise.max_noise * 10.0;\n        gfc.pinfo.over_noise[gr][ch] = noise.over_noise * 10.0;\n        gfc.pinfo.tot_noise[gr][ch] = noise.tot_noise * 10.0;\n        gfc.pinfo.over_SSD[gr][ch] = noise.over_SSD;\n    };\n\n    /**\n     * updates plotting data for a whole frame\n     *\n     * Robert Hegemann 2000-10-21\n     */\n    \n\n}\n\nvar QuantizePVT_1 = QuantizePVT$1;\n\n/*\n *\tMP3 huffman table selecting and bit counting\n *\n *\tCopyright (c) 1999-2005 Takehiro TOMINAGA\n *\tCopyright (c) 2002-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\t See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Takehiro.java,v 1.26 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\n\nvar System$18 = common.System;\nvar Arrays$18 = common.Arrays;\nvar new_int$18 = common.new_int;\nvar assert$18 = common.assert;\n\n\n\n\n\n\n\nfunction Takehiro$1() {\n\n    var qupvt = null;\n    this.qupvt = null;\n\n    this.setModules = function (_qupvt) {\n        this.qupvt = _qupvt;\n        qupvt = _qupvt;\n    };\n\n    function Bits(b) {\n        this.bits = 0 | b;\n    }\n\n    var subdv_table = [[0, 0], /* 0 bands */\n        [0, 0], /* 1 bands */\n        [0, 0], /* 2 bands */\n        [0, 0], /* 3 bands */\n        [0, 0], /* 4 bands */\n        [0, 1], /* 5 bands */\n        [1, 1], /* 6 bands */\n        [1, 1], /* 7 bands */\n        [1, 2], /* 8 bands */\n        [2, 2], /* 9 bands */\n        [2, 3], /* 10 bands */\n        [2, 3], /* 11 bands */\n        [3, 4], /* 12 bands */\n        [3, 4], /* 13 bands */\n        [3, 4], /* 14 bands */\n        [4, 5], /* 15 bands */\n        [4, 5], /* 16 bands */\n        [4, 6], /* 17 bands */\n        [5, 6], /* 18 bands */\n        [5, 6], /* 19 bands */\n        [5, 7], /* 20 bands */\n        [6, 7], /* 21 bands */\n        [6, 7], /* 22 bands */\n    ];\n\n    /**\n     * nonlinear quantization of xr More accurate formula than the ISO formula.\n     * Takes into account the fact that we are quantizing xr . ix, but we want\n     * ix^4/3 to be as close as possible to x^4/3. (taking the nearest int would\n     * mean ix is as close as possible to xr, which is different.)\n     *\n     * From Segher Boessenkool <segher@eastsite.nl> 11/1999\n     *\n     * 09/2000: ASM code removed in favor of IEEE754 hack by Takehiro Tominaga.\n     * If you need the ASM code, check CVS circa Aug 2000.\n     *\n     * 01/2004: Optimizations by Gabriel Bouvigne\n     */\n    function quantize_lines_xrpow_01(l, istep, xr, xrPos, ix, ixPos) {\n        var compareval0 = (1.0 - 0.4054) / istep;\n\n        assert$18(l > 0);\n        l = l >> 1;\n        while ((l--) != 0) {\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n        }\n    }\n\n    /**\n     * XRPOW_FTOI is a macro to convert floats to ints.<BR>\n     * if XRPOW_FTOI(x) = nearest_int(x), then QUANTFAC(x)=adj43asm[x]<BR>\n     * ROUNDFAC= -0.0946<BR>\n     *\n     * if XRPOW_FTOI(x) = floor(x), then QUANTFAC(x)=asj43[x]<BR>\n     * ROUNDFAC=0.4054<BR>\n     *\n     * Note: using floor() or 0| is extremely slow. On machines where the\n     * TAKEHIRO_IEEE754_HACK code above does not work, it is worthwile to write\n     * some ASM for XRPOW_FTOI().\n     */\n    function quantize_lines_xrpow(l, istep, xr, xrPos, ix, ixPos) {\n        assert$18(l > 0);\n\n        l = l >> 1;\n        var remaining = l % 2;\n        l = l >> 1;\n        while (l-- != 0) {\n            var x0, x1, x2, x3;\n            var rx0, rx1, rx2, rx3;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            x2 = xr[xrPos++] * istep;\n            rx1 = 0 | x1;\n            x3 = xr[xrPos++] * istep;\n            rx2 = 0 | x2;\n            x0 += qupvt.adj43[rx0];\n            rx3 = 0 | x3;\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            x2 += qupvt.adj43[rx2];\n            ix[ixPos++] = 0 | x1;\n            x3 += qupvt.adj43[rx3];\n            ix[ixPos++] = 0 | x2;\n            ix[ixPos++] = 0 | x3;\n        }\n        if (remaining != 0) {\n            var x0, x1;\n            var rx0, rx1;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            rx1 = 0 | x1;\n            x0 += qupvt.adj43[rx0];\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            ix[ixPos++] = 0 | x1;\n        }\n    }\n\n    /**\n     * Quantization function This function will select which lines to quantize\n     * and call the proper quantization function\n     */\n    function quantize_xrpow(xp, pi, istep, codInfo, prevNoise) {\n        /* quantize on xr^(3/4) instead of xr */\n        var sfb;\n        var sfbmax;\n        var j = 0;\n        var prev_data_use;\n        var accumulate = 0;\n        var accumulate01 = 0;\n        var xpPos = 0;\n        var iData = pi;\n        var iDataPos = 0;\n        var acc_iData = iData;\n        var acc_iDataPos = 0;\n        var acc_xp = xp;\n        var acc_xpPos = 0;\n\n        /*\n         * Reusing previously computed data does not seems to work if global\n         * gain is changed. Finding why it behaves this way would allow to use a\n         * cache of previously computed values (let's 10 cached values per sfb)\n         * that would probably provide a noticeable speedup\n         */\n        prev_data_use = (prevNoise != null && (codInfo.global_gain == prevNoise.global_gain));\n\n        if (codInfo.block_type == Encoder_1.SHORT_TYPE)\n            sfbmax = 38;\n        else\n            sfbmax = 21;\n\n        for (sfb = 0; sfb <= sfbmax; sfb++) {\n            var step = -1;\n\n            if (prev_data_use || codInfo.block_type == Encoder_1.NORM_TYPE) {\n                step = codInfo.global_gain\n                    - ((codInfo.scalefac[sfb] + (codInfo.preflag != 0 ? qupvt.pretab[sfb]\n                        : 0)) << (codInfo.scalefac_scale + 1))\n                    - codInfo.subblock_gain[codInfo.window[sfb]] * 8;\n            }\n            assert$18(codInfo.width[sfb] >= 0);\n            if (prev_data_use && (prevNoise.step[sfb] == step)) {\n                /*\n                 * do not recompute this part, but compute accumulated lines\n                 */\n                if (accumulate != 0) {\n                    quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                        acc_iData, acc_iDataPos);\n                    accumulate = 0;\n                }\n                if (accumulate01 != 0) {\n                    quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                        acc_xpPos, acc_iData, acc_iDataPos);\n                    accumulate01 = 0;\n                }\n            } else { /* should compute this part */\n                var l = codInfo.width[sfb];\n\n                if ((j + codInfo.width[sfb]) > codInfo.max_nonzero_coeff) {\n                    /* do not compute upper zero part */\n                    var usefullsize;\n                    usefullsize = codInfo.max_nonzero_coeff - j + 1;\n                    Arrays$18.fill(pi, codInfo.max_nonzero_coeff, 576, 0);\n                    l = usefullsize;\n\n                    if (l < 0) {\n                        l = 0;\n                    }\n\n                    /* no need to compute higher sfb values */\n                    sfb = sfbmax + 1;\n                }\n\n                /* accumulate lines to quantize */\n                if (0 == accumulate && 0 == accumulate01) {\n                    acc_iData = iData;\n                    acc_iDataPos = iDataPos;\n                    acc_xp = xp;\n                    acc_xpPos = xpPos;\n                }\n                if (prevNoise != null && prevNoise.sfb_count1 > 0\n                    && sfb >= prevNoise.sfb_count1\n                    && prevNoise.step[sfb] > 0\n                    && step >= prevNoise.step[sfb]) {\n\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate01 += l;\n                } else {\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate += l;\n                }\n\n                if (l <= 0) {\n                    /*\n                     * rh: 20040215 may happen due to \"prev_data_use\"\n                     * optimization\n                     */\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                    }\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                    }\n\n                    break;\n                    /* ends for-loop */\n                }\n            }\n            if (sfb <= sfbmax) {\n                iDataPos += codInfo.width[sfb];\n                xpPos += codInfo.width[sfb];\n                j += codInfo.width[sfb];\n            }\n        }\n        if (accumulate != 0) { /* last data part */\n            quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate = 0;\n        }\n        if (accumulate01 != 0) { /* last data part */\n            quantize_lines_xrpow_01(accumulate01, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate01 = 0;\n        }\n\n    }\n\n    /**\n     * ix_max\n     */\n    function ix_max(ix, ixPos, endPos) {\n        var max1 = 0, max2 = 0;\n\n        do {\n            var x1 = ix[ixPos++];\n            var x2 = ix[ixPos++];\n            if (max1 < x1)\n                max1 = x1;\n\n            if (max2 < x2)\n                max2 = x2;\n        } while (ixPos < endPos);\n        if (max1 < max2)\n            max1 = max2;\n        return max1;\n    }\n\n    function count_bit_ESC(ix, ixPos, end, t1, t2, s) {\n        /* ESC-table is used */\n        var linbits = Tables_1.ht[t1].xlen * 65536 + Tables_1.ht[t2].xlen;\n        var sum = 0, sum2;\n\n        do {\n            var x = ix[ixPos++];\n            var y = ix[ixPos++];\n\n            if (x != 0) {\n                if (x > 14) {\n                    x = 15;\n                    sum += linbits;\n                }\n                x *= 16;\n            }\n\n            if (y != 0) {\n                if (y > 14) {\n                    y = 15;\n                    sum += linbits;\n                }\n                x += y;\n            }\n\n            sum += Tables_1.largetbl[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1 = t2;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC(ix, ixPos, end, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var hlen1 = Tables_1.ht[1].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * 2 + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n        } while (ixPos < end);\n\n        s.bits += sum1;\n        return 1;\n    }\n\n    function count_bit_noESC_from2(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum = 0, sum2;\n        var xlen = Tables_1.ht[t1].xlen;\n        var hlen;\n        if (t1 == 2)\n            hlen = Tables_1.table23;\n        else\n            hlen = Tables_1.table56;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum += hlen[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1++;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC_from3(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var sum2 = 0;\n        var sum3 = 0;\n        var xlen = Tables_1.ht[t1].xlen;\n        var hlen1 = Tables_1.ht[t1].hlen;\n        var hlen2 = Tables_1.ht[t1 + 1].hlen;\n        var hlen3 = Tables_1.ht[t1 + 2].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n            sum2 += hlen2[x];\n            sum3 += hlen3[x];\n        } while (ixPos < end);\n        var t = t1;\n        if (sum1 > sum2) {\n            sum1 = sum2;\n            t++;\n        }\n        if (sum1 > sum3) {\n            sum1 = sum3;\n            t = t1 + 2;\n        }\n        s.bits += sum1;\n\n        return t;\n    }\n\n    /*************************************************************************/\n    /* choose table */\n    /*************************************************************************/\n\n    var huf_tbl_noESC = [1, 2, 5, 7, 7, 10, 10, 13, 13,\n        13, 13, 13, 13, 13, 13];\n\n    /**\n     * Choose the Huffman table that will encode ix[begin..end] with the fewest\n     * bits.\n     *\n     * Note: This code contains knowledge about the sizes and characteristics of\n     * the Huffman tables as defined in the IS (Table B.7), and will not work\n     * with any arbitrary tables.\n     */\n    function choose_table(ix, ixPos, endPos, s) {\n        var max = ix_max(ix, ixPos, endPos);\n\n        switch (max) {\n            case 0:\n                return max;\n\n            case 1:\n                return count_bit_noESC(ix, ixPos, endPos, s);\n\n            case 2:\n            case 3:\n                return count_bit_noESC_from2(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                return count_bit_noESC_from3(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            default:\n                /* try tables with linbits */\n                if (max > QuantizePVT_1.IXMAX_VAL) {\n                    s.bits = QuantizePVT_1.LARGE_BITS;\n                    return -1;\n                }\n                max -= 15;\n                var choice2;\n                for (choice2 = 24; choice2 < 32; choice2++) {\n                    if (Tables_1.ht[choice2].linmax >= max) {\n                        break;\n                    }\n                }\n                var choice;\n                for (choice = choice2 - 8; choice < 24; choice++) {\n                    if (Tables_1.ht[choice].linmax >= max) {\n                        break;\n                    }\n                }\n                return count_bit_ESC(ix, ixPos, endPos, choice, choice2, s);\n        }\n    }\n\n    /**\n     * count_bit\n     */\n    this.noquant_count_bits = function (gfc, gi, prev_noise) {\n        var ix = gi.l3_enc;\n        var i = Math.min(576, ((gi.max_nonzero_coeff + 2) >> 1) << 1);\n\n        if (prev_noise != null)\n            prev_noise.sfb_count1 = 0;\n\n        /* Determine count1 region */\n        for (; i > 1; i -= 2)\n            if ((ix[i - 1] | ix[i - 2]) != 0)\n                break;\n        gi.count1 = i;\n\n        /* Determines the number of bits to encode the quadruples. */\n        var a1 = 0;\n        var a2 = 0;\n        for (; i > 3; i -= 4) {\n            var p;\n            /* hack to check if all values <= 1 */\n            //throw \"TODO: HACK         if ((((long) ix[i - 1] | (long) ix[i - 2] | (long) ix[i - 3] | (long) ix[i - 4]) & 0xffffffffL) > 1L        \"\n            //if (true) {\n            if (((ix[i - 1] | ix[i - 2] | ix[i - 3] | ix[i - 4]) & 0x7fffffff) > 1) {\n                break;\n            }\n            p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2 + ix[i - 1];\n            a1 += Tables_1.t32l[p];\n            a2 += Tables_1.t33l[p];\n        }\n        var bits = a1;\n        gi.count1table_select = 0;\n        if (a1 > a2) {\n            bits = a2;\n            gi.count1table_select = 1;\n        }\n\n        gi.count1bits = bits;\n        gi.big_values = i;\n        if (i == 0)\n            return bits;\n\n        if (gi.block_type == Encoder_1.SHORT_TYPE) {\n            a1 = 3 * gfc.scalefac_band.s[3];\n            if (a1 > gi.big_values)\n                a1 = gi.big_values;\n            a2 = gi.big_values;\n\n        } else if (gi.block_type == Encoder_1.NORM_TYPE) {\n            assert$18(i <= 576);\n            /* bv_scf has 576 entries (0..575) */\n            a1 = gi.region0_count = gfc.bv_scf[i - 2];\n            a2 = gi.region1_count = gfc.bv_scf[i - 1];\n\n            assert$18(a1 + a2 + 2 < Encoder_1.SBPSY_l);\n            a2 = gfc.scalefac_band.l[a1 + a2 + 2];\n            a1 = gfc.scalefac_band.l[a1 + 1];\n            if (a2 < i) {\n                var bi = new Bits(bits);\n                gi.table_select[2] = choose_table(ix, a2, i, bi);\n                bits = bi.bits;\n            }\n        } else {\n            gi.region0_count = 7;\n            /* gi.region1_count = SBPSY_l - 7 - 1; */\n            gi.region1_count = Encoder_1.SBMAX_l - 1 - 7 - 1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            a2 = i;\n            if (a1 > a2) {\n                a1 = a2;\n            }\n        }\n\n        /* have to allow for the case when bigvalues < region0 < region1 */\n        /* (and region0, region1 are ignored) */\n        a1 = Math.min(a1, i);\n        a2 = Math.min(a2, i);\n\n        assert$18(a1 >= 0);\n        assert$18(a2 >= 0);\n\n        /* Count the number of bits necessary to code the bigvalues region. */\n        if (0 < a1) {\n            var bi = new Bits(bits);\n            gi.table_select[0] = choose_table(ix, 0, a1, bi);\n            bits = bi.bits;\n        }\n        if (a1 < a2) {\n            var bi = new Bits(bits);\n            gi.table_select[1] = choose_table(ix, a1, a2, bi);\n            bits = bi.bits;\n        }\n        if (gfc.use_best_huffman == 2) {\n            gi.part2_3_length = bits;\n            best_huffman_divide(gfc, gi);\n            bits = gi.part2_3_length;\n        }\n\n        if (prev_noise != null) {\n            if (gi.block_type == Encoder_1.NORM_TYPE) {\n                var sfb = 0;\n                while (gfc.scalefac_band.l[sfb] < gi.big_values) {\n                    sfb++;\n                }\n                prev_noise.sfb_count1 = sfb;\n            }\n        }\n\n        return bits;\n    };\n\n    this.count_bits = function (gfc, xr, gi, prev_noise) {\n        var ix = gi.l3_enc;\n\n        /* since quantize_xrpow uses table lookup, we need to check this first: */\n        var w = (QuantizePVT_1.IXMAX_VAL) / qupvt.IPOW20(gi.global_gain);\n\n        if (gi.xrpow_max > w)\n            return QuantizePVT_1.LARGE_BITS;\n\n        quantize_xrpow(xr, ix, qupvt.IPOW20(gi.global_gain), gi, prev_noise);\n\n        if ((gfc.substep_shaping & 2) != 0) {\n            var j = 0;\n            /* 0.634521682242439 = 0.5946*2**(.5*0.1875) */\n            var gain = gi.global_gain + gi.scalefac_scale;\n            var roundfac = 0.634521682242439 / qupvt.IPOW20(gain);\n            for (var sfb = 0; sfb < gi.sfbmax; sfb++) {\n                var width = gi.width[sfb];\n                assert$18(width >= 0);\n                if (0 == gfc.pseudohalf[sfb]) {\n                    j += width;\n                } else {\n                    var k;\n                    for (k = j, j += width; k < j; ++k) {\n                        ix[k] = (xr[k] >= roundfac) ? ix[k] : 0;\n                    }\n                }\n            }\n        }\n        return this.noquant_count_bits(gfc, gi, prev_noise);\n    };\n\n    /**\n     * re-calculate the best scalefac_compress using scfsi the saved bits are\n     * kept in the bit reservoir.\n     */\n    function recalc_divide_init(gfc, cod_info, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info.big_values;\n\n        for (var r0 = 0; r0 <= 7 + 15; r0++) {\n            r01_bits[r0] = QuantizePVT_1.LARGE_BITS;\n        }\n\n        for (var r0 = 0; r0 < 16; r0++) {\n            var a1 = gfc.scalefac_band.l[r0 + 1];\n            if (a1 >= bigv)\n                break;\n            var r0bits = 0;\n            var bi = new Bits(r0bits);\n            var r0t = choose_table(ix, 0, a1, bi);\n            r0bits = bi.bits;\n\n            for (var r1 = 0; r1 < 8; r1++) {\n                var a2 = gfc.scalefac_band.l[r0 + r1 + 2];\n                if (a2 >= bigv)\n                    break;\n                var bits = r0bits;\n                bi = new Bits(bits);\n                var r1t = choose_table(ix, a1, a2, bi);\n                bits = bi.bits;\n                if (r01_bits[r0 + r1] > bits) {\n                    r01_bits[r0 + r1] = bits;\n                    r01_div[r0 + r1] = r0;\n                    r0_tbl[r0 + r1] = r0t;\n                    r1_tbl[r0 + r1] = r1t;\n                }\n            }\n        }\n    }\n\n    function recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info2.big_values;\n\n        for (var r2 = 2; r2 < Encoder_1.SBMAX_l + 1; r2++) {\n            var a2 = gfc.scalefac_band.l[r2];\n            if (a2 >= bigv)\n                break;\n            var bits = r01_bits[r2 - 2] + cod_info2.count1bits;\n            if (gi.part2_3_length <= bits)\n                break;\n\n            var bi = new Bits(bits);\n            var r2t = choose_table(ix, a2, bigv, bi);\n            bits = bi.bits;\n            if (gi.part2_3_length <= bits)\n                continue;\n\n            gi.assign(cod_info2);\n            gi.part2_3_length = bits;\n            gi.region0_count = r01_div[r2 - 2];\n            gi.region1_count = r2 - 2 - r01_div[r2 - 2];\n            gi.table_select[0] = r0_tbl[r2 - 2];\n            gi.table_select[1] = r1_tbl[r2 - 2];\n            gi.table_select[2] = r2t;\n        }\n    }\n\n    this.best_huffman_divide = function (gfc, gi) {\n        var cod_info2 = new GrInfo_1();\n        var ix = gi.l3_enc;\n        var r01_bits = new_int$18(7 + 15 + 1);\n        var r01_div = new_int$18(7 + 15 + 1);\n        var r0_tbl = new_int$18(7 + 15 + 1);\n        var r1_tbl = new_int$18(7 + 15 + 1);\n\n        /* SHORT BLOCK stuff fails for MPEG2 */\n        if (gi.block_type == Encoder_1.SHORT_TYPE && gfc.mode_gr == 1)\n            return;\n\n        cod_info2.assign(gi);\n        if (gi.block_type == Encoder_1.NORM_TYPE) {\n            recalc_divide_init(gfc, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl);\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        }\n        var i = cod_info2.big_values;\n        if (i == 0 || (ix[i - 2] | ix[i - 1]) > 1)\n            return;\n\n        i = gi.count1 + 2;\n        if (i > 576)\n            return;\n\n        /* Determines the number of bits to encode the quadruples. */\n        cod_info2.assign(gi);\n        cod_info2.count1 = i;\n        var a1 = 0;\n        var a2 = 0;\n\n        assert$18(i <= 576);\n\n        for (; i > cod_info2.big_values; i -= 4) {\n            var p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2\n                + ix[i - 1];\n            a1 += Tables_1.t32l[p];\n            a2 += Tables_1.t33l[p];\n        }\n        cod_info2.big_values = i;\n\n        cod_info2.count1table_select = 0;\n        if (a1 > a2) {\n            a1 = a2;\n            cod_info2.count1table_select = 1;\n        }\n\n        cod_info2.count1bits = a1;\n\n        if (cod_info2.block_type == Encoder_1.NORM_TYPE)\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        else {\n            /* Count the number of bits necessary to code the bigvalues region. */\n            cod_info2.part2_3_length = a1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            if (a1 > i) {\n                a1 = i;\n            }\n            if (a1 > 0) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[0] = choose_table(ix, 0, a1, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (i > a1) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[1] = choose_table(ix, a1, i, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (gi.part2_3_length > cod_info2.part2_3_length)\n                gi.assign(cod_info2);\n        }\n    };\n\n    var slen1_n = [1, 1, 1, 1, 8, 2, 2, 2, 4, 4, 4, 8, 8, 8, 16, 16];\n    var slen2_n = [1, 2, 4, 8, 1, 2, 4, 8, 2, 4, 8, 2, 4, 8, 4, 8];\n    var slen1_tab = [0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4];\n    var slen2_tab = [0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3];\n    Takehiro$1.slen1_tab = slen1_tab;\n    Takehiro$1.slen2_tab = slen2_tab;\n\n    function scfsi_calc(ch, l3_side) {\n        var sfb;\n        var gi = l3_side.tt[1][ch];\n        var g0 = l3_side.tt[0][ch];\n\n        for (var i = 0; i < Tables_1.scfsi_band.length - 1; i++) {\n            for (sfb = Tables_1.scfsi_band[i]; sfb < Tables_1.scfsi_band[i + 1]; sfb++) {\n                if (g0.scalefac[sfb] != gi.scalefac[sfb]\n                    && gi.scalefac[sfb] >= 0)\n                    break;\n            }\n            if (sfb == Tables_1.scfsi_band[i + 1]) {\n                for (sfb = Tables_1.scfsi_band[i]; sfb < Tables_1.scfsi_band[i + 1]; sfb++) {\n                    gi.scalefac[sfb] = -1;\n                }\n                l3_side.scfsi[ch][i] = 1;\n            }\n        }\n        var s1 = 0;\n        var c1 = 0;\n        for (sfb = 0; sfb < 11; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c1++;\n            if (s1 < gi.scalefac[sfb])\n                s1 = gi.scalefac[sfb];\n        }\n        var s2 = 0;\n        var c2 = 0;\n        for (; sfb < Encoder_1.SBPSY_l; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c2++;\n            if (s2 < gi.scalefac[sfb])\n                s2 = gi.scalefac[sfb];\n        }\n\n        for (var i = 0; i < 16; i++) {\n            if (s1 < slen1_n[i] && s2 < slen2_n[i]) {\n                var c = slen1_tab[i] * c1 + slen2_tab[i] * c2;\n                if (gi.part2_length > c) {\n                    gi.part2_length = c;\n                    gi.scalefac_compress = i;\n                }\n            }\n        }\n    }\n\n    /**\n     * Find the optimal way to store the scalefactors. Only call this routine\n     * after final scalefactors have been chosen and the channel/granule will\n     * not be re-encoded.\n     */\n    this.best_scalefac_store = function (gfc, gr, ch, l3_side) {\n        /* use scalefac_scale if we can */\n        var gi = l3_side.tt[gr][ch];\n        var sfb, i, j, l;\n        var recalc = 0;\n\n        /*\n         * remove scalefacs from bands with ix=0. This idea comes from the AAC\n         * ISO docs. added mt 3/00\n         */\n        /* check if l3_enc=0 */\n        j = 0;\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            var width = gi.width[sfb];\n            assert$18(width >= 0);\n            j += width;\n            for (l = -width; l < 0; l++) {\n                if (gi.l3_enc[l + j] != 0)\n                    break;\n            }\n            if (l == 0)\n                gi.scalefac[sfb] = recalc = -2;\n            /* anything goes. */\n            /*\n             * only best_scalefac_store and calc_scfsi know--and only they\n             * should know--about the magic number -2.\n             */\n        }\n\n        if (0 == gi.scalefac_scale && 0 == gi.preflag) {\n            var s = 0;\n            for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                if (gi.scalefac[sfb] > 0)\n                    s |= gi.scalefac[sfb];\n\n            if (0 == (s & 1) && s != 0) {\n                for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] >>= 1;\n\n                gi.scalefac_scale = recalc = 1;\n            }\n        }\n\n        if (0 == gi.preflag && gi.block_type != Encoder_1.SHORT_TYPE\n            && gfc.mode_gr == 2) {\n            for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                if (gi.scalefac[sfb] < qupvt.pretab[sfb]\n                    && gi.scalefac[sfb] != -2)\n                    break;\n            if (sfb == Encoder_1.SBPSY_l) {\n                for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] -= qupvt.pretab[sfb];\n\n                gi.preflag = recalc = 1;\n            }\n        }\n\n        for (i = 0; i < 4; i++)\n            l3_side.scfsi[ch][i] = 0;\n\n        if (gfc.mode_gr == 2 && gr == 1\n            && l3_side.tt[0][ch].block_type != Encoder_1.SHORT_TYPE\n            && l3_side.tt[1][ch].block_type != Encoder_1.SHORT_TYPE) {\n            scfsi_calc(ch, l3_side);\n            recalc = 0;\n        }\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            if (gi.scalefac[sfb] == -2) {\n                gi.scalefac[sfb] = 0;\n                /* if anything goes, then 0 is a good choice */\n            }\n        }\n        if (recalc != 0) {\n            if (gfc.mode_gr == 2) {\n                this.scale_bitcount(gi);\n            } else {\n                this.scale_bitcount_lsf(gfc, gi);\n            }\n        }\n    };\n\n    function all_scalefactors_not_negative(scalefac, n) {\n        for (var i = 0; i < n; ++i) {\n            if (scalefac[i] < 0)\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 18*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_short = [0, 18, 36, 54, 54, 36, 54, 72,\n        54, 72, 90, 72, 90, 108, 108, 126];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 17*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_mixed = [0, 18, 36, 54, 51, 35, 53, 71,\n        52, 70, 88, 69, 87, 105, 104, 122];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 11*slen1_tab[i] + 10*slen2_tab[i]\n     */\n    var scale_long = [0, 10, 20, 30, 33, 21, 31, 41, 32, 42,\n        52, 43, 53, 63, 64, 74];\n\n    /**\n     * Also calculates the number of bits necessary to code the scalefactors.\n     */\n    this.scale_bitcount = function (cod_info) {\n        var k, sfb, max_slen1 = 0, max_slen2 = 0;\n\n        /* maximum values */\n        var tab;\n        var scalefac = cod_info.scalefac;\n\n        assert$18(all_scalefactors_not_negative(scalefac, cod_info.sfbmax));\n\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            tab = scale_short;\n            if (cod_info.mixed_block_flag != 0)\n                tab = scale_mixed;\n        } else { /* block_type == 1,2,or 3 */\n            tab = scale_long;\n            if (0 == cod_info.preflag) {\n                for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                    if (scalefac[sfb] < qupvt.pretab[sfb])\n                        break;\n\n                if (sfb == Encoder_1.SBPSY_l) {\n                    cod_info.preflag = 1;\n                    for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                        scalefac[sfb] -= qupvt.pretab[sfb];\n                }\n            }\n        }\n\n        for (sfb = 0; sfb < cod_info.sfbdivide; sfb++)\n            if (max_slen1 < scalefac[sfb])\n                max_slen1 = scalefac[sfb];\n\n        for (; sfb < cod_info.sfbmax; sfb++)\n            if (max_slen2 < scalefac[sfb])\n                max_slen2 = scalefac[sfb];\n\n        /*\n         * from Takehiro TOMINAGA <tominaga@isoternet.org> 10/99 loop over *all*\n         * posible values of scalefac_compress to find the one which uses the\n         * smallest number of bits. ISO would stop at first valid index\n         */\n        cod_info.part2_length = QuantizePVT_1.LARGE_BITS;\n        for (k = 0; k < 16; k++) {\n            if (max_slen1 < slen1_n[k] && max_slen2 < slen2_n[k]\n                && cod_info.part2_length > tab[k]) {\n                cod_info.part2_length = tab[k];\n                cod_info.scalefac_compress = k;\n            }\n        }\n        return cod_info.part2_length == QuantizePVT_1.LARGE_BITS;\n    };\n\n    /**\n     * table of largest scalefactor values for MPEG2\n     */\n    var max_range_sfac_tab = [[15, 15, 7, 7],\n        [15, 15, 7, 0], [7, 3, 0, 0], [15, 31, 31, 0],\n        [7, 7, 7, 0], [3, 3, 0, 0]];\n\n    /**\n     * Also counts the number of bits to encode the scalefacs but for MPEG 2\n     * Lower sampling frequencies (24, 22.05 and 16 kHz.)\n     *\n     * This is reverse-engineered from section 2.4.3.2 of the MPEG2 IS,\n     * \"Audio Decoding Layer III\"\n     */\n    this.scale_bitcount_lsf = function (gfc, cod_info) {\n        var table_number, row_in_table, partition, nr_sfb, window;\n        var over;\n        var i, sfb;\n        var max_sfac = new_int$18(4);\n//var partition_table;\n        var scalefac = cod_info.scalefac;\n\n        /*\n         * Set partition table. Note that should try to use table one, but do\n         * not yet...\n         */\n        if (cod_info.preflag != 0)\n            table_number = 2;\n        else\n            table_number = 0;\n\n        for (i = 0; i < 4; i++)\n            max_sfac[i] = 0;\n\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            row_in_table = 1;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition] / 3;\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    for (window = 0; window < 3; window++)\n                        if (scalefac[sfb * 3 + window] > max_sfac[partition])\n                            max_sfac[partition] = scalefac[sfb * 3 + window];\n            }\n        } else {\n            row_in_table = 0;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition];\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    if (scalefac[sfb] > max_sfac[partition])\n                        max_sfac[partition] = scalefac[sfb];\n            }\n        }\n\n        for (over = false, partition = 0; partition < 4; partition++) {\n            if (max_sfac[partition] > max_range_sfac_tab[table_number][partition])\n                over = true;\n        }\n        if (!over) {\n            var slen1, slen2, slen3, slen4;\n\n            cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (partition = 0; partition < 4; partition++)\n                cod_info.slen[partition] = log2tab[max_sfac[partition]];\n\n            /* set scalefac_compress */\n            slen1 = cod_info.slen[0];\n            slen2 = cod_info.slen[1];\n            slen3 = cod_info.slen[2];\n            slen4 = cod_info.slen[3];\n\n            switch (table_number) {\n                case 0:\n                    cod_info.scalefac_compress = (((slen1 * 5) + slen2) << 4)\n                        + (slen3 << 2) + slen4;\n                    break;\n\n                case 1:\n                    cod_info.scalefac_compress = 400 + (((slen1 * 5) + slen2) << 2)\n                        + slen3;\n                    break;\n\n                case 2:\n                    cod_info.scalefac_compress = 500 + (slen1 * 3) + slen2;\n                    break;\n\n                default:\n                    System$18.err.printf(\"intensity stereo not implemented yet\\n\");\n                    break;\n            }\n        }\n        if (!over) {\n            assert$18(cod_info.sfb_partition_table != null);\n            cod_info.part2_length = 0;\n            for (partition = 0; partition < 4; partition++)\n                cod_info.part2_length += cod_info.slen[partition]\n                    * cod_info.sfb_partition_table[partition];\n        }\n        return over;\n    };\n\n    /*\n     * Since no bands have been over-amplified, we can set scalefac_compress and\n     * slen[] for the formatter\n     */\n    var log2tab = [0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,\n        4, 4, 4, 4];\n\n    this.huffman_init = function (gfc) {\n        for (var i = 2; i <= 576; i += 2) {\n            var scfb_anz = 0, bv_index;\n            while (gfc.scalefac_band.l[++scfb_anz] < i)\n                ;\n\n            bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            while (gfc.scalefac_band.l[bv_index + 1] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                /*\n                 * this is an indication that everything is going to be encoded\n                 * as region0: bigvalues < region0 < region1 so lets set\n                 * region0, region1 to some value larger than bigvalues\n                 */\n                bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            }\n\n            gfc.bv_scf[i - 2] = bv_index;\n\n            bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            while (gfc.scalefac_band.l[bv_index + gfc.bv_scf[i - 2] + 2] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            }\n\n            gfc.bv_scf[i - 1] = bv_index;\n        }\n    };\n}\n\nvar Takehiro_1 = Takehiro$1;\n\nvar System$17 = common.System;\nvar Arrays$17 = common.Arrays;\nvar new_byte$17 = common.new_byte;\nvar new_float_n$17 = common.new_float_n;\nvar new_int$17 = common.new_int;\nvar assert$17 = common.assert;\n\n\n\n\n\n\nBitStream$1.EQ = function (a, b) {\n    return (Math.abs(a) > Math.abs(b)) ? (Math.abs((a) - (b)) <= (Math\n        .abs(a) * 1e-6))\n        : (Math.abs((a) - (b)) <= (Math.abs(b) * 1e-6));\n};\n\nBitStream$1.NEQ = function (a, b) {\n    return !BitStream$1.EQ(a, b);\n};\n\nfunction BitStream$1() {\n    var self = this;\n    var CRC16_POLYNOMIAL = 0x8005;\n\n    /*\n     * we work with ints, so when doing bit manipulation, we limit ourselves to\n     * MAX_LENGTH-2 just to be on the safe side\n     */\n    var MAX_LENGTH = 32;\n\n    //GainAnalysis ga;\n    //MPGLib mpg;\n    //Version ver;\n    //VBRTag vbr;\n    var ga = null;\n    var mpg = null;\n    var ver = null;\n    var vbr = null;\n\n    //public final void setModules(GainAnalysis ga, MPGLib mpg, Version ver,\n    //\tVBRTag vbr) {\n\n    this.setModules = function (_ga, _mpg, _ver, _vbr) {\n        ga = _ga;\n        mpg = _mpg;\n        ver = _ver;\n        vbr = _vbr;\n    };\n\n    /**\n     * Bit stream buffer.\n     */\n    //private byte[] buf;\n    var buf = null;\n    /**\n     * Bit counter of bit stream.\n     */\n    var totbit = 0;\n    /**\n     * Pointer to top byte in buffer.\n     */\n    var bufByteIdx = 0;\n    /**\n     * Pointer to top bit of top byte in buffer.\n     */\n    var bufBitIdx = 0;\n\n    /**\n     * compute bitsperframe and mean_bits for a layer III frame\n     */\n    this.getframebits = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var bit_rate;\n\n        /* get bitrate in kbps [?] */\n        if (gfc.bitrate_index != 0)\n            bit_rate = Tables_1.bitrate_table[gfp.version][gfc.bitrate_index];\n        else\n            bit_rate = gfp.brate;\n        assert$17(8 <= bit_rate && bit_rate <= 640);\n\n        /* main encoding routine toggles padding on and off */\n        /* one Layer3 Slot consists of 8 bits */\n        var bytes = 0 | (gfp.version + 1) * 72000 * bit_rate / gfp.out_samplerate + gfc.padding;\n        return 8 * bytes;\n    };\n\n    function putheader_bits(gfc) {\n        System$17.arraycopy(gfc.header[gfc.w_ptr].buf, 0, buf, bufByteIdx, gfc.sideinfo_len);\n        bufByteIdx += gfc.sideinfo_len;\n        totbit += gfc.sideinfo_len * 8;\n        gfc.w_ptr = (gfc.w_ptr + 1) & (LameInternalFlags_1.MAX_HEADER_BUF - 1);\n    }\n\n    /**\n     * write j bits into the bit stream\n     */\n    function putbits2(gfc, val, j) {\n        assert$17(j < MAX_LENGTH - 2);\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                assert$17(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\n                assert$17(gfc.header[gfc.w_ptr].write_timing >= totbit);\n                if (gfc.header[gfc.w_ptr].write_timing == totbit) {\n                    putheader_bits(gfc);\n                }\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            assert$17(j < MAX_LENGTH);\n            /* 32 too large on 32 bit machines */\n            assert$17(bufBitIdx < MAX_LENGTH);\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * write j bits into the bit stream, ignoring frame headers\n     */\n    function putbits_noheaders(gfc, val, j) {\n        assert$17(j < MAX_LENGTH - 2);\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                assert$17(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            assert$17(j < MAX_LENGTH);\n            /* 32 too large on 32 bit machines */\n            assert$17(bufBitIdx < MAX_LENGTH);\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * Some combinations of bitrate, Fs, and stereo make it impossible to stuff\n     * out a frame using just main_data, due to the limited number of bits to\n     * indicate main_data_length. In these situations, we put stuffing bits into\n     * the ancillary data...\n     */\n    function drain_into_ancillary(gfp, remainingBits) {\n        var gfc = gfp.internal_flags;\n        var i;\n        assert$17(remainingBits >= 0);\n\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4c, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x41, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4d, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x45, 8);\n            remainingBits -= 8;\n        }\n\n        if (remainingBits >= 32) {\n            var version = ver.getLameShortVersion();\n            if (remainingBits >= 32)\n                for (i = 0; i < version.length && remainingBits >= 8; ++i) {\n                    remainingBits -= 8;\n                    putbits2(gfc, version.charAt(i), 8);\n                }\n        }\n\n        for (; remainingBits >= 1; remainingBits -= 1) {\n            putbits2(gfc, gfc.ancillary_flag, 1);\n            gfc.ancillary_flag ^= (!gfp.disable_reservoir ? 1 : 0);\n        }\n\n        assert$17(remainingBits == 0);\n\n    }\n\n    /**\n     * write N bits into the header\n     */\n    function writeheader(gfc, val, j) {\n        var ptr = gfc.header[gfc.h_ptr].ptr;\n\n        while (j > 0) {\n            var k = Math.min(j, 8 - (ptr & 7));\n            j -= k;\n            assert$17(j < MAX_LENGTH);\n            /* >> 32 too large for 32 bit machines */\n\n            gfc.header[gfc.h_ptr].buf[ptr >> 3] |= ((val >> j)) << (8 - (ptr & 7) - k);\n            ptr += k;\n        }\n        gfc.header[gfc.h_ptr].ptr = ptr;\n    }\n\n    function CRC_update(value, crc) {\n        value <<= 8;\n        for (var i = 0; i < 8; i++) {\n            value <<= 1;\n            crc <<= 1;\n\n            if ((((crc ^ value) & 0x10000) != 0))\n                crc ^= CRC16_POLYNOMIAL;\n        }\n        return crc;\n    }\n\n    this.CRC_writeheader = function (gfc, header) {\n        var crc = 0xffff;\n        /* (jo) init crc16 for error_protection */\n\n        crc = CRC_update(header[2] & 0xff, crc);\n        crc = CRC_update(header[3] & 0xff, crc);\n        for (var i = 6; i < gfc.sideinfo_len; i++) {\n            crc = CRC_update(header[i] & 0xff, crc);\n        }\n\n        header[4] = (byte)(crc >> 8);\n        header[5] = (byte)(crc & 255);\n    };\n\n    function encodeSideInfo2(gfp, bitsPerFrame) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var gr, ch;\n\n        l3_side = gfc.l3_side;\n        gfc.header[gfc.h_ptr].ptr = 0;\n        Arrays$17.fill(gfc.header[gfc.h_ptr].buf, 0, gfc.sideinfo_len, 0);\n        if (gfp.out_samplerate < 16000)\n            writeheader(gfc, 0xffe, 12);\n        else\n            writeheader(gfc, 0xfff, 12);\n        writeheader(gfc, (gfp.version), 1);\n        writeheader(gfc, 4 - 3, 2);\n        writeheader(gfc, (!gfp.error_protection ? 1 : 0), 1);\n        writeheader(gfc, (gfc.bitrate_index), 4);\n        writeheader(gfc, (gfc.samplerate_index), 2);\n        writeheader(gfc, (gfc.padding), 1);\n        writeheader(gfc, (gfp.extension), 1);\n        writeheader(gfc, (gfp.mode.ordinal()), 2);\n        writeheader(gfc, (gfc.mode_ext), 2);\n        writeheader(gfc, (gfp.copyright), 1);\n        writeheader(gfc, (gfp.original), 1);\n        writeheader(gfc, (gfp.emphasis), 2);\n        if (gfp.error_protection) {\n            writeheader(gfc, 0, 16);\n            /* dummy */\n        }\n\n        if (gfp.version == 1) {\n            /* MPEG1 */\n            assert$17(l3_side.main_data_begin >= 0);\n            writeheader(gfc, (l3_side.main_data_begin), 9);\n\n            if (gfc.channels_out == 2)\n                writeheader(gfc, l3_side.private_bits, 3);\n            else\n                writeheader(gfc, l3_side.private_bits, 5);\n\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var band;\n                for (band = 0; band < 4; band++) {\n                    writeheader(gfc, l3_side.scfsi[ch][band], 1);\n                }\n            }\n\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                    writeheader(gfc, gi.big_values / 2, 9);\n                    writeheader(gfc, gi.global_gain, 8);\n                    writeheader(gfc, gi.scalefac_compress, 4);\n\n                    if (gi.block_type != Encoder_1.NORM_TYPE) {\n                        writeheader(gfc, 1, 1);\n                        /* window_switching_flag */\n                        writeheader(gfc, gi.block_type, 2);\n                        writeheader(gfc, gi.mixed_block_flag, 1);\n\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n\n                        writeheader(gfc, gi.subblock_gain[0], 3);\n                        writeheader(gfc, gi.subblock_gain[1], 3);\n                        writeheader(gfc, gi.subblock_gain[2], 3);\n                    } else {\n                        writeheader(gfc, 0, 1);\n                        /* window_switching_flag */\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n                        if (gi.table_select[2] == 14)\n                            gi.table_select[2] = 16;\n                        writeheader(gfc, gi.table_select[2], 5);\n\n                        assert$17(0 <= gi.region0_count && gi.region0_count < 16);\n                        assert$17(0 <= gi.region1_count && gi.region1_count < 8);\n                        writeheader(gfc, gi.region0_count, 4);\n                        writeheader(gfc, gi.region1_count, 3);\n                    }\n                    writeheader(gfc, gi.preflag, 1);\n                    writeheader(gfc, gi.scalefac_scale, 1);\n                    writeheader(gfc, gi.count1table_select, 1);\n                }\n            }\n        } else {\n            /* MPEG2 */\n            assert$17(l3_side.main_data_begin >= 0);\n            writeheader(gfc, (l3_side.main_data_begin), 8);\n            writeheader(gfc, l3_side.private_bits, gfc.channels_out);\n\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                writeheader(gfc, gi.big_values / 2, 9);\n                writeheader(gfc, gi.global_gain, 8);\n                writeheader(gfc, gi.scalefac_compress, 9);\n\n                if (gi.block_type != Encoder_1.NORM_TYPE) {\n                    writeheader(gfc, 1, 1);\n                    /* window_switching_flag */\n                    writeheader(gfc, gi.block_type, 2);\n                    writeheader(gfc, gi.mixed_block_flag, 1);\n\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n\n                    writeheader(gfc, gi.subblock_gain[0], 3);\n                    writeheader(gfc, gi.subblock_gain[1], 3);\n                    writeheader(gfc, gi.subblock_gain[2], 3);\n                } else {\n                    writeheader(gfc, 0, 1);\n                    /* window_switching_flag */\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n                    if (gi.table_select[2] == 14)\n                        gi.table_select[2] = 16;\n                    writeheader(gfc, gi.table_select[2], 5);\n\n                    assert$17(0 <= gi.region0_count && gi.region0_count < 16);\n                    assert$17(0 <= gi.region1_count && gi.region1_count < 8);\n                    writeheader(gfc, gi.region0_count, 4);\n                    writeheader(gfc, gi.region1_count, 3);\n                }\n\n                writeheader(gfc, gi.scalefac_scale, 1);\n                writeheader(gfc, gi.count1table_select, 1);\n            }\n        }\n\n        if (gfp.error_protection) {\n            /* (jo) error_protection: add crc16 information to header */\n            CRC_writeheader(gfc, gfc.header[gfc.h_ptr].buf);\n        }\n\n        {\n            var old = gfc.h_ptr;\n            assert$17(gfc.header[old].ptr == gfc.sideinfo_len * 8);\n\n            gfc.h_ptr = (old + 1) & (LameInternalFlags_1.MAX_HEADER_BUF - 1);\n            gfc.header[gfc.h_ptr].write_timing = gfc.header[old].write_timing\n                + bitsPerFrame;\n\n            if (gfc.h_ptr == gfc.w_ptr) {\n                /* yikes! we are out of header buffer space */\n                System$17.err\n                    .println(\"Error: MAX_HEADER_BUF too small in bitstream.c \\n\");\n            }\n\n        }\n    }\n\n    function huffman_coder_count1(gfc, gi) {\n        /* Write count1 area */\n        var h = Tables_1.ht[gi.count1table_select + 32];\n        var i, bits = 0;\n\n        var ix = gi.big_values;\n        var xr = gi.big_values;\n        assert$17(gi.count1table_select < 2);\n\n        for (i = (gi.count1 - gi.big_values) / 4; i > 0; --i) {\n            var huffbits = 0;\n            var p = 0, v;\n\n            v = gi.l3_enc[ix + 0];\n            if (v != 0) {\n                p += 8;\n                if (gi.xr[xr + 0] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 1];\n            if (v != 0) {\n                p += 4;\n                huffbits *= 2;\n                if (gi.xr[xr + 1] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 2];\n            if (v != 0) {\n                p += 2;\n                huffbits *= 2;\n                if (gi.xr[xr + 2] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 3];\n            if (v != 0) {\n                p++;\n                huffbits *= 2;\n                if (gi.xr[xr + 3] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            ix += 4;\n            xr += 4;\n            putbits2(gfc, huffbits + h.table[p], h.hlen[p]);\n            bits += h.hlen[p];\n        }\n        return bits;\n    }\n\n    /**\n     * Implements the pseudocode of page 98 of the IS\n     */\n    function Huffmancode(gfc, tableindex, start, end, gi) {\n        var h = Tables_1.ht[tableindex];\n        var bits = 0;\n\n        assert$17(tableindex < 32);\n        if (0 == tableindex)\n            return bits;\n\n        for (var i = start; i < end; i += 2) {\n            var cbits = 0;\n            var xbits = 0;\n            var linbits = h.xlen;\n            var xlen = h.xlen;\n            var ext = 0;\n            var x1 = gi.l3_enc[i];\n            var x2 = gi.l3_enc[i + 1];\n\n            if (x1 != 0) {\n                if (gi.xr[i] < 0)\n                    ext++;\n                cbits--;\n            }\n\n            if (tableindex > 15) {\n                /* use ESC-words */\n                if (x1 > 14) {\n                    var linbits_x1 = x1 - 15;\n                    assert$17(linbits_x1 <= h.linmax);\n                    ext |= linbits_x1 << 1;\n                    xbits = linbits;\n                    x1 = 15;\n                }\n\n                if (x2 > 14) {\n                    var linbits_x2 = x2 - 15;\n                    assert$17(linbits_x2 <= h.linmax);\n                    ext <<= linbits;\n                    ext |= linbits_x2;\n                    xbits += linbits;\n                    x2 = 15;\n                }\n                xlen = 16;\n            }\n\n            if (x2 != 0) {\n                ext <<= 1;\n                if (gi.xr[i + 1] < 0)\n                    ext++;\n                cbits--;\n            }\n\n            assert$17((x1 | x2) < 16);\n\n            x1 = x1 * xlen + x2;\n            xbits -= cbits;\n            cbits += h.hlen[x1];\n\n            assert$17(cbits <= MAX_LENGTH);\n            assert$17(xbits <= MAX_LENGTH);\n\n            putbits2(gfc, h.table[x1], cbits);\n            putbits2(gfc, ext, xbits);\n            bits += cbits + xbits;\n        }\n        return bits;\n    }\n\n    /**\n     * Note the discussion of huffmancodebits() on pages 28 and 29 of the IS, as\n     * well as the definitions of the side information on pages 26 and 27.\n     */\n    function ShortHuffmancodebits(gfc, gi) {\n        var region1Start = 3 * gfc.scalefac_band.s[3];\n        if (region1Start > gi.big_values)\n            region1Start = gi.big_values;\n\n        /* short blocks do not have a region2 */\n        var bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            gi.big_values, gi);\n        return bits;\n    }\n\n    function LongHuffmancodebits(gfc, gi) {\n        var bigvalues, bits;\n        var region1Start, region2Start;\n\n        bigvalues = gi.big_values;\n        assert$17(0 <= bigvalues && bigvalues <= 576);\n\n        var i = gi.region0_count + 1;\n        assert$17(0 <= i);\n        assert$17(i < gfc.scalefac_band.l.length);\n        region1Start = gfc.scalefac_band.l[i];\n        i += gi.region1_count + 1;\n        assert$17(0 <= i);\n        assert$17(i < gfc.scalefac_band.l.length);\n        region2Start = gfc.scalefac_band.l[i];\n\n        if (region1Start > bigvalues)\n            region1Start = bigvalues;\n\n        if (region2Start > bigvalues)\n            region2Start = bigvalues;\n\n        bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            region2Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[2], region2Start, bigvalues,\n            gi);\n        return bits;\n    }\n\n    function writeMainData(gfp) {\n        var gr, ch, sfb, data_bits, tot_bits = 0;\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n\n        if (gfp.version == 1) {\n            /* MPEG 1 */\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    var slen1 = Takehiro_1.slen1_tab[gi.scalefac_compress];\n                    var slen2 = Takehiro_1.slen2_tab[gi.scalefac_compress];\n                    data_bits = 0;\n                    for (sfb = 0; sfb < gi.sfbdivide; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen1);\n                        data_bits += slen1;\n                    }\n                    for (; sfb < gi.sfbmax; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen2);\n                        data_bits += slen2;\n                    }\n                    assert$17(data_bits == gi.part2_length);\n\n                    if (gi.block_type == Encoder_1.SHORT_TYPE) {\n                        data_bits += ShortHuffmancodebits(gfc, gi);\n                    } else {\n                        data_bits += LongHuffmancodebits(gfc, gi);\n                    }\n                    data_bits += huffman_coder_count1(gfc, gi);\n                    /* does bitcount in quantize.c agree with actual bit count? */\n                    assert$17(data_bits == gi.part2_3_length + gi.part2_length);\n                    tot_bits += data_bits;\n                }\n                /* for ch */\n            }\n            /* for gr */\n        } else {\n            /* MPEG 2 */\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                var i, sfb_partition, scale_bits = 0;\n                assert$17(gi.sfb_partition_table != null);\n                data_bits = 0;\n                sfb = 0;\n                sfb_partition = 0;\n\n                if (gi.block_type == Encoder_1.SHORT_TYPE) {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition] / 3;\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 0], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 1], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 2], 0), slen);\n                            scale_bits += 3 * slen;\n                        }\n                    }\n                    data_bits += ShortHuffmancodebits(gfc, gi);\n                } else {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition];\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc, Math.max(gi.scalefac[sfb], 0), slen);\n                            scale_bits += slen;\n                        }\n                    }\n                    data_bits += LongHuffmancodebits(gfc, gi);\n                }\n                data_bits += huffman_coder_count1(gfc, gi);\n                /* does bitcount in quantize.c agree with actual bit count? */\n                assert$17(data_bits == gi.part2_3_length);\n                assert$17(scale_bits == gi.part2_length);\n                tot_bits += scale_bits + data_bits;\n            }\n            /* for ch */\n        }\n        /* for gf */\n        return tot_bits;\n    }\n\n    /* main_data */\n\n    function TotalBytes() {\n        this.total = 0;\n    }\n\n    /*\n     * compute the number of bits required to flush all mp3 frames currently in\n     * the buffer. This should be the same as the reservoir size. Only call this\n     * routine between frames - i.e. only after all headers and data have been\n     * added to the buffer by format_bitstream().\n     *\n     * Also compute total_bits_output = size of mp3 buffer (including frame\n     * headers which may not have yet been send to the mp3 buffer) + number of\n     * bits needed to flush all mp3 frames.\n     *\n     * total_bytes_output is the size of the mp3 output buffer if\n     * lame_encode_flush_nogap() was called right now.\n     */\n    function compute_flushbits(gfp, total_bytes_output) {\n        var gfc = gfp.internal_flags;\n        var flushbits, remaining_headers;\n        var bitsPerFrame;\n        var last_ptr, first_ptr;\n        first_ptr = gfc.w_ptr;\n        /* first header to add to bitstream */\n        last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags_1.MAX_HEADER_BUF - 1;\n\n        /* add this many bits to bitstream so we can flush all headers */\n        flushbits = gfc.header[last_ptr].write_timing - totbit;\n        total_bytes_output.total = flushbits;\n\n        if (flushbits >= 0) {\n            /* if flushbits >= 0, some headers have not yet been written */\n            /* reduce flushbits by the size of the headers */\n            remaining_headers = 1 + last_ptr - first_ptr;\n            if (last_ptr < first_ptr)\n                remaining_headers = 1 + last_ptr - first_ptr\n                    + LameInternalFlags_1.MAX_HEADER_BUF;\n            flushbits -= remaining_headers * 8 * gfc.sideinfo_len;\n        }\n\n        /*\n         * finally, add some bits so that the last frame is complete these bits\n         * are not necessary to decode the last frame, but some decoders will\n         * ignore last frame if these bits are missing\n         */\n        bitsPerFrame = self.getframebits(gfp);\n        flushbits += bitsPerFrame;\n        total_bytes_output.total += bitsPerFrame;\n        /* round up: */\n        if ((total_bytes_output.total % 8) != 0)\n            total_bytes_output.total = 1 + (total_bytes_output.total / 8);\n        else\n            total_bytes_output.total = (total_bytes_output.total / 8);\n        total_bytes_output.total += bufByteIdx + 1;\n\n        if (flushbits < 0) {\n            System$17.err.println(\"strange error flushing buffer ... \\n\");\n        }\n        return flushbits;\n    }\n\n    this.flush_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var flushbits;\n        var last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags_1.MAX_HEADER_BUF - 1;\n        l3_side = gfc.l3_side;\n\n        if ((flushbits = compute_flushbits(gfp, new TotalBytes())) < 0)\n            return;\n        drain_into_ancillary(gfp, flushbits);\n\n        /* check that the 100% of the last frame has been written to bitstream */\n        assert$17(gfc.header[last_ptr].write_timing + this.getframebits(gfp) == totbit);\n\n        /*\n         * we have padded out all frames with ancillary data, which is the same\n         * as filling the bitreservoir with ancillary data, so :\n         */\n        gfc.ResvSize = 0;\n        l3_side.main_data_begin = 0;\n\n        /* save the ReplayGain value */\n        if (gfc.findReplayGain) {\n            var RadioGain = ga.GetTitleGain(gfc.rgdata);\n            assert$17(NEQ(RadioGain, GainAnalysis.GAIN_NOT_ENOUGH_SAMPLES));\n            gfc.RadioGain = Math.floor(RadioGain * 10.0 + 0.5) | 0;\n            /* round to nearest */\n        }\n\n        /* find the gain and scale change required for no clipping */\n        if (gfc.findPeakSample) {\n            gfc.noclipGainChange = Math.ceil(Math\n                        .log10(gfc.PeakSample / 32767.0) * 20.0 * 10.0) | 0;\n            /* round up */\n\n            if (gfc.noclipGainChange > 0) {\n                /* clipping occurs */\n                if (EQ(gfp.scale, 1.0) || EQ(gfp.scale, 0.0))\n                    gfc.noclipScale = (Math\n                        .floor((32767.0 / gfc.PeakSample) * 100.0) / 100.0);\n                /* round down */\n                else {\n                    /*\n                     * the user specified his own scaling factor. We could\n                     * suggest the scaling factor of\n                     * (32767.0/gfp.PeakSample)*(gfp.scale) but it's usually\n                     * very inaccurate. So we'd rather not advice him on the\n                     * scaling factor.\n                     */\n                    gfc.noclipScale = -1;\n                }\n            } else\n            /* no clipping */\n                gfc.noclipScale = -1;\n        }\n    };\n\n    this.add_dummy_byte = function (gfp, val, n) {\n        var gfc = gfp.internal_flags;\n        var i;\n\n        while (n-- > 0) {\n            putbits_noheaders(gfc, val, 8);\n\n            for (i = 0; i < LameInternalFlags_1.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing += 8;\n        }\n    };\n\n    /**\n     * This is called after a frame of audio has been quantized and coded. It\n     * will write the encoded audio to the bitstream. Note that from a layer3\n     * encoder's perspective the bit stream is primarily a series of main_data()\n     * blocks, with header and side information inserted at the proper locations\n     * to maintain framing. (See Figure A.7 in the IS).\n     */\n    this.format_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        l3_side = gfc.l3_side;\n\n        var bitsPerFrame = this.getframebits(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_pre);\n\n        encodeSideInfo2(gfp, bitsPerFrame);\n        var bits = 8 * gfc.sideinfo_len;\n        bits += writeMainData(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_post);\n        bits += l3_side.resvDrain_post;\n\n        l3_side.main_data_begin += (bitsPerFrame - bits) / 8;\n\n        /*\n         * compare number of bits needed to clear all buffered mp3 frames with\n         * what we think the resvsize is:\n         */\n        if (compute_flushbits(gfp, new TotalBytes()) != gfc.ResvSize) {\n            System$17.err.println(\"Internal buffer inconsistency. flushbits <> ResvSize\");\n        }\n\n        /*\n         * compare main_data_begin for the next frame with what we think the\n         * resvsize is:\n         */\n        if ((l3_side.main_data_begin * 8) != gfc.ResvSize) {\n            System$17.err.printf(\"bit reservoir error: \\n\"\n                + \"l3_side.main_data_begin: %d \\n\"\n                + \"Resvoir size:             %d \\n\"\n                + \"resv drain (post)         %d \\n\"\n                + \"resv drain (pre)          %d \\n\"\n                + \"header and sideinfo:      %d \\n\"\n                + \"data bits:                %d \\n\"\n                + \"total bits:               %d (remainder: %d) \\n\"\n                + \"bitsperframe:             %d \\n\",\n                8 * l3_side.main_data_begin, gfc.ResvSize,\n                l3_side.resvDrain_post, l3_side.resvDrain_pre,\n                8 * gfc.sideinfo_len, bits - l3_side.resvDrain_post - 8\n                * gfc.sideinfo_len, bits, bits % 8, bitsPerFrame);\n\n            System$17.err.println(\"This is a fatal error.  It has several possible causes:\");\n            System$17.err.println(\"90%%  LAME compiled with buggy version of gcc using advanced optimizations\");\n            System$17.err.println(\" 9%%  Your system is overclocked\");\n            System$17.err.println(\" 1%%  bug in LAME encoding library\");\n\n            gfc.ResvSize = l3_side.main_data_begin * 8;\n        }\n        //;\n        assert$17(totbit % 8 == 0);\n\n        if (totbit > 1000000000) {\n            /*\n             * to avoid totbit overflow, (at 8h encoding at 128kbs) lets reset\n             * bit counter\n             */\n            var i;\n            for (i = 0; i < LameInternalFlags_1.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing -= totbit;\n            totbit = 0;\n        }\n\n        return 0;\n    };\n\n    /**\n     * <PRE>\n     * copy data out of the internal MP3 bit buffer into a user supplied\n     *       unsigned char buffer.\n     *\n     *       mp3data=0      indicates data in buffer is an id3tags and VBR tags\n     *       mp3data=1      data is real mp3 frame data.\n     * </PRE>\n     */\n    this.copy_buffer = function (gfc, buffer, bufferPos, size, mp3data) {\n        var minimum = bufByteIdx + 1;\n        if (minimum <= 0)\n            return 0;\n        if (size != 0 && minimum > size) {\n            /* buffer is too small */\n            return -1;\n        }\n        System$17.arraycopy(buf, 0, buffer, bufferPos, minimum);\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n\n        if (mp3data != 0) {\n            var crc = new_int$17(1);\n            crc[0] = gfc.nMusicCRC;\n            vbr.updateMusicCRC(crc, buffer, bufferPos, minimum);\n            gfc.nMusicCRC = crc[0];\n\n            /**\n             * sum number of bytes belonging to the mp3 stream this info will be\n             * written into the Xing/LAME header for seeking\n             */\n            if (minimum > 0) {\n                gfc.VBR_seek_table.nBytesWritten += minimum;\n            }\n\n            if (gfc.decode_on_the_fly) { /* decode the frame */\n                var pcm_buf = new_float_n$17([2, 1152]);\n                var mp3_in = minimum;\n                var samples_out = -1;\n                var i;\n\n                /* re-synthesis to pcm. Repeat until we get a samples_out=0 */\n                while (samples_out != 0) {\n\n                    samples_out = mpg.hip_decode1_unclipped(gfc.hip, buffer,\n                        bufferPos, mp3_in, pcm_buf[0], pcm_buf[1]);\n                    /*\n                     * samples_out = 0: need more data to decode samples_out =\n                     * -1: error. Lets assume 0 pcm output samples_out = number\n                     * of samples output\n                     */\n\n                    /*\n                     * set the lenght of the mp3 input buffer to zero, so that\n                     * in the next iteration of the loop we will be querying\n                     * mpglib about buffered data\n                     */\n                    mp3_in = 0;\n\n                    if (samples_out == -1) {\n                        /*\n                         * error decoding. Not fatal, but might screw up the\n                         * ReplayGain tag. What should we do? Ignore for now\n                         */\n                        samples_out = 0;\n                    }\n                    if (samples_out > 0) {\n                        /* process the PCM data */\n\n                        /*\n                         * this should not be possible, and indicates we have\n                         * overflown the pcm_buf buffer\n                         */\n                        assert$17(samples_out <= 1152);\n\n                        if (gfc.findPeakSample) {\n                            for (i = 0; i < samples_out; i++) {\n                                if (pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = pcm_buf[0][i];\n                                else if (-pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = -pcm_buf[0][i];\n                            }\n                            if (gfc.channels_out > 1)\n                                for (i = 0; i < samples_out; i++) {\n                                    if (pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = pcm_buf[1][i];\n                                    else if (-pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = -pcm_buf[1][i];\n                                }\n                        }\n\n                        if (gfc.findReplayGain)\n                            if (ga.AnalyzeSamples(gfc.rgdata, pcm_buf[0], 0,\n                                    pcm_buf[1], 0, samples_out,\n                                    gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                                return -6;\n\n                    }\n                    /* if (samples_out>0) */\n                }\n                /* while (samples_out!=0) */\n            }\n            /* if (gfc.decode_on_the_fly) */\n\n        }\n        /* if (mp3data) */\n        return minimum;\n    };\n\n    this.init_bit_stream_w = function (gfc) {\n        buf = new_byte$17(Lame.LAME_MAXMP3BUFFER);\n\n        gfc.h_ptr = gfc.w_ptr = 0;\n        gfc.header[gfc.h_ptr].write_timing = 0;\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n        totbit = 0;\n    };\n\n    // From machine.h\n\n\n}\n\nvar BitStream_1 = BitStream$1;\n\nvar System$2 = common.System;\nvar VbrMode$2 = common.VbrMode;\nvar ShortBlock$2 = common.ShortBlock;\nvar new_float$2 = common.new_float;\nvar new_int_n$2 = common.new_int_n;\nvar new_short_n$1 = common.new_short_n;\nvar assert$2 = common.assert;\n\n\n\n\n\n\n\n\n\n\n\nfunction Lame$1() {\n    var self = this;\n    var LAME_MAXALBUMART = (128 * 1024);\n\n    Lame$1.V9 = 410;\n    Lame$1.V8 = 420;\n    Lame$1.V7 = 430;\n    Lame$1.V6 = 440;\n    Lame$1.V5 = 450;\n    Lame$1.V4 = 460;\n    Lame$1.V3 = 470;\n    Lame$1.V2 = 480;\n    Lame$1.V1 = 490;\n    Lame$1.V0 = 500;\n\n    /* still there for compatibility */\n\n    Lame$1.R3MIX = 1000;\n    Lame$1.STANDARD = 1001;\n    Lame$1.EXTREME = 1002;\n    Lame$1.INSANE = 1003;\n    Lame$1.STANDARD_FAST = 1004;\n    Lame$1.EXTREME_FAST = 1005;\n    Lame$1.MEDIUM = 1006;\n    Lame$1.MEDIUM_FAST = 1007;\n\n    /**\n     * maximum size of mp3buffer needed if you encode at most 1152 samples for\n     * each call to lame_encode_buffer. see lame_encode_buffer() below\n     * (LAME_MAXMP3BUFFER is now obsolete)\n     */\n    var LAME_MAXMP3BUFFER = (16384 + LAME_MAXALBUMART);\n    Lame$1.LAME_MAXMP3BUFFER = LAME_MAXMP3BUFFER;\n\n    var ga;\n    var bs;\n    var p;\n    var qupvt;\n    var qu;\n    var psy = new PsyModel_1();\n    var vbr;\n    var ver;\n    var id3;\n    var mpglib;\n    this.enc = new Encoder_1();\n\n    this.setModules = function (_ga, _bs, _p, _qupvt, _qu, _vbr, _ver, _id3, _mpglib) {\n        ga = _ga;\n        bs = _bs;\n        p = _p;\n        qupvt = _qupvt;\n        qu = _qu;\n        vbr = _vbr;\n        ver = _ver;\n        id3 = _id3;\n        mpglib = _mpglib;\n        this.enc.setModules(bs, psy, qupvt, vbr);\n    };\n\n    /**\n     * PSY Model related stuff\n     */\n    function PSY() {\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust = 0.;\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust_short = 0.;\n        /* at transition from one scalefactor band to next */\n        /**\n         * Band weight long scalefactor bands.\n         */\n        this.bo_l_weight = new_float$2(Encoder_1.SBMAX_l);\n        /**\n         * Band weight short scalefactor bands.\n         */\n        this.bo_s_weight = new_float$2(Encoder_1.SBMAX_s);\n    }\n\n    function LowPassHighPass() {\n        this.lowerlimit = 0.;\n    }\n\n    function BandPass(bitrate, lPass) {\n        this.lowpass = lPass;\n    }\n\n    var LAME_ID = 0xFFF88E3B;\n\n    function lame_init_old(gfp) {\n        var gfc;\n\n        gfp.class_id = LAME_ID;\n\n        gfc = gfp.internal_flags = new LameInternalFlags_1();\n\n        /* Global flags. set defaults here for non-zero values */\n        /* see lame.h for description */\n        /*\n         * set integer values to -1 to mean that LAME will compute the best\n         * value, UNLESS the calling program as set it (and the value is no\n         * longer -1)\n         */\n\n        gfp.mode = MPEGMode.NOT_SET;\n        gfp.original = 1;\n        gfp.in_samplerate = 44100;\n        gfp.num_channels = 2;\n        gfp.num_samples = -1;\n\n        gfp.bWriteVbrTag = true;\n        gfp.quality = -1;\n        gfp.short_blocks = null;\n        gfc.subblock_gain = -1;\n\n        gfp.lowpassfreq = 0;\n        gfp.highpassfreq = 0;\n        gfp.lowpasswidth = -1;\n        gfp.highpasswidth = -1;\n\n        gfp.VBR = VbrMode$2.vbr_off;\n        gfp.VBR_q = 4;\n        gfp.ATHcurve = -1;\n        gfp.VBR_mean_bitrate_kbps = 128;\n        gfp.VBR_min_bitrate_kbps = 0;\n        gfp.VBR_max_bitrate_kbps = 0;\n        gfp.VBR_hard_min = 0;\n        gfc.VBR_min_bitrate = 1;\n        /* not 0 ????? */\n        gfc.VBR_max_bitrate = 13;\n        /* not 14 ????? */\n\n        gfp.quant_comp = -1;\n        gfp.quant_comp_short = -1;\n\n        gfp.msfix = -1;\n\n        gfc.resample_ratio = 1;\n\n        gfc.OldValue[0] = 180;\n        gfc.OldValue[1] = 180;\n        gfc.CurrentStep[0] = 4;\n        gfc.CurrentStep[1] = 4;\n        gfc.masking_lower = 1;\n        gfc.nsPsy.attackthre = -1;\n        gfc.nsPsy.attackthre_s = -1;\n\n        gfp.scale = -1;\n\n        gfp.athaa_type = -1;\n        gfp.ATHtype = -1;\n        /* default = -1 = set in lame_init_params */\n        gfp.athaa_loudapprox = -1;\n        /* 1 = flat loudness approx. (total energy) */\n        /* 2 = equal loudness curve */\n        gfp.athaa_sensitivity = 0.0;\n        /* no offset */\n        gfp.useTemporal = null;\n        gfp.interChRatio = -1;\n\n        /*\n         * The reason for int mf_samples_to_encode = ENCDELAY + POSTDELAY;\n         * ENCDELAY = internal encoder delay. And then we have to add\n         * POSTDELAY=288 because of the 50% MDCT overlap. A 576 MDCT granule\n         * decodes to 1152 samples. To synthesize the 576 samples centered under\n         * this granule we need the previous granule for the first 288 samples\n         * (no problem), and the next granule for the next 288 samples (not\n         * possible if this is last granule). So we need to pad with 288 samples\n         * to make sure we can encode the 576 samples we are interested in.\n         */\n        gfc.mf_samples_to_encode = Encoder_1.ENCDELAY + Encoder_1.POSTDELAY;\n        gfp.encoder_padding = 0;\n        gfc.mf_size = Encoder_1.ENCDELAY - Encoder_1.MDCTDELAY;\n        /*\n         * we pad input with this many 0's\n         */\n\n        gfp.findReplayGain = false;\n        gfp.decode_on_the_fly = false;\n\n        gfc.decode_on_the_fly = false;\n        gfc.findReplayGain = false;\n        gfc.findPeakSample = false;\n\n        gfc.RadioGain = 0;\n        gfc.AudiophileGain = 0;\n        gfc.noclipGainChange = 0;\n        gfc.noclipScale = -1.0;\n\n        gfp.preset = 0;\n\n        gfp.write_id3tag_automatic = true;\n        return 0;\n    }\n\n    this.lame_init = function () {\n        var gfp = new LameGlobalFlags_1();\n\n        var ret = lame_init_old(gfp);\n        if (ret != 0) {\n            return null;\n        }\n\n        gfp.lame_allocated_gfp = 1;\n        return gfp;\n    };\n\n    function filter_coef(x) {\n        if (x > 1.0)\n            return 0.0;\n        if (x <= 0.0)\n            return 1.0;\n\n        return Math.cos(Math.PI / 2 * x);\n    }\n\n    this.nearestBitrateFullIndex = function (bitrate) {\n        /* borrowed from DM abr presets */\n\n        var full_bitrate_table = [8, 16, 24, 32, 40, 48, 56, 64, 80,\n            96, 112, 128, 160, 192, 224, 256, 320];\n\n        var lower_range = 0, lower_range_kbps = 0, upper_range = 0, upper_range_kbps = 0;\n\n        /* We assume specified bitrate will be 320kbps */\n        upper_range_kbps = full_bitrate_table[16];\n        upper_range = 16;\n        lower_range_kbps = full_bitrate_table[16];\n        lower_range = 16;\n\n        /*\n         * Determine which significant bitrates the value specified falls\n         * between, if loop ends without breaking then we were correct above\n         * that the value was 320\n         */\n        for (var b = 0; b < 16; b++) {\n            if ((Math.max(bitrate, full_bitrate_table[b + 1])) != bitrate) {\n                upper_range_kbps = full_bitrate_table[b + 1];\n                upper_range = b + 1;\n                lower_range_kbps = full_bitrate_table[b];\n                lower_range = (b);\n                break;\n                /* We found upper range */\n            }\n        }\n\n        /* Determine which range the value specified is closer to */\n        if ((upper_range_kbps - bitrate) > (bitrate - lower_range_kbps)) {\n            return lower_range;\n        }\n        return upper_range;\n    };\n\n    function optimum_samplefreq(lowpassfreq, input_samplefreq) {\n        /*\n         * Rules:\n         *\n         * - if possible, sfb21 should NOT be used\n         */\n        var suggested_samplefreq = 44100;\n\n        if (input_samplefreq >= 48000)\n            suggested_samplefreq = 48000;\n        else if (input_samplefreq >= 44100)\n            suggested_samplefreq = 44100;\n        else if (input_samplefreq >= 32000)\n            suggested_samplefreq = 32000;\n        else if (input_samplefreq >= 24000)\n            suggested_samplefreq = 24000;\n        else if (input_samplefreq >= 22050)\n            suggested_samplefreq = 22050;\n        else if (input_samplefreq >= 16000)\n            suggested_samplefreq = 16000;\n        else if (input_samplefreq >= 12000)\n            suggested_samplefreq = 12000;\n        else if (input_samplefreq >= 11025)\n            suggested_samplefreq = 11025;\n        else if (input_samplefreq >= 8000)\n            suggested_samplefreq = 8000;\n\n        if (lowpassfreq == -1)\n            return suggested_samplefreq;\n\n        if (lowpassfreq <= 15960)\n            suggested_samplefreq = 44100;\n        if (lowpassfreq <= 15250)\n            suggested_samplefreq = 32000;\n        if (lowpassfreq <= 11220)\n            suggested_samplefreq = 24000;\n        if (lowpassfreq <= 9970)\n            suggested_samplefreq = 22050;\n        if (lowpassfreq <= 7230)\n            suggested_samplefreq = 16000;\n        if (lowpassfreq <= 5420)\n            suggested_samplefreq = 12000;\n        if (lowpassfreq <= 4510)\n            suggested_samplefreq = 11025;\n        if (lowpassfreq <= 3970)\n            suggested_samplefreq = 8000;\n\n        if (input_samplefreq < suggested_samplefreq) {\n            /*\n             * choose a valid MPEG sample frequency above the input sample\n             * frequency to avoid SFB21/12 bitrate bloat rh 061115\n             */\n            if (input_samplefreq > 44100) {\n                return 48000;\n            }\n            if (input_samplefreq > 32000) {\n                return 44100;\n            }\n            if (input_samplefreq > 24000) {\n                return 32000;\n            }\n            if (input_samplefreq > 22050) {\n                return 24000;\n            }\n            if (input_samplefreq > 16000) {\n                return 22050;\n            }\n            if (input_samplefreq > 12000) {\n                return 16000;\n            }\n            if (input_samplefreq > 11025) {\n                return 12000;\n            }\n            if (input_samplefreq > 8000) {\n                return 11025;\n            }\n            return 8000;\n        }\n        return suggested_samplefreq;\n    }\n\n    /**\n     * convert samp freq in Hz to index\n     */\n    function SmpFrqIndex(sample_freq, gpf) {\n        switch (sample_freq) {\n            case 44100:\n                gpf.version = 1;\n                return 0;\n            case 48000:\n                gpf.version = 1;\n                return 1;\n            case 32000:\n                gpf.version = 1;\n                return 2;\n            case 22050:\n                gpf.version = 0;\n                return 0;\n            case 24000:\n                gpf.version = 0;\n                return 1;\n            case 16000:\n                gpf.version = 0;\n                return 2;\n            case 11025:\n                gpf.version = 0;\n                return 0;\n            case 12000:\n                gpf.version = 0;\n                return 1;\n            case 8000:\n                gpf.version = 0;\n                return 2;\n            default:\n                gpf.version = 0;\n                return -1;\n        }\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 8 to 320\n     */\n    function FindNearestBitrate(bRate, version, samplerate) {\n        /* MPEG-1 or MPEG-2 LSF */\n        if (samplerate < 16000)\n            version = 2;\n\n        var bitrate = Tables_1.bitrate_table[version][1];\n\n        for (var i = 2; i <= 14; i++) {\n            if (Tables_1.bitrate_table[version][i] > 0) {\n                if (Math.abs(Tables_1.bitrate_table[version][i] - bRate) < Math\n                        .abs(bitrate - bRate))\n                    bitrate = Tables_1.bitrate_table[version][i];\n            }\n        }\n        return bitrate;\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 32 to 448 kbps\n     * @param version\n     *            MPEG-1 or MPEG-2/2.5 LSF\n     */\n    function BitrateIndex(bRate, version, samplerate) {\n        /* convert bitrate in kbps to index */\n        if (samplerate < 16000)\n            version = 2;\n        for (var i = 0; i <= 14; i++) {\n            if (Tables_1.bitrate_table[version][i] > 0) {\n                if (Tables_1.bitrate_table[version][i] == bRate) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    function optimum_bandwidth(lh, bitrate) {\n        /**\n         * <PRE>\n         *  Input:\n         *      bitrate     total bitrate in kbps\n         *\n         *   Output:\n         *      lowerlimit: best lowpass frequency limit for input filter in Hz\n         *      upperlimit: best highpass frequency limit for input filter in Hz\n         * </PRE>\n         */\n        var freq_map = [new BandPass(8, 2000),\n            new BandPass(16, 3700), new BandPass(24, 3900),\n            new BandPass(32, 5500), new BandPass(40, 7000),\n            new BandPass(48, 7500), new BandPass(56, 10000),\n            new BandPass(64, 11000), new BandPass(80, 13500),\n            new BandPass(96, 15100), new BandPass(112, 15600),\n            new BandPass(128, 17000), new BandPass(160, 17500),\n            new BandPass(192, 18600), new BandPass(224, 19400),\n            new BandPass(256, 19700), new BandPass(320, 20500)];\n\n        var table_index = self.nearestBitrateFullIndex(bitrate);\n        lh.lowerlimit = freq_map[table_index].lowpass;\n    }\n\n    function lame_init_params_ppflt(gfp) {\n        var gfc = gfp.internal_flags;\n        /***************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /***************************************************************/\n\n        var lowpass_band = 32;\n        var highpass_band = -1;\n\n        if (gfc.lowpass1 > 0) {\n            var minband = 999;\n            for (var band = 0; band <= 31; band++) {\n                var freq = (band / 31.0);\n                /* this band and above will be zeroed: */\n                if (freq >= gfc.lowpass2) {\n                    lowpass_band = Math.min(lowpass_band, band);\n                }\n                if (gfc.lowpass1 < freq && freq < gfc.lowpass2) {\n                    minband = Math.min(minband, band);\n                }\n            }\n\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            if (minband == 999) {\n                gfc.lowpass1 = (lowpass_band - .75) / 31.0;\n            } else {\n                gfc.lowpass1 = (minband - .75) / 31.0;\n            }\n            gfc.lowpass2 = lowpass_band / 31.0;\n        }\n\n        /*\n         * make sure highpass filter is within 90% of what the effective\n         * highpass frequency will be\n         */\n        if (gfc.highpass2 > 0) {\n            if (gfc.highpass2 < .9 * (.75 / 31.0)) {\n                gfc.highpass1 = 0;\n                gfc.highpass2 = 0;\n                System$2.err.println(\"Warning: highpass filter disabled.  \"\n                    + \"highpass frequency too small\\n\");\n            }\n        }\n\n        if (gfc.highpass2 > 0) {\n            var maxband = -1;\n            for (var band = 0; band <= 31; band++) {\n                var freq = band / 31.0;\n                /* this band and below will be zereod */\n                if (freq <= gfc.highpass1) {\n                    highpass_band = Math.max(highpass_band, band);\n                }\n                if (gfc.highpass1 < freq && freq < gfc.highpass2) {\n                    maxband = Math.max(maxband, band);\n                }\n            }\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            gfc.highpass1 = highpass_band / 31.0;\n            if (maxband == -1) {\n                gfc.highpass2 = (highpass_band + .75) / 31.0;\n            } else {\n                gfc.highpass2 = (maxband + .75) / 31.0;\n            }\n        }\n\n        for (var band = 0; band < 32; band++) {\n            var fc1, fc2;\n            var freq = band / 31.0;\n            if (gfc.highpass2 > gfc.highpass1) {\n                fc1 = filter_coef((gfc.highpass2 - freq)\n                    / (gfc.highpass2 - gfc.highpass1 + 1e-20));\n            } else {\n                fc1 = 1.0;\n            }\n            if (gfc.lowpass2 > gfc.lowpass1) {\n                fc2 = filter_coef((freq - gfc.lowpass1)\n                    / (gfc.lowpass2 - gfc.lowpass1 + 1e-20));\n            } else {\n                fc2 = 1.0;\n            }\n            gfc.amp_filter[band] = (fc1 * fc2);\n        }\n    }\n\n    function lame_init_qval(gfp) {\n        var gfc = gfp.internal_flags;\n\n        switch (gfp.quality) {\n            default:\n            case 9: /* no psymodel, no noise shaping */\n                gfc.psymodel = 0;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 8:\n                gfp.quality = 7;\n            //$FALL-THROUGH$\n            case 7:\n                /*\n                 * use psymodel (for short block and m/s switching), but no noise\n                 * shapping\n                 */\n                gfc.psymodel = 1;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 6:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 5:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 4:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 3:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 2:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /* inner loop */\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 1:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 0:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /*\n                 * type 2 disabled because of it slowness, in favor of full outer\n                 * loop search\n                 */\n                gfc.full_outer_loop = 0;\n                /*\n                 * full outer loop search disabled because of audible distortions it\n                 * may generate rh 060629\n                 */\n                break;\n        }\n\n    }\n\n    function lame_init_bitstream(gfp) {\n        var gfc = gfp.internal_flags;\n        gfp.frameNum = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            id3.id3tag_write_v2(gfp);\n        }\n        /* initialize histogram data optionally used by frontend */\n\n        gfc.bitrate_stereoMode_Hist = new_int_n$2([16, 4 + 1]);\n        gfc.bitrate_blockType_Hist = new_int_n$2([16, 4 + 1 + 1]);\n\n        gfc.PeakSample = 0.0;\n\n        /* Write initial VBR Header to bitstream and init VBR data */\n        if (gfp.bWriteVbrTag)\n            vbr.InitVbrTag(gfp);\n    }\n\n    /********************************************************************\n     * initialize internal params based on data in gf (globalflags struct filled\n     * in by calling program)\n     *\n     * OUTLINE:\n     *\n     * We first have some complex code to determine bitrate, output samplerate\n     * and mode. It is complicated by the fact that we allow the user to set\n     * some or all of these parameters, and need to determine best possible\n     * values for the rest of them:\n     *\n     * 1. set some CPU related flags 2. check if we are mono.mono, stereo.mono\n     * or stereo.stereo 3. compute bitrate and output samplerate: user may have\n     * set compression ratio user may have set a bitrate user may have set a\n     * output samplerate 4. set some options which depend on output samplerate\n     * 5. compute the actual compression ratio 6. set mode based on compression\n     * ratio\n     *\n     * The remaining code is much simpler - it just sets options based on the\n     * mode & compression ratio:\n     *\n     * set allow_diff_short based on mode select lowpass filter based on\n     * compression ratio & mode set the bitrate index, and min/max bitrates for\n     * VBR modes disable VBR tag if it is not appropriate initialize the\n     * bitstream initialize scalefac_band data set sideinfo_len (based on\n     * channels, CRC, out_samplerate) write an id3v2 tag into the bitstream\n     * write VBR tag into the bitstream set mpeg1/2 flag estimate the number of\n     * frames (based on a lot of data)\n     *\n     * now we set more flags: nspsytune: see code VBR modes see code CBR/ABR see\n     * code\n     *\n     * Finally, we set the algorithm flags based on the gfp.quality value\n     * lame_init_qval(gfp);\n     *\n     ********************************************************************/\n    this.lame_init_params = function (gfp) {\n        var gfc = gfp.internal_flags;\n\n        gfc.Class_ID = 0;\n        if (gfc.ATH == null)\n            gfc.ATH = new ATH_1();\n        if (gfc.PSY == null)\n            gfc.PSY = new PSY();\n        if (gfc.rgdata == null)\n            gfc.rgdata = new ReplayGain_1();\n\n        gfc.channels_in = gfp.num_channels;\n        if (gfc.channels_in == 1)\n            gfp.mode = MPEGMode.MONO;\n        gfc.channels_out = (gfp.mode == MPEGMode.MONO) ? 1 : 2;\n        gfc.mode_ext = Encoder_1.MPG_MD_MS_LR;\n        if (gfp.mode == MPEGMode.MONO)\n            gfp.force_ms = false;\n        /*\n         * don't allow forced mid/side stereo for mono output\n         */\n\n        if (gfp.VBR == VbrMode$2.vbr_off && gfp.VBR_mean_bitrate_kbps != 128\n            && gfp.brate == 0)\n            gfp.brate = gfp.VBR_mean_bitrate_kbps;\n\n        if (gfp.VBR == VbrMode$2.vbr_off || gfp.VBR == VbrMode$2.vbr_mtrh\n            || gfp.VBR == VbrMode$2.vbr_mt) {\n            /* these modes can handle free format condition */\n        } else {\n            gfp.free_format = false;\n            /* mode can't be mixed with free format */\n        }\n\n        if (gfp.VBR == VbrMode$2.vbr_off && gfp.brate == 0) {\n            /* no bitrate or compression ratio specified, use 11.025 */\n            if (BitStream_1.EQ(gfp.compression_ratio, 0))\n                gfp.compression_ratio = 11.025;\n            /*\n             * rate to compress a CD down to exactly 128000 bps\n             */\n        }\n\n        /* find bitrate if user specify a compression ratio */\n        if (gfp.VBR == VbrMode$2.vbr_off && gfp.compression_ratio > 0) {\n\n            if (gfp.out_samplerate == 0)\n                gfp.out_samplerate = map2MP3Frequency((int)(0.97 * gfp.in_samplerate));\n            /*\n             * round up with a margin of 3 %\n             */\n\n            /*\n             * choose a bitrate for the output samplerate which achieves\n             * specified compression ratio\n             */\n            gfp.brate = 0 | (gfp.out_samplerate * 16 * gfc.channels_out / (1.e3 * gfp.compression_ratio));\n\n            /* we need the version for the bitrate table look up */\n            gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n\n            if (!gfp.free_format) /*\n             * for non Free Format find the nearest allowed\n             * bitrate\n             */\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n        }\n\n        if (gfp.out_samplerate != 0) {\n            if (gfp.out_samplerate < 16000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    64);\n            } else if (gfp.out_samplerate < 32000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    160);\n            } else {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    32);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    320);\n            }\n        }\n\n        /****************************************************************/\n        /* if a filter has not been enabled, see if we should add one: */\n        /****************************************************************/\n        if (gfp.lowpassfreq == 0) {\n            var lowpass = 16000.;\n\n            switch (gfp.VBR) {\n                case VbrMode$2.vbr_off:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.brate);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode$2.vbr_abr:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.VBR_mean_bitrate_kbps);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode$2.vbr_rh:\n                {\n                    var x = [19500, 19000, 18600, 18000, 17500, 16000,\n                        15600, 14900, 12500, 10000, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                    break;\n                }\n                default:\n                {\n                    var x = [19500, 19000, 18500, 18000, 17500, 16500,\n                        15500, 14500, 12500, 9500, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                }\n            }\n            if (gfp.mode == MPEGMode.MONO\n                && (gfp.VBR == VbrMode$2.vbr_off || gfp.VBR == VbrMode$2.vbr_abr))\n                lowpass *= 1.5;\n\n            gfp.lowpassfreq = lowpass | 0;\n        }\n\n        if (gfp.out_samplerate == 0) {\n            if (2 * gfp.lowpassfreq > gfp.in_samplerate) {\n                gfp.lowpassfreq = gfp.in_samplerate / 2;\n            }\n            gfp.out_samplerate = optimum_samplefreq(gfp.lowpassfreq | 0,\n                gfp.in_samplerate);\n        }\n\n        gfp.lowpassfreq = Math.min(20500, gfp.lowpassfreq);\n        gfp.lowpassfreq = Math.min(gfp.out_samplerate / 2, gfp.lowpassfreq);\n\n        if (gfp.VBR == VbrMode$2.vbr_off) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.brate);\n        }\n        if (gfp.VBR == VbrMode$2.vbr_abr) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /*\n         * do not compute ReplayGain values and do not find the peak sample if\n         * we can't store them\n         */\n        if (!gfp.bWriteVbrTag) {\n            gfp.findReplayGain = false;\n            gfp.decode_on_the_fly = false;\n            gfc.findPeakSample = false;\n        }\n        gfc.findReplayGain = gfp.findReplayGain;\n        gfc.decode_on_the_fly = gfp.decode_on_the_fly;\n\n        if (gfc.decode_on_the_fly)\n            gfc.findPeakSample = true;\n\n        if (gfc.findReplayGain) {\n            if (ga.InitGainAnalysis(gfc.rgdata, gfp.out_samplerate) == GainAnalysis.INIT_GAIN_ANALYSIS_ERROR) {\n                gfp.internal_flags = null;\n                return -6;\n            }\n        }\n\n        if (gfc.decode_on_the_fly && !gfp.decode_only) {\n            if (gfc.hip != null) {\n                mpglib.hip_decode_exit(gfc.hip);\n            }\n            gfc.hip = mpglib.hip_decode_init();\n        }\n\n        gfc.mode_gr = gfp.out_samplerate <= 24000 ? 1 : 2;\n        /*\n         * Number of granules per frame\n         */\n        gfp.framesize = 576 * gfc.mode_gr;\n        gfp.encoder_delay = Encoder_1.ENCDELAY;\n\n        gfc.resample_ratio = gfp.in_samplerate / gfp.out_samplerate;\n\n        /**\n         * <PRE>\n         *  sample freq       bitrate     compression ratio\n         *     [kHz]      [kbps/channel]   for 16 bit input\n         *     44.1            56               12.6\n         *     44.1            64               11.025\n         *     44.1            80                8.82\n         *     22.05           24               14.7\n         *     22.05           32               11.025\n         *     22.05           40                8.82\n         *     16              16               16.0\n         *     16              24               10.667\n         * </PRE>\n         */\n        /**\n         * <PRE>\n         *  For VBR, take a guess at the compression_ratio.\n         *  For example:\n         *\n         *    VBR_q    compression     like\n         *     -        4.4         320 kbps/44 kHz\n         *   0...1      5.5         256 kbps/44 kHz\n         *     2        7.3         192 kbps/44 kHz\n         *     4        8.8         160 kbps/44 kHz\n         *     6       11           128 kbps/44 kHz\n         *     9       14.7          96 kbps\n         *\n         *  for lower bitrates, downsample with --resample\n         * </PRE>\n         */\n        switch (gfp.VBR) {\n            case VbrMode$2.vbr_mt:\n            case VbrMode$2.vbr_rh:\n            case VbrMode$2.vbr_mtrh:\n            {\n                /* numbers are a bit strange, but they determine the lowpass value */\n                var cmp = [5.7, 6.5, 7.3, 8.2, 10, 11.9, 13, 14,\n                    15, 16.5];\n                gfp.compression_ratio = cmp[gfp.VBR_q];\n            }\n                break;\n            case VbrMode$2.vbr_abr:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n                break;\n            default:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.brate);\n                break;\n        }\n\n        /*\n         * mode = -1 (not set by user) or mode = MONO (because of only 1 input\n         * channel). If mode has not been set, then select J-STEREO\n         */\n        if (gfp.mode == MPEGMode.NOT_SET) {\n            gfp.mode = MPEGMode.JOINT_STEREO;\n        }\n\n        /* apply user driven high pass filter */\n        if (gfp.highpassfreq > 0) {\n            gfc.highpass1 = 2. * gfp.highpassfreq;\n\n            if (gfp.highpasswidth >= 0)\n                gfc.highpass2 = 2. * (gfp.highpassfreq + gfp.highpasswidth);\n            else\n            /* 0% above on default */\n                gfc.highpass2 = (1 + 0.00) * 2. * gfp.highpassfreq;\n\n            gfc.highpass1 /= gfp.out_samplerate;\n            gfc.highpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.highpass1 = 0;\n            gfc.highpass2 = 0;\n        }\n        /* apply user driven low pass filter */\n        if (gfp.lowpassfreq > 0) {\n            gfc.lowpass2 = 2. * gfp.lowpassfreq;\n            if (gfp.lowpasswidth >= 0) {\n                gfc.lowpass1 = 2. * (gfp.lowpassfreq - gfp.lowpasswidth);\n                if (gfc.lowpass1 < 0) /* has to be >= 0 */\n                    gfc.lowpass1 = 0;\n            } else { /* 0% below on default */\n                gfc.lowpass1 = (1 - 0.00) * 2. * gfp.lowpassfreq;\n            }\n            gfc.lowpass1 /= gfp.out_samplerate;\n            gfc.lowpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.lowpass1 = 0;\n            gfc.lowpass2 = 0;\n        }\n\n        /**********************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /**********************************************************************/\n        lame_init_params_ppflt(gfp);\n        /*******************************************************\n         * samplerate and bitrate index\n         *******************************************************/\n        gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n        if (gfc.samplerate_index < 0) {\n            gfp.internal_flags = null;\n            return -1;\n        }\n\n        if (gfp.VBR == VbrMode$2.vbr_off) {\n            if (gfp.free_format) {\n                gfc.bitrate_index = 0;\n            } else {\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                gfc.bitrate_index = BitrateIndex(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                if (gfc.bitrate_index <= 0) {\n                    gfp.internal_flags = null;\n                    return -1;\n                }\n            }\n        } else {\n            gfc.bitrate_index = 1;\n        }\n\n        /* for CBR, we will write an \"info\" tag. */\n\n        if (gfp.analysis)\n            gfp.bWriteVbrTag = false;\n\n        /* some file options not allowed if output is: not specified or stdout */\n        if (gfc.pinfo != null)\n            gfp.bWriteVbrTag = false;\n        /* disable Xing VBR tag */\n\n        bs.init_bit_stream_w(gfc);\n\n        var j = gfc.samplerate_index + (3 * gfp.version) + 6\n            * (gfp.out_samplerate < 16000 ? 1 : 0);\n        for (var i = 0; i < Encoder_1.SBMAX_l + 1; i++)\n            gfc.scalefac_band.l[i] = qupvt.sfBandIndex[j].l[i];\n\n        for (var i = 0; i < Encoder_1.PSFB21 + 1; i++) {\n            var size = (gfc.scalefac_band.l[22] - gfc.scalefac_band.l[21])\n                / Encoder_1.PSFB21;\n            var start = gfc.scalefac_band.l[21] + i * size;\n            gfc.scalefac_band.psfb21[i] = start;\n        }\n        gfc.scalefac_band.psfb21[Encoder_1.PSFB21] = 576;\n\n        for (var i = 0; i < Encoder_1.SBMAX_s + 1; i++)\n            gfc.scalefac_band.s[i] = qupvt.sfBandIndex[j].s[i];\n\n        for (var i = 0; i < Encoder_1.PSFB12 + 1; i++) {\n            var size = (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                / Encoder_1.PSFB12;\n            var start = gfc.scalefac_band.s[12] + i * size;\n            gfc.scalefac_band.psfb12[i] = start;\n        }\n        gfc.scalefac_band.psfb12[Encoder_1.PSFB12] = 192;\n        /* determine the mean bitrate for main data */\n        if (gfp.version == 1) /* MPEG 1 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 17 : 4 + 32;\n        else\n        /* MPEG 2 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 9 : 4 + 17;\n\n        if (gfp.error_protection)\n            gfc.sideinfo_len += 2;\n\n        lame_init_bitstream(gfp);\n\n        gfc.Class_ID = LAME_ID;\n\n        {\n            var k;\n\n            for (k = 0; k < 19; k++)\n                gfc.nsPsy.pefirbuf[k] = 700 * gfc.mode_gr * gfc.channels_out;\n\n            if (gfp.ATHtype == -1)\n                gfp.ATHtype = 4;\n        }\n        assert$2(gfp.VBR_q <= 9);\n        assert$2(gfp.VBR_q >= 0);\n\n        switch (gfp.VBR) {\n\n            case VbrMode$2.vbr_mt:\n                gfp.VBR = VbrMode$2.vbr_mtrh;\n            //$FALL-THROUGH$\n            case VbrMode$2.vbr_mtrh:\n            {\n                if (gfp.useTemporal == null) {\n                    gfp.useTemporal = false;\n                    /* off by default for this VBR mode */\n                }\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n                /**\n                 * <PRE>\n                 *   The newer VBR code supports only a limited\n                 *     subset of quality levels:\n                 *     9-5=5 are the same, uses x^3/4 quantization\n                 *   4-0=0 are the same  5 plus best huffman divide code\n                 * </PRE>\n                 */\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n                if (gfp.quality < 5)\n                    gfp.quality = 0;\n                if (gfp.quality > 5)\n                    gfp.quality = 5;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                gfc.iteration_loop = new VBRNewIterationLoop(qu);\n                break;\n\n            }\n            case VbrMode$2.vbr_rh:\n            {\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                /*\n                 * VBR needs at least the output of GPSYCHO, so we have to garantee\n                 * that by setting a minimum quality level, actually level 6 does\n                 * it. down to level 6\n                 */\n                if (gfp.quality > 6)\n                    gfp.quality = 6;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                gfc.iteration_loop = new VBROldIterationLoop(qu);\n                break;\n            }\n\n            default: /* cbr/abr */\n            {\n                var vbrmode;\n\n                /*\n                 * no sfb21 extra with CBR code\n                 */\n                gfc.sfb21_extra = false;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                vbrmode = gfp.VBR;\n                if (vbrmode == VbrMode$2.vbr_off)\n                    gfp.VBR_mean_bitrate_kbps = gfp.brate;\n                /* second, set parameters depending on bitrate */\n                p.apply_preset(gfp, gfp.VBR_mean_bitrate_kbps, 0);\n                gfp.VBR = vbrmode;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                if (vbrmode == VbrMode$2.vbr_off) {\n                    gfc.iteration_loop = new CBRNewIterationLoop_1(qu);\n                } else {\n                    gfc.iteration_loop = new ABRIterationLoop(qu);\n                }\n                break;\n            }\n        }\n        assert$2(gfp.scale >= 0);\n        /* initialize default values common for all modes */\n\n        if (gfp.VBR != VbrMode$2.vbr_off) { /* choose a min/max bitrate for VBR */\n            /* if the user didn't specify VBR_max_bitrate: */\n            gfc.VBR_min_bitrate = 1;\n            /*\n             * default: allow 8 kbps (MPEG-2) or 32 kbps (MPEG-1)\n             */\n            gfc.VBR_max_bitrate = 14;\n            /*\n             * default: allow 160 kbps (MPEG-2) or 320 kbps (MPEG-1)\n             */\n            if (gfp.out_samplerate < 16000)\n                gfc.VBR_max_bitrate = 8;\n            /* default: allow 64 kbps (MPEG-2.5) */\n            if (gfp.VBR_min_bitrate_kbps != 0) {\n                gfp.VBR_min_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_min_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_min_bitrate = BitrateIndex(gfp.VBR_min_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_min_bitrate < 0)\n                    return -1;\n            }\n            if (gfp.VBR_max_bitrate_kbps != 0) {\n                gfp.VBR_max_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_max_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_max_bitrate = BitrateIndex(gfp.VBR_max_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_max_bitrate < 0)\n                    return -1;\n            }\n            gfp.VBR_min_bitrate_kbps = Tables_1.bitrate_table[gfp.version][gfc.VBR_min_bitrate];\n            gfp.VBR_max_bitrate_kbps = Tables_1.bitrate_table[gfp.version][gfc.VBR_max_bitrate];\n            gfp.VBR_mean_bitrate_kbps = Math.min(\n                Tables_1.bitrate_table[gfp.version][gfc.VBR_max_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n            gfp.VBR_mean_bitrate_kbps = Math.max(\n                Tables_1.bitrate_table[gfp.version][gfc.VBR_min_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /* just another daily changing developer switch */\n        if (gfp.tune) {\n            gfc.PSY.mask_adjust += gfp.tune_value_a;\n            gfc.PSY.mask_adjust_short += gfp.tune_value_a;\n        }\n\n        /* initialize internal qval settings */\n        lame_init_qval(gfp);\n        assert$2(gfp.scale >= 0);\n        /*\n         * automatic ATH adjustment on\n         */\n        if (gfp.athaa_type < 0)\n            gfc.ATH.useAdjust = 3;\n        else\n            gfc.ATH.useAdjust = gfp.athaa_type;\n\n        /* initialize internal adaptive ATH settings -jd */\n        gfc.ATH.aaSensitivityP = Math.pow(10.0, gfp.athaa_sensitivity\n            / -10.0);\n\n        if (gfp.short_blocks == null) {\n            gfp.short_blocks = ShortBlock$2.short_block_allowed;\n        }\n\n        /*\n         * Note Jan/2003: Many hardware decoders cannot handle short blocks in\n         * regular stereo mode unless they are coupled (same type in both\n         * channels) it is a rare event (1 frame per min. or so) that LAME would\n         * use uncoupled short blocks, so lets turn them off until we decide how\n         * to handle this. No other encoders allow uncoupled short blocks, even\n         * though it is in the standard.\n         */\n        /*\n         * rh 20040217: coupling makes no sense for mono and dual-mono streams\n         */\n        if (gfp.short_blocks == ShortBlock$2.short_block_allowed\n            && (gfp.mode == MPEGMode.JOINT_STEREO || gfp.mode == MPEGMode.STEREO)) {\n            gfp.short_blocks = ShortBlock$2.short_block_coupled;\n        }\n\n        if (gfp.quant_comp < 0)\n            gfp.quant_comp = 1;\n        if (gfp.quant_comp_short < 0)\n            gfp.quant_comp_short = 0;\n\n        if (gfp.msfix < 0)\n            gfp.msfix = 0;\n\n        /* select psychoacoustic model */\n        gfp.exp_nspsytune = gfp.exp_nspsytune | 1;\n\n        if (gfp.internal_flags.nsPsy.attackthre < 0)\n            gfp.internal_flags.nsPsy.attackthre = PsyModel_1.NSATTACKTHRE;\n        if (gfp.internal_flags.nsPsy.attackthre_s < 0)\n            gfp.internal_flags.nsPsy.attackthre_s = PsyModel_1.NSATTACKTHRE_S;\n\n        assert$2(gfp.scale >= 0);\n\n        if (gfp.scale < 0)\n            gfp.scale = 1;\n\n        if (gfp.ATHtype < 0)\n            gfp.ATHtype = 4;\n\n        if (gfp.ATHcurve < 0)\n            gfp.ATHcurve = 4;\n\n        if (gfp.athaa_loudapprox < 0)\n            gfp.athaa_loudapprox = 2;\n\n        if (gfp.interChRatio < 0)\n            gfp.interChRatio = 0;\n\n        if (gfp.useTemporal == null)\n            gfp.useTemporal = true;\n        /* on by default */\n\n        /*\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\" by Martin Sieler, Ralph\n         * Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         */\n        gfc.slot_lag = gfc.frac_SpF = 0;\n        if (gfp.VBR == VbrMode$2.vbr_off)\n            gfc.slot_lag = gfc.frac_SpF = (((gfp.version + 1) * 72000 * gfp.brate) % gfp.out_samplerate) | 0;\n\n        qupvt.iteration_init(gfp);\n        psy.psymodel_init(gfp);\n        assert$2(gfp.scale >= 0);\n        return 0;\n    };\n\n    function update_inbuffer_size(gfc, nsamples) {\n        if (gfc.in_buffer_0 == null || gfc.in_buffer_nsamples < nsamples) {\n            gfc.in_buffer_0 = new_float$2(nsamples);\n            gfc.in_buffer_1 = new_float$2(nsamples);\n            gfc.in_buffer_nsamples = nsamples;\n        }\n    }\n\n    this.lame_encode_flush = function (gfp, mp3buffer, mp3bufferPos, mp3buffer_size) {\n        var gfc = gfp.internal_flags;\n        var buffer = new_short_n$1([2, 1152]);\n        var imp3 = 0, mp3count, mp3buffer_size_remaining;\n\n        /*\n         * we always add POSTDELAY=288 padding to make sure granule with real\n         * data can be complety decoded (because of 50% overlap with next\n         * granule\n         */\n        var end_padding;\n        var frames_left;\n        var samples_to_encode = gfc.mf_samples_to_encode - Encoder_1.POSTDELAY;\n        var mf_needed = calcNeeded(gfp);\n\n        /* Was flush already called? */\n        if (gfc.mf_samples_to_encode < 1) {\n            return 0;\n        }\n        mp3count = 0;\n\n        if (gfp.in_samplerate != gfp.out_samplerate) {\n            /*\n             * delay due to resampling; needs to be fixed, if resampling code\n             * gets changed\n             */\n            samples_to_encode += 16. * gfp.out_samplerate / gfp.in_samplerate;\n        }\n        end_padding = gfp.framesize - (samples_to_encode % gfp.framesize);\n        if (end_padding < 576)\n            end_padding += gfp.framesize;\n        gfp.encoder_padding = end_padding;\n\n        frames_left = (samples_to_encode + end_padding) / gfp.framesize;\n\n        /*\n         * send in a frame of 0 padding until all internal sample buffers are\n         * flushed\n         */\n        while (frames_left > 0 && imp3 >= 0) {\n            var bunch = mf_needed - gfc.mf_size;\n            var frame_num = gfp.frameNum;\n\n            bunch *= gfp.in_samplerate;\n            bunch /= gfp.out_samplerate;\n            if (bunch > 1152)\n                bunch = 1152;\n            if (bunch < 1)\n                bunch = 1;\n\n            mp3buffer_size_remaining = mp3buffer_size - mp3count;\n\n            /* if user specifed buffer size = 0, dont check size */\n            if (mp3buffer_size == 0)\n                mp3buffer_size_remaining = 0;\n\n            imp3 = this.lame_encode_buffer(gfp, buffer[0], buffer[1], bunch,\n                mp3buffer, mp3bufferPos, mp3buffer_size_remaining);\n\n            mp3bufferPos += imp3;\n            mp3count += imp3;\n            frames_left -= (frame_num != gfp.frameNum) ? 1 : 0;\n        }\n        /*\n         * Set gfc.mf_samples_to_encode to 0, so we may detect and break loops\n         * calling it more than once in a row.\n         */\n        gfc.mf_samples_to_encode = 0;\n\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        /* mp3 related stuff. bit buffer might still contain some mp3 data */\n        bs.flush_bitstream(gfp);\n        imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n            mp3buffer_size_remaining, 1);\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n        mp3bufferPos += imp3;\n        mp3count += imp3;\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            /* write a id3 tag to the bitstream */\n            id3.id3tag_write_v1(gfp);\n\n            imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n                mp3buffer_size_remaining, 0);\n\n            if (imp3 < 0) {\n                return imp3;\n            }\n            mp3count += imp3;\n        }\n        return mp3count;\n    };\n\n    this.lame_encode_buffer = function (gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        update_inbuffer_size(gfc, nsamples);\n\n        in_buffer[0] = gfc.in_buffer_0;\n        in_buffer[1] = gfc.in_buffer_1;\n\n        /* make a copy of input buffer, changing type to sample_t */\n        for (var i = 0; i < nsamples; i++) {\n            in_buffer[0][i] = buffer_l[i];\n            if (gfc.channels_in > 1)\n                in_buffer[1][i] = buffer_r[i];\n        }\n\n        return lame_encode_buffer_sample(gfp, in_buffer[0], in_buffer[1],\n            nsamples, mp3buf, mp3bufPos, mp3buf_size);\n    };\n\n    function calcNeeded(gfp) {\n        var mf_needed = Encoder_1.BLKSIZE + gfp.framesize - Encoder_1.FFTOFFSET;\n        /*\n         * amount needed for FFT\n         */\n        mf_needed = Math.max(mf_needed, 512 + gfp.framesize - 32);\n        assert$2(LameInternalFlags_1.MFSIZE >= mf_needed);\n\n        return mf_needed;\n    }\n\n    function lame_encode_buffer_sample(gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var mp3size = 0, ret, i, ch, mf_needed;\n        var mp3out;\n        var mfbuf = [null, null];\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        /* copy out any tags that may have been written into bitstream */\n        mp3out = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 0);\n        if (mp3out < 0)\n            return mp3out;\n        /* not enough buffer space */\n        mp3bufPos += mp3out;\n        mp3size += mp3out;\n\n        in_buffer[0] = buffer_l;\n        in_buffer[1] = buffer_r;\n\n        /* Apply user defined re-scaling */\n\n        /* user selected scaling of the samples */\n        if (BitStream_1.NEQ(gfp.scale, 0) && BitStream_1.NEQ(gfp.scale, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale;\n                if (gfc.channels_out == 2)\n                    in_buffer[1][i] *= gfp.scale;\n            }\n        }\n\n        /* user selected scaling of the channel 0 (left) samples */\n        if (BitStream_1.NEQ(gfp.scale_left, 0)\n            && BitStream_1.NEQ(gfp.scale_left, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale_left;\n            }\n        }\n\n        /* user selected scaling of the channel 1 (right) samples */\n        if (BitStream_1.NEQ(gfp.scale_right, 0)\n            && BitStream_1.NEQ(gfp.scale_right, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[1][i] *= gfp.scale_right;\n            }\n        }\n\n        /* Downsample to Mono if 2 channels in and 1 channel out */\n        if (gfp.num_channels == 2 && gfc.channels_out == 1) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] = 0.5 * ( in_buffer[0][i] + in_buffer[1][i]);\n                in_buffer[1][i] = 0.0;\n            }\n        }\n\n        mf_needed = calcNeeded(gfp);\n\n        mfbuf[0] = gfc.mfbuf[0];\n        mfbuf[1] = gfc.mfbuf[1];\n\n        var in_bufferPos = 0;\n        while (nsamples > 0) {\n            var in_buffer_ptr = [null, null];\n            var n_in = 0;\n            /* number of input samples processed with fill_buffer */\n            var n_out = 0;\n            /* number of samples output with fill_buffer */\n            /* n_in <> n_out if we are resampling */\n\n            in_buffer_ptr[0] = in_buffer[0];\n            in_buffer_ptr[1] = in_buffer[1];\n            /* copy in new samples into mfbuf, with resampling */\n            var inOut = new InOut();\n            fill_buffer(gfp, mfbuf, in_buffer_ptr, in_bufferPos, nsamples,\n                inOut);\n            n_in = inOut.n_in;\n            n_out = inOut.n_out;\n\n            /* compute ReplayGain of resampled input if requested */\n            if (gfc.findReplayGain && !gfc.decode_on_the_fly)\n                if (ga.AnalyzeSamples(gfc.rgdata, mfbuf[0], gfc.mf_size,\n                        mfbuf[1], gfc.mf_size, n_out, gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                    return -6;\n\n            /* update in_buffer counters */\n            nsamples -= n_in;\n            in_bufferPos += n_in;\n            if (gfc.channels_out == 2)\n                ;// in_bufferPos += n_in;\n\n            /* update mfbuf[] counters */\n            gfc.mf_size += n_out;\n            assert$2(gfc.mf_size <= LameInternalFlags_1.MFSIZE);\n\n            /*\n             * lame_encode_flush may have set gfc.mf_sample_to_encode to 0 so we\n             * have to reinitialize it here when that happened.\n             */\n            if (gfc.mf_samples_to_encode < 1) {\n                gfc.mf_samples_to_encode = Encoder_1.ENCDELAY + Encoder_1.POSTDELAY;\n            }\n            gfc.mf_samples_to_encode += n_out;\n\n            if (gfc.mf_size >= mf_needed) {\n                /* encode the frame. */\n                /* mp3buf = pointer to current location in buffer */\n                /* mp3buf_size = size of original mp3 output buffer */\n                /* = 0 if we should not worry about the */\n                /* buffer size because calling program is */\n                /* to lazy to compute it */\n                /* mp3size = size of data written to buffer so far */\n                /* mp3buf_size-mp3size = amount of space avalable */\n\n                var buf_size = mp3buf_size - mp3size;\n                if (mp3buf_size == 0)\n                    buf_size = 0;\n\n                ret = lame_encode_frame(gfp, mfbuf[0], mfbuf[1], mp3buf,\n                    mp3bufPos, buf_size);\n\n                if (ret < 0)\n                    return ret;\n                mp3bufPos += ret;\n                mp3size += ret;\n\n                /* shift out old samples */\n                gfc.mf_size -= gfp.framesize;\n                gfc.mf_samples_to_encode -= gfp.framesize;\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    for (i = 0; i < gfc.mf_size; i++)\n                        mfbuf[ch][i] = mfbuf[ch][i + gfp.framesize];\n            }\n        }\n        assert$2(nsamples == 0);\n\n        return mp3size;\n    }\n\n    function lame_encode_frame(gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var ret = self.enc.lame_encode_mp3_frame(gfp, inbuf_l, inbuf_r, mp3buf,\n            mp3bufPos, mp3buf_size);\n        gfp.frameNum++;\n        return ret;\n    }\n\n    function InOut() {\n        this.n_in = 0;\n        this.n_out = 0;\n    }\n\n\n    function NumUsed() {\n        this.num_used = 0;\n    }\n\n    /**\n     * Greatest common divisor.\n     * <p>\n     * Joint work of Euclid and M. Hendry\n     */\n    function gcd(i, j) {\n        return j != 0 ? gcd(j, i % j) : i;\n    }\n\n    /**\n     * Resampling via FIR filter, blackman window.\n     */\n    function blackman(x, fcn, l) {\n        /*\n         * This algorithm from: SIGNAL PROCESSING ALGORITHMS IN FORTRAN AND C\n         * S.D. Stearns and R.A. David, Prentice-Hall, 1992\n         */\n        var wcn = (Math.PI * fcn);\n\n        x /= l;\n        if (x < 0)\n            x = 0;\n        if (x > 1)\n            x = 1;\n        var x2 = x - .5;\n\n        var bkwn = 0.42 - 0.5 * Math.cos(2 * x * Math.PI) + 0.08 * Math.cos(4 * x * Math.PI);\n        if (Math.abs(x2) < 1e-9)\n            return (wcn / Math.PI);\n        else\n            return (bkwn * Math.sin(l * wcn * x2) / (Math.PI * l * x2));\n    }\n\n    function fill_buffer_resample(gfp, outbuf, outbufPos, desired_len, inbuf, in_bufferPos, len, num_used, ch) {\n        var gfc = gfp.internal_flags;\n        var i, j = 0, k;\n        /* number of convolution functions to pre-compute */\n        var bpc = gfp.out_samplerate\n            / gcd(gfp.out_samplerate, gfp.in_samplerate);\n        if (bpc > LameInternalFlags_1.BPC)\n            bpc = LameInternalFlags_1.BPC;\n\n        var intratio = (Math.abs(gfc.resample_ratio\n            - Math.floor(.5 + gfc.resample_ratio)) < .0001) ? 1 : 0;\n        var fcn = 1.00 / gfc.resample_ratio;\n        if (fcn > 1.00)\n            fcn = 1.00;\n        var filter_l = 31;\n        if (0 == filter_l % 2)\n            --filter_l;\n        /* must be odd */\n        filter_l += intratio;\n        /* unless resample_ratio=int, it must be even */\n\n        var BLACKSIZE = filter_l + 1;\n        /* size of data needed for FIR */\n\n        if (gfc.fill_buffer_resample_init == 0) {\n            gfc.inbuf_old[0] = new_float$2(BLACKSIZE);\n            gfc.inbuf_old[1] = new_float$2(BLACKSIZE);\n            for (i = 0; i <= 2 * bpc; ++i)\n                gfc.blackfilt[i] = new_float$2(BLACKSIZE);\n\n            gfc.itime[0] = 0;\n            gfc.itime[1] = 0;\n\n            /* precompute blackman filter coefficients */\n            for (j = 0; j <= 2 * bpc; j++) {\n                var sum = 0.;\n                var offset = (j - bpc) / (2. * bpc);\n                for (i = 0; i <= filter_l; i++)\n                    sum += gfc.blackfilt[j][i] = blackman(i - offset, fcn,\n                        filter_l);\n                for (i = 0; i <= filter_l; i++)\n                    gfc.blackfilt[j][i] /= sum;\n            }\n            gfc.fill_buffer_resample_init = 1;\n        }\n\n        var inbuf_old = gfc.inbuf_old[ch];\n\n        /* time of j'th element in inbuf = itime + j/ifreq; */\n        /* time of k'th element in outbuf = j/ofreq */\n        for (k = 0; k < desired_len; k++) {\n            var time0;\n            var joff;\n\n            time0 = k * gfc.resample_ratio;\n            /* time of k'th output sample */\n            j = 0 | Math.floor(time0 - gfc.itime[ch]);\n\n            /* check if we need more input data */\n            if ((filter_l + j - filter_l / 2) >= len)\n                break;\n\n            /* blackman filter. by default, window centered at j+.5(filter_l%2) */\n            /* but we want a window centered at time0. */\n            var offset = (time0 - gfc.itime[ch] - (j + .5 * (filter_l % 2)));\n            assert$2(Math.abs(offset) <= .501);\n\n            /* find the closest precomputed window for this offset: */\n            joff = 0 | Math.floor((offset * 2 * bpc) + bpc + .5);\n            var xvalue = 0.;\n            for (i = 0; i <= filter_l; ++i) {\n                var j2 = i + j - filter_l / 2;\n                var y;\n                assert$2(j2 < len);\n                assert$2(j2 + BLACKSIZE >= 0);\n                y = (j2 < 0) ? inbuf_old[BLACKSIZE + j2] : inbuf[in_bufferPos\n                + j2];\n                xvalue += y * gfc.blackfilt[joff][i];\n            }\n            outbuf[outbufPos + k] = xvalue;\n        }\n\n        /* k = number of samples added to outbuf */\n        /* last k sample used data from [j-filter_l/2,j+filter_l-filter_l/2] */\n\n        /* how many samples of input data were used: */\n        num_used.num_used = Math.min(len, filter_l + j - filter_l / 2);\n\n        /*\n         * adjust our input time counter. Incriment by the number of samples\n         * used, then normalize so that next output sample is at time 0, next\n         * input buffer is at time itime[ch]\n         */\n        gfc.itime[ch] += num_used.num_used - k * gfc.resample_ratio;\n\n        /* save the last BLACKSIZE samples into the inbuf_old buffer */\n        if (num_used.num_used >= BLACKSIZE) {\n            for (i = 0; i < BLACKSIZE; i++)\n                inbuf_old[i] = inbuf[in_bufferPos + num_used.num_used + i\n                - BLACKSIZE];\n        } else {\n            /* shift in num_used.num_used samples into inbuf_old */\n            var n_shift = BLACKSIZE - num_used.num_used;\n            /*\n             * number of samples to\n             * shift\n             */\n\n            /*\n             * shift n_shift samples by num_used.num_used, to make room for the\n             * num_used new samples\n             */\n            for (i = 0; i < n_shift; ++i)\n                inbuf_old[i] = inbuf_old[i + num_used.num_used];\n\n            /* shift in the num_used.num_used samples */\n            for (j = 0; i < BLACKSIZE; ++i, ++j)\n                inbuf_old[i] = inbuf[in_bufferPos + j];\n\n            assert$2(j == num_used.num_used);\n        }\n        return k;\n        /* return the number samples created at the new samplerate */\n    }\n\n    function fill_buffer(gfp, mfbuf, in_buffer, in_bufferPos, nsamples, io) {\n        var gfc = gfp.internal_flags;\n\n        /* copy in new samples into mfbuf, with resampling if necessary */\n        if ((gfc.resample_ratio < .9999) || (gfc.resample_ratio > 1.0001)) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var numUsed = new NumUsed();\n                io.n_out = fill_buffer_resample(gfp, mfbuf[ch], gfc.mf_size,\n                    gfp.framesize, in_buffer[ch], in_bufferPos, nsamples,\n                    numUsed, ch);\n                io.n_in = numUsed.num_used;\n            }\n        } else {\n            io.n_out = Math.min(gfp.framesize, nsamples);\n            io.n_in = io.n_out;\n            for (var i = 0; i < io.n_out; ++i) {\n                mfbuf[0][gfc.mf_size + i] = in_buffer[0][in_bufferPos + i];\n                if (gfc.channels_out == 2)\n                    mfbuf[1][gfc.mf_size + i] = in_buffer[1][in_bufferPos + i];\n            }\n        }\n    }\n\n}\n\nvar Lame_1 = Lame$1;\n\nvar VbrMode$20 = common.VbrMode;\nfunction Presets$1() {\n    function VBRPresets(qual, comp, compS,\n                        y, shThreshold, shThresholdS,\n                        adj, adjShort, lower,\n                        curve, sens, inter,\n                        joint, mod, fix) {\n        this.vbr_q = qual;\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.expY = y;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.masking_adj = adj;\n        this.masking_adj_short = adjShort;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.ath_sensitivity = sens;\n        this.interch = inter;\n        this.safejoint = joint;\n        this.sfb21mod = mod;\n        this.msfix = fix;\n    }\n\n    function ABRPresets(kbps, comp, compS,\n                        joint, fix, shThreshold,\n                        shThresholdS, bass, sc,\n                        mask, lower, curve,\n                        interCh, sfScale) {\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.safejoint = joint;\n        this.nsmsfix = fix;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.nsbass = bass;\n        this.scale = sc;\n        this.masking_adj = mask;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.interch = interCh;\n        this.sfscale = sfScale;\n    }\n\n    var lame;\n\n    this.setModules = function (_lame) {\n        lame = _lame;\n    };\n\n    /**\n     * <PRE>\n     * Switch mappings for VBR mode VBR_RH\n     *             vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_old_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 5.20, 125.0, -4.2, -6.3, 4.8, 1, 0, 0, 2, 21, 0.97),\n        new VBRPresets(1, 9, 9, 0, 5.30, 125.0, -3.6, -5.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 5.60, 125.0, -2.2, -3.5, 2.8, 2, 0, 0, 2, 21, 1.49),\n        new VBRPresets(3, 9, 9, 1, 5.80, 130.0, -1.8, -2.8, 2.6, 3, -4, 0, 2, 20, 1.64),\n        new VBRPresets(4, 9, 9, 1, 6.00, 135.0, -0.7, -1.1, 1.1, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 6.40, 140.0, 0.5, 0.4, -7.5, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 6.60, 145.0, 0.67, 0.65, -14.7, 6.5, -19, 0.0004, 0, 0, 2.30),\n        new VBRPresets(7, 9, 9, 1, 6.60, 145.0, 0.8, 0.75, -19.7, 8, -22, 0.0006, 0, 0, 2.70),\n        new VBRPresets(8, 9, 9, 1, 6.60, 145.0, 1.2, 1.15, -27.5, 10, -23, 0.0007, 0, 0, 0),\n        new VBRPresets(9, 9, 9, 1, 6.60, 145.0, 1.6, 1.6, -36, 11, -25, 0.0008, 0, 0, 0),\n        new VBRPresets(10, 9, 9, 1, 6.60, 145.0, 2.0, 2.0, -36, 12, -25, 0.0008, 0, 0, 0)\n    ];\n\n    /**\n     * <PRE>\n     *                 vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_psy_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 4.20, 25.0, -7.0, -4.0, 7.5, 1, 0, 0, 2, 26, 0.97),\n        new VBRPresets(1, 9, 9, 0, 4.20, 25.0, -5.6, -3.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 4.20, 25.0, -4.4, -1.8, 2, 2, 0, 0, 2, 18, 1.49),\n        new VBRPresets(3, 9, 9, 1, 4.20, 25.0, -3.4, -1.25, 1.1, 3, -4, 0, 2, 15, 1.64),\n        new VBRPresets(4, 9, 9, 1, 4.20, 25.0, -2.2, 0.1, 0, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 4.20, 25.0, -1.0, 1.65, -7.7, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 4.20, 25.0, -0.0, 2.47, -7.7, 6.5, -19, 0.0004, 0, 0, 2),\n        new VBRPresets(7, 9, 9, 1, 4.20, 25.0, 0.5, 2.0, -14.5, 8, -22, 0.0006, 0, 0, 2),\n        new VBRPresets(8, 9, 9, 1, 4.20, 25.0, 1.0, 2.4, -22.0, 10, -23, 0.0007, 0, 0, 2),\n        new VBRPresets(9, 9, 9, 1, 4.20, 25.0, 1.5, 2.95, -30.0, 11, -25, 0.0008, 0, 0, 2),\n        new VBRPresets(10, 9, 9, 1, 4.20, 25.0, 2.0, 2.95, -36.0, 12, -30, 0.0008, 0, 0, 2)\n    ];\n\n    function apply_vbr_preset(gfp, a, enforce) {\n        var vbr_preset = gfp.VBR == VbrMode$20.vbr_rh ? vbr_old_switch_map\n            : vbr_psy_switch_map;\n\n        var x = gfp.VBR_q_frac;\n        var p = vbr_preset[a];\n        var q = vbr_preset[a + 1];\n        var set = p;\n\n        // NOOP(vbr_q);\n        // NOOP(quant_comp);\n        // NOOP(quant_comp_s);\n        // NOOP(expY);\n        p.st_lrm = p.st_lrm + x * (q.st_lrm - p.st_lrm);\n        // LERP(st_lrm);\n        p.st_s = p.st_s + x * (q.st_s - p.st_s);\n        // LERP(st_s);\n        p.masking_adj = p.masking_adj + x * (q.masking_adj - p.masking_adj);\n        // LERP(masking_adj);\n        p.masking_adj_short = p.masking_adj_short + x\n            * (q.masking_adj_short - p.masking_adj_short);\n        // LERP(masking_adj_short);\n        p.ath_lower = p.ath_lower + x * (q.ath_lower - p.ath_lower);\n        // LERP(ath_lower);\n        p.ath_curve = p.ath_curve + x * (q.ath_curve - p.ath_curve);\n        // LERP(ath_curve);\n        p.ath_sensitivity = p.ath_sensitivity + x\n            * (q.ath_sensitivity - p.ath_sensitivity);\n        // LERP(ath_sensitivity);\n        p.interch = p.interch + x * (q.interch - p.interch);\n        // LERP(interch);\n        // NOOP(safejoint);\n        // NOOP(sfb21mod);\n        p.msfix = p.msfix + x * (q.msfix - p.msfix);\n        // LERP(msfix);\n\n        lame_set_VBR_q(gfp, set.vbr_q);\n\n        if (enforce != 0)\n            gfp.quant_comp = set.quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = set.quant_comp;\n        // SET_OPTION(quant_comp, set.quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = set.quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = set.quant_comp_s;\n        // SET_OPTION(quant_comp_short, set.quant_comp_s, -1);\n        if (set.expY != 0) {\n            gfp.experimentalY = set.expY != 0;\n        }\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        // SET_OPTION(short_threshold_lrm, set.st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        // SET_OPTION(short_threshold_s, set.st_s, -1);\n        if (enforce != 0)\n            gfp.maskingadjust = set.masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = set.masking_adj;\n        // SET_OPTION(maskingadjust, set.masking_adj, 0);\n        if (enforce != 0)\n            gfp.maskingadjust_short = set.masking_adj_short;\n        else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n            gfp.maskingadjust_short = set.masking_adj_short;\n        // SET_OPTION(maskingadjust_short, set.masking_adj_short, 0);\n        if (enforce != 0)\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        else if (!(Math.abs((-gfp.ATHlower * 10.0) - 0) > 0))\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        // SET_OPTION(ATHlower, set.ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = set.ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = set.ath_curve;\n        // SET_OPTION(ATHcurve, set.ath_curve, -1);\n        if (enforce != 0)\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        else if (!(Math.abs(gfp.athaa_sensitivity - -1) > 0))\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        // SET_OPTION(athaa_sensitivity, set.ath_sensitivity, 0);\n        if (set.interch > 0) {\n            if (enforce != 0)\n                gfp.interChRatio = set.interch;\n            else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n                gfp.interChRatio = set.interch;\n            // SET_OPTION(interChRatio, set.interch, -1);\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (set.safejoint > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | set.safejoint;\n        }\n        if (set.sfb21mod > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (set.sfb21mod << 20);\n        }\n        if (enforce != 0)\n            gfp.msfix = set.msfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = set.msfix;\n        // SET_OPTION(msfix, set.msfix, -1);\n\n        if (enforce == 0) {\n            gfp.VBR_q = a;\n            gfp.VBR_q_frac = x;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  Switch mappings for ABR mode\n     *\n     *              kbps  quant q_s safejoint nsmsfix st_lrm  st_s  ns-bass scale   msk ath_lwr ath_curve  interch , sfscale\n     * </PRE>\n     */\n    var abr_switch_map = [\n        new ABRPresets(8, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -30.0, 11, 0.0012, 1), /*   8, impossible to use in stereo */\n        new ABRPresets(16, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -25.0, 11, 0.0010, 1), /*  16 */\n        new ABRPresets(24, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -20.0, 11, 0.0010, 1), /*  24 */\n        new ABRPresets(32, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -15.0, 11, 0.0010, 1), /*  32 */\n        new ABRPresets(40, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  40 */\n        new ABRPresets(48, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  48 */\n        new ABRPresets(56, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -6.0, 11, 0.0008, 1), /*  56 */\n        new ABRPresets(64, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -2.0, 11, 0.0008, 1), /*  64 */\n        new ABRPresets(80, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, .0, 8, 0.0007, 1), /*  80 */\n        new ABRPresets(96, 9, 9, 0, 2.50, 6.60, 145, 0, 0.95, 0, 1.0, 5.5, 0.0006, 1), /*  96 */\n        new ABRPresets(112, 9, 9, 0, 2.25, 6.60, 145, 0, 0.95, 0, 2.0, 4.5, 0.0005, 1), /* 112 */\n        new ABRPresets(128, 9, 9, 0, 1.95, 6.40, 140, 0, 0.95, 0, 3.0, 4, 0.0002, 1), /* 128 */\n        new ABRPresets(160, 9, 9, 1, 1.79, 6.00, 135, 0, 0.95, -2, 5.0, 3.5, 0, 1), /* 160 */\n        new ABRPresets(192, 9, 9, 1, 1.49, 5.60, 125, 0, 0.97, -4, 7.0, 3, 0, 0), /* 192 */\n        new ABRPresets(224, 9, 9, 1, 1.25, 5.20, 125, 0, 0.98, -6, 9.0, 2, 0, 0), /* 224 */\n        new ABRPresets(256, 9, 9, 1, 0.97, 5.20, 125, 0, 1.00, -8, 10.0, 1, 0, 0), /* 256 */\n        new ABRPresets(320, 9, 9, 1, 0.90, 5.20, 125, 0, 1.00, -10, 12.0, 0, 0, 0)  /* 320 */\n    ];\n\n    function apply_abr_preset(gfp, preset, enforce) {\n        /* Variables for the ABR stuff */\n        var actual_bitrate = preset;\n\n        var r = lame.nearestBitrateFullIndex(preset);\n\n        gfp.VBR = VbrMode$20.vbr_abr;\n        gfp.VBR_mean_bitrate_kbps = actual_bitrate;\n        gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps, 320);\n        gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps, 8);\n        gfp.brate = gfp.VBR_mean_bitrate_kbps;\n        if (gfp.VBR_mean_bitrate_kbps > 320) {\n            gfp.disable_reservoir = true;\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (abr_switch_map[r].safejoint > 0)\n            gfp.exp_nspsytune = gfp.exp_nspsytune | 2;\n        /* safejoint */\n\n        if (abr_switch_map[r].sfscale > 0) {\n            gfp.internal_flags.noise_shaping = 2;\n        }\n        /* ns-bass tweaks */\n        if (Math.abs(abr_switch_map[r].nsbass) > 0) {\n            var k = (int)(abr_switch_map[r].nsbass * 4);\n            if (k < 0)\n                k += 64;\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (k << 2);\n        }\n\n        if (enforce != 0)\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        // SET_OPTION(quant_comp, abr_switch_map[r].quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        // SET_OPTION(quant_comp_short, abr_switch_map[r].quant_comp_s, -1);\n\n        if (enforce != 0)\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        // SET_OPTION(msfix, abr_switch_map[r].nsmsfix, -1);\n\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        // SET_OPTION(short_threshold_lrm, abr_switch_map[r].st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        // SET_OPTION(short_threshold_s, abr_switch_map[r].st_s, -1);\n\n        /*\n         * ABR seems to have big problems with clipping, especially at low\n         * bitrates\n         */\n        /*\n         * so we compensate for that here by using a scale value depending on\n         * bitrate\n         */\n        if (enforce != 0)\n            gfp.scale = abr_switch_map[r].scale;\n        else if (!(Math.abs(gfp.scale - -1) > 0))\n            gfp.scale = abr_switch_map[r].scale;\n        // SET_OPTION(scale, abr_switch_map[r].scale, -1);\n\n        if (enforce != 0)\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        // SET_OPTION(maskingadjust, abr_switch_map[r].masking_adj, 0);\n        if (abr_switch_map[r].masking_adj > 0) {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // .9, 0);\n        } else {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // 1.1, 0);\n        }\n\n        if (enforce != 0)\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        else if (!(Math.abs((-gfp.ATHlower * 10.) - 0) > 0))\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        // SET_OPTION(ATHlower, abr_switch_map[r].ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        // SET_OPTION(ATHcurve, abr_switch_map[r].ath_curve, -1);\n\n        if (enforce != 0)\n            gfp.interChRatio = abr_switch_map[r].interch;\n        else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n            gfp.interChRatio = abr_switch_map[r].interch;\n        // SET_OPTION(interChRatio, abr_switch_map[r].interch, -1);\n\n        return preset;\n    }\n\n    this.apply_preset = function(gfp, preset, enforce) {\n        /* translate legacy presets */\n        switch (preset) {\n            case Lame.R3MIX:\n            {\n                preset = Lame.V3;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.MEDIUM:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode$20.vbr_rh;\n                break;\n            }\n            case Lame.MEDIUM_FAST:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.STANDARD:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode$20.vbr_rh;\n                break;\n            }\n            case Lame.STANDARD_FAST:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.EXTREME:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode$20.vbr_rh;\n                break;\n            }\n            case Lame.EXTREME_FAST:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.INSANE:\n            {\n                preset = 320;\n                gfp.preset = preset;\n                apply_abr_preset(gfp, preset, enforce);\n                gfp.VBR = VbrMode$20.vbr_off;\n                return preset;\n            }\n        }\n\n        gfp.preset = preset;\n        {\n            switch (preset) {\n                case Lame.V9:\n                    apply_vbr_preset(gfp, 9, enforce);\n                    return preset;\n                case Lame.V8:\n                    apply_vbr_preset(gfp, 8, enforce);\n                    return preset;\n                case Lame.V7:\n                    apply_vbr_preset(gfp, 7, enforce);\n                    return preset;\n                case Lame.V6:\n                    apply_vbr_preset(gfp, 6, enforce);\n                    return preset;\n                case Lame.V5:\n                    apply_vbr_preset(gfp, 5, enforce);\n                    return preset;\n                case Lame.V4:\n                    apply_vbr_preset(gfp, 4, enforce);\n                    return preset;\n                case Lame.V3:\n                    apply_vbr_preset(gfp, 3, enforce);\n                    return preset;\n                case Lame.V2:\n                    apply_vbr_preset(gfp, 2, enforce);\n                    return preset;\n                case Lame.V1:\n                    apply_vbr_preset(gfp, 1, enforce);\n                    return preset;\n                case Lame.V0:\n                    apply_vbr_preset(gfp, 0, enforce);\n                    return preset;\n                default:\n                    break;\n            }\n        }\n        if (8 <= preset && preset <= 320) {\n            return apply_abr_preset(gfp, preset, enforce);\n        }\n\n        /* no corresponding preset found */\n        gfp.preset = 0;\n        return preset;\n    };\n\n    // Rest from getset.c:\n\n    /**\n     * VBR quality level.<BR>\n     * 0 = highest<BR>\n     * 9 = lowest\n     */\n    function lame_set_VBR_q(gfp, VBR_q) {\n        var ret = 0;\n\n        if (0 > VBR_q) {\n            /* Unknown VBR quality level! */\n            ret = -1;\n            VBR_q = 0;\n        }\n        if (9 < VBR_q) {\n            ret = -1;\n            VBR_q = 9;\n        }\n\n        gfp.VBR_q = VBR_q;\n        gfp.VBR_q_frac = 0;\n        return ret;\n    }\n\n}\n\nvar Presets_1 = Presets$1;\n\nfunction VBRQuantize() {\n    var qupvt;\n    var tak;\n\n    this.setModules = function (_qupvt, _tk) {\n        qupvt = _qupvt;\n        tak = _tk;\n    };\n    //TODO\n\n}\n\nvar VBRQuantize_1 = VBRQuantize;\n\n//package mp3;\n\nfunction CalcNoiseResult$1() {\n    /**\n     * sum of quantization noise > masking\n     */\n    this.over_noise = 0.;\n    /**\n     * sum of all quantization noise\n     */\n    this.tot_noise = 0.;\n    /**\n     * max quantization noise\n     */\n    this.max_noise = 0.;\n    /**\n     * number of quantization noise > masking\n     */\n    this.over_count = 0;\n    /**\n     * SSD-like cost of distorted bands\n     */\n    this.over_SSD = 0;\n    this.bits = 0;\n}\n\nvar CalcNoiseResult_1 = CalcNoiseResult$1;\n\nvar new_float$22 = common.new_float;\nvar new_int$22 = common.new_int;\nfunction CalcNoiseData() {\n    this.global_gain = 0;\n    this.sfb_count1 = 0;\n    this.step = new_int$22(39);\n    this.noise = new_float$22(39);\n    this.noise_log = new_float$22(39);\n}\n\nvar CalcNoiseData_1 = CalcNoiseData;\n\n/*\n * MP3 quantization\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *      Copyright (c) 1999-2003 Takehiro Tominaga\n *      Copyright (c) 2000-2007 Robert Hegemann\n *      Copyright (c) 2001-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.     See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Quantize.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\n\nvar System$21 = common.System;\nvar VbrMode$21 = common.VbrMode;\nvar Util$21 = common.Util;\nvar Arrays$21 = common.Arrays;\nvar new_float$21 = common.new_float;\nvar assert$21 = common.assert;\n\n\n\n\n\n\n\n\nfunction Quantize$1() {\n    var bs;\n    this.rv = null;\n    var rv;\n    this.qupvt = null;\n    var qupvt;\n\n    var vbr = new VBRQuantize_1();\n    var tk;\n\n    this.setModules = function (_bs, _rv, _qupvt, _tk) {\n        bs = _bs;\n        rv = _rv;\n        this.rv = _rv;\n        qupvt = _qupvt;\n        this.qupvt = _qupvt;\n        tk = _tk;\n        vbr.setModules(qupvt, tk);\n    };\n\n    /**\n     * convert from L/R <. Mid/Side\n     */\n    this.ms_convert = function (l3_side, gr) {\n        for (var i = 0; i < 576; ++i) {\n            var l = l3_side.tt[gr][0].xr[i];\n            var r = l3_side.tt[gr][1].xr[i];\n            l3_side.tt[gr][0].xr[i] = (l + r) * (Util$21.SQRT2 * 0.5);\n            l3_side.tt[gr][1].xr[i] = (l - r) * (Util$21.SQRT2 * 0.5);\n        }\n    };\n\n    /**\n     * mt 6/99\n     *\n     * initializes cod_info, scalefac and xrpow\n     *\n     * returns 0 if all energies in xr are zero, else 1\n     */\n    function init_xrpow_core(cod_info, xrpow, upper, sum) {\n        sum = 0;\n        for (var i = 0; i <= upper; ++i) {\n            var tmp = Math.abs(cod_info.xr[i]);\n            sum += tmp;\n            xrpow[i] = Math.sqrt(tmp * Math.sqrt(tmp));\n\n            if (xrpow[i] > cod_info.xrpow_max)\n                cod_info.xrpow_max = xrpow[i];\n        }\n        return sum;\n    }\n\n    this.init_xrpow = function (gfc, cod_info, xrpow) {\n        var sum = 0;\n        var upper = 0 | cod_info.max_nonzero_coeff;\n\n        assert$21(xrpow != null);\n        cod_info.xrpow_max = 0;\n\n        /*\n         * check if there is some energy we have to quantize and calculate xrpow\n         * matching our fresh scalefactors\n         */\n        assert$21(0 <= upper && upper <= 575);\n\n        Arrays$21.fill(xrpow, upper, 576, 0);\n\n        sum = init_xrpow_core(cod_info, xrpow, upper, sum);\n\n        /*\n         * return 1 if we have something to quantize, else 0\n         */\n        if (sum > 1E-20) {\n            var j = 0;\n            if ((gfc.substep_shaping & 2) != 0)\n                j = 1;\n\n            for (var i = 0; i < cod_info.psymax; i++)\n                gfc.pseudohalf[i] = j;\n\n            return true;\n        }\n\n        Arrays$21.fill(cod_info.l3_enc, 0, 576, 0);\n        return false;\n    };\n\n    /**\n     * Gabriel Bouvigne feb/apr 2003<BR>\n     * Analog silence detection in partitionned sfb21 or sfb12 for short blocks\n     *\n     * From top to bottom of sfb, changes to 0 coeffs which are below ath. It\n     * stops on the first coeff higher than ath.\n     */\n    function psfb21_analogsilence(gfc, cod_info) {\n        var ath = gfc.ATH;\n        var xr = cod_info.xr;\n\n        if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n            /* NORM, START or STOP type, but not SHORT blocks */\n            var stop = false;\n            for (var gsfb = Encoder_1.PSFB21 - 1; gsfb >= 0 && !stop; gsfb--) {\n                var start = gfc.scalefac_band.psfb21[gsfb];\n                var end = gfc.scalefac_band.psfb21[gsfb + 1];\n                var ath21 = qupvt.athAdjust(ath.adjust, ath.psfb21[gsfb],\n                    ath.floor);\n\n                if (gfc.nsPsy.longfact[21] > 1e-12)\n                    ath21 *= gfc.nsPsy.longfact[21];\n\n                for (var j = end - 1; j >= start; j--) {\n                    if (Math.abs(xr[j]) < ath21)\n                        xr[j] = 0;\n                    else {\n                        stop = true;\n                        break;\n                    }\n                }\n            }\n        } else {\n            /* note: short blocks coeffs are reordered */\n            for (var block = 0; block < 3; block++) {\n                var stop = false;\n                for (var gsfb = Encoder_1.PSFB12 - 1; gsfb >= 0 && !stop; gsfb--) {\n                    var start = gfc.scalefac_band.s[12]\n                        * 3\n                        + (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                        * block\n                        + (gfc.scalefac_band.psfb12[gsfb] - gfc.scalefac_band.psfb12[0]);\n                    var end = start\n                        + (gfc.scalefac_band.psfb12[gsfb + 1] - gfc.scalefac_band.psfb12[gsfb]);\n                    var ath12 = qupvt.athAdjust(ath.adjust, ath.psfb12[gsfb],\n                        ath.floor);\n\n                    if (gfc.nsPsy.shortfact[12] > 1e-12)\n                        ath12 *= gfc.nsPsy.shortfact[12];\n\n                    for (var j = end - 1; j >= start; j--) {\n                        if (Math.abs(xr[j]) < ath12)\n                            xr[j] = 0;\n                        else {\n                            stop = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n    }\n\n    this.init_outer_loop = function (gfc, cod_info) {\n        /*\n         * initialize fresh cod_info\n         */\n        cod_info.part2_3_length = 0;\n        cod_info.big_values = 0;\n        cod_info.count1 = 0;\n        cod_info.global_gain = 210;\n        cod_info.scalefac_compress = 0;\n        /* mixed_block_flag, block_type was set in psymodel.c */\n        cod_info.table_select[0] = 0;\n        cod_info.table_select[1] = 0;\n        cod_info.table_select[2] = 0;\n        cod_info.subblock_gain[0] = 0;\n        cod_info.subblock_gain[1] = 0;\n        cod_info.subblock_gain[2] = 0;\n        cod_info.subblock_gain[3] = 0;\n        /* this one is always 0 */\n        cod_info.region0_count = 0;\n        cod_info.region1_count = 0;\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 0;\n        cod_info.count1table_select = 0;\n        cod_info.part2_length = 0;\n        cod_info.sfb_lmax = Encoder_1.SBPSY_l;\n        cod_info.sfb_smin = Encoder_1.SBPSY_s;\n        cod_info.psy_lmax = gfc.sfb21_extra ? Encoder_1.SBMAX_l : Encoder_1.SBPSY_l;\n        cod_info.psymax = cod_info.psy_lmax;\n        cod_info.sfbmax = cod_info.sfb_lmax;\n        cod_info.sfbdivide = 11;\n        for (var sfb = 0; sfb < Encoder_1.SBMAX_l; sfb++) {\n            cod_info.width[sfb] = gfc.scalefac_band.l[sfb + 1]\n                - gfc.scalefac_band.l[sfb];\n            /* which is always 0. */\n            cod_info.window[sfb] = 3;\n        }\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            var ixwork = new_float$21(576);\n\n            cod_info.sfb_smin = 0;\n            cod_info.sfb_lmax = 0;\n            if (cod_info.mixed_block_flag != 0) {\n                /*\n                 * MPEG-1: sfbs 0-7 long block, 3-12 short blocks MPEG-2(.5):\n                 * sfbs 0-5 long block, 3-12 short blocks\n                 */\n                cod_info.sfb_smin = 3;\n                cod_info.sfb_lmax = gfc.mode_gr * 2 + 4;\n            }\n            cod_info.psymax = cod_info.sfb_lmax\n                + 3\n                * ((gfc.sfb21_extra ? Encoder_1.SBMAX_s : Encoder_1.SBPSY_s) - cod_info.sfb_smin);\n            cod_info.sfbmax = cod_info.sfb_lmax + 3\n                * (Encoder_1.SBPSY_s - cod_info.sfb_smin);\n            cod_info.sfbdivide = cod_info.sfbmax - 18;\n            cod_info.psy_lmax = cod_info.sfb_lmax;\n            /* re-order the short blocks, for more efficient encoding below */\n            /* By Takehiro TOMINAGA */\n            /*\n             * Within each scalefactor band, data is given for successive time\n             * windows, beginning with window 0 and ending with window 2. Within\n             * each window, the quantized values are then arranged in order of\n             * increasing frequency...\n             */\n            var ix = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            System$21.arraycopy(cod_info.xr, 0, ixwork, 0, 576);\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                for (var window = 0; window < 3; window++) {\n                    for (var l = start; l < end; l++) {\n                        cod_info.xr[ix++] = ixwork[3 * l + window];\n                    }\n                }\n            }\n\n            var j = cod_info.sfb_lmax;\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                cod_info.width[j] = cod_info.width[j + 1] = cod_info.width[j + 2] = gfc.scalefac_band.s[sfb + 1]\n                    - gfc.scalefac_band.s[sfb];\n                cod_info.window[j] = 0;\n                cod_info.window[j + 1] = 1;\n                cod_info.window[j + 2] = 2;\n                j += 3;\n            }\n        }\n\n        cod_info.count1bits = 0;\n        cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[0][0];\n        cod_info.slen[0] = 0;\n        cod_info.slen[1] = 0;\n        cod_info.slen[2] = 0;\n        cod_info.slen[3] = 0;\n\n        cod_info.max_nonzero_coeff = 575;\n\n        /*\n         * fresh scalefactors are all zero\n         */\n        Arrays$21.fill(cod_info.scalefac, 0);\n\n        psfb21_analogsilence(gfc, cod_info);\n    };\n\n    function BinSearchDirection(ordinal) {\n        this.ordinal = ordinal;\n    }\n\n    BinSearchDirection.BINSEARCH_NONE = new BinSearchDirection(0);\n    BinSearchDirection.BINSEARCH_UP = new BinSearchDirection(1);\n    BinSearchDirection.BINSEARCH_DOWN = new BinSearchDirection(2);\n\n    /**\n     * author/date??\n     *\n     * binary step size search used by outer_loop to get a quantizer step size\n     * to start with\n     */\n    function bin_search_StepSize(gfc, cod_info, desired_rate, ch, xrpow) {\n        var nBits;\n        var CurrentStep = gfc.CurrentStep[ch];\n        var flagGoneOver = false;\n        var start = gfc.OldValue[ch];\n        var Direction = BinSearchDirection.BINSEARCH_NONE;\n        cod_info.global_gain = start;\n        desired_rate -= cod_info.part2_length;\n\n        assert$21(CurrentStep != 0);\n        for (; ;) {\n            var step;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n\n            if (CurrentStep == 1 || nBits == desired_rate)\n                break;\n            /* nothing to adjust anymore */\n\n            if (nBits > desired_rate) {\n                /* increase Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_DOWN)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_UP;\n                step = CurrentStep;\n            } else {\n                /* decrease Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_UP)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_DOWN;\n                step = -CurrentStep;\n            }\n            cod_info.global_gain += step;\n            if (cod_info.global_gain < 0) {\n                cod_info.global_gain = 0;\n                flagGoneOver = true;\n            }\n            if (cod_info.global_gain > 255) {\n                cod_info.global_gain = 255;\n                flagGoneOver = true;\n            }\n        }\n\n        assert$21(cod_info.global_gain >= 0);\n        assert$21(cod_info.global_gain < 256);\n\n        while (nBits > desired_rate && cod_info.global_gain < 255) {\n            cod_info.global_gain++;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n        }\n        gfc.CurrentStep[ch] = (start - cod_info.global_gain >= 4) ? 4 : 2;\n        gfc.OldValue[ch] = cod_info.global_gain;\n        cod_info.part2_3_length = nBits;\n        return nBits;\n    }\n\n    this.trancate_smallspectrums = function (gfc, gi, l3_xmin, work) {\n        var distort = new_float$21(L3Side_1.SFBMAX);\n\n        if ((0 == (gfc.substep_shaping & 4) && gi.block_type == Encoder_1.SHORT_TYPE)\n            || (gfc.substep_shaping & 0x80) != 0)\n            return;\n        qupvt.calc_noise(gi, l3_xmin, distort, new CalcNoiseResult_1(), null);\n        for (var j = 0; j < 576; j++) {\n            var xr = 0.0;\n            if (gi.l3_enc[j] != 0)\n                xr = Math.abs(gi.xr[j]);\n            work[j] = xr;\n        }\n\n        var j = 0;\n        var sfb = 8;\n        if (gi.block_type == Encoder_1.SHORT_TYPE)\n            sfb = 6;\n        do {\n            var allowedNoise, trancateThreshold;\n            var nsame, start;\n\n            var width = gi.width[sfb];\n            j += width;\n            if (distort[sfb] >= 1.0)\n                continue;\n\n            Arrays$21.sort(work, j - width, width);\n            if (BitStream.EQ(work[j - 1], 0.0))\n                continue;\n            /* all zero sfb */\n\n            allowedNoise = (1.0 - distort[sfb]) * l3_xmin[sfb];\n            trancateThreshold = 0.0;\n            start = 0;\n            do {\n                var noise;\n                for (nsame = 1; start + nsame < width; nsame++)\n                    if (BitStream.NEQ(work[start + j - width], work[start + j\n                        + nsame - width]))\n                        break;\n\n                noise = work[start + j - width] * work[start + j - width]\n                    * nsame;\n                if (allowedNoise < noise) {\n                    if (start != 0)\n                        trancateThreshold = work[start + j - width - 1];\n                    break;\n                }\n                allowedNoise -= noise;\n                start += nsame;\n            } while (start < width);\n            if (BitStream.EQ(trancateThreshold, 0.0))\n                continue;\n\n            do {\n                if (Math.abs(gi.xr[j - width]) <= trancateThreshold)\n                    gi.l3_enc[j - width] = 0;\n            } while (--width > 0);\n        } while (++sfb < gi.psymax);\n\n        gi.part2_3_length = tk.noquant_count_bits(gfc, gi, null);\n    };\n\n    /**\n     * author/date??\n     *\n     * Function: Returns zero if there is a scalefac which has not been\n     * amplified. Otherwise it returns one.\n     */\n    function loop_break(cod_info) {\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++)\n            if (cod_info.scalefac[sfb]\n                + cod_info.subblock_gain[cod_info.window[sfb]] == 0)\n                return false;\n\n        return true;\n    }\n\n    /* mt 5/99: Function: Improved calc_noise for a single channel */\n\n    function penalties(noise) {\n        return Util$21.FAST_LOG10((0.368 + 0.632 * noise * noise * noise));\n    }\n\n    /**\n     * author/date??\n     *\n     * several different codes to decide which quantization is better\n     */\n    function get_klemm_noise(distort, gi) {\n        var klemm_noise = 1E-37;\n        for (var sfb = 0; sfb < gi.psymax; sfb++)\n            klemm_noise += penalties(distort[sfb]);\n\n        return Math.max(1e-20, klemm_noise);\n    }\n\n    function quant_compare(quant_comp, best, calc, gi, distort) {\n        /**\n         * noise is given in decibels (dB) relative to masking thesholds.<BR>\n         *\n         * over_noise: ??? (the previous comment is fully wrong)<BR>\n         * tot_noise: ??? (the previous comment is fully wrong)<BR>\n         * max_noise: max quantization noise\n         */\n        var better;\n\n        switch (quant_comp) {\n            default:\n            case 9:\n            {\n                if (best.over_count > 0) {\n                    /* there are distorted sfb */\n                    better = calc.over_SSD <= best.over_SSD;\n                    if (calc.over_SSD == best.over_SSD)\n                        better = calc.bits < best.bits;\n                } else {\n                    /* no distorted sfb */\n                    better = ((calc.max_noise < 0) && ((calc.max_noise * 10 + calc.bits) <= (best.max_noise * 10 + best.bits)));\n                }\n                break;\n            }\n\n            case 0:\n                better = calc.over_count < best.over_count\n                    || (calc.over_count == best.over_count && calc.over_noise < best.over_noise)\n                    || (calc.over_count == best.over_count\n                    && BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n\n            case 8:\n                calc.max_noise = get_klemm_noise(distort, gi);\n            //$FALL-THROUGH$\n            case 1:\n                better = calc.max_noise < best.max_noise;\n                break;\n            case 2:\n                better = calc.tot_noise < best.tot_noise;\n                break;\n            case 3:\n                better = (calc.tot_noise < best.tot_noise)\n                    && (calc.max_noise < best.max_noise);\n                break;\n            case 4:\n                better = (calc.max_noise <= 0.0 && best.max_noise > 0.2)\n                    || (calc.max_noise <= 0.0 && best.max_noise < 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise)\n                    || (calc.max_noise <= 0.0 && best.max_noise > 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.05\n                    && best.max_noise > calc.max_noise - 0.1 && calc.tot_noise\n                    + calc.over_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.1\n                    && best.max_noise > calc.max_noise - 0.15 && calc.tot_noise\n                    + calc.over_noise + calc.over_noise < best.tot_noise\n                    + best.over_noise + best.over_noise);\n                break;\n            case 5:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n            case 6:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && (calc.max_noise < best.max_noise || (BitStream\n                        .EQ(calc.max_noise, best.max_noise) && calc.tot_noise <= best.tot_noise)));\n                break;\n            case 7:\n                better = calc.over_count < best.over_count\n                    || calc.over_noise < best.over_noise;\n                break;\n        }\n\n        if (best.over_count == 0) {\n            /*\n             * If no distorted bands, only use this quantization if it is\n             * better, and if it uses less bits. Unfortunately, part2_3_length\n             * is sometimes a poor estimator of the final size at low bitrates.\n             */\n            better = better && calc.bits < best.bits;\n        }\n\n        return better;\n    }\n\n    /**\n     * author/date??\n     *\n     * <PRE>\n     *  Amplify the scalefactor bands that violate the masking threshold.\n     *  See ISO 11172-3 Section C.1.5.4.3.5\n     *\n     *  distort[] = noise/masking\n     *  distort[] > 1   ==> noise is not masked\n     *  distort[] < 1   ==> noise is masked\n     *  max_dist = maximum value of distort[]\n     *\n     *  Three algorithms:\n     *  noise_shaping_amp\n     *        0             Amplify all bands with distort[]>1.\n     *\n     *        1             Amplify all bands with distort[] >= max_dist^(.5);\n     *                     ( 50% in the db scale)\n     *\n     *        2             Amplify first band with distort[] >= max_dist;\n     *\n     *\n     *  For algorithms 0 and 1, if max_dist < 1, then amplify all bands\n     *  with distort[] >= .95*max_dist.  This is to make sure we always\n     *  amplify at least one band.\n     * </PRE>\n     */\n    function amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n        var ifqstep34;\n\n        if (cod_info.scalefac_scale == 0) {\n            ifqstep34 = 1.29683955465100964055;\n            /* 2**(.75*.5) */\n        } else {\n            ifqstep34 = 1.68179283050742922612;\n            /* 2**(.75*1) */\n        }\n\n        /* compute maximum value of distort[] */\n        var trigger = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            if (trigger < distort[sfb])\n                trigger = distort[sfb];\n        }\n\n        var noise_shaping_amp = gfc.noise_shaping_amp;\n        if (noise_shaping_amp == 3) {\n            if (bRefine)\n                noise_shaping_amp = 2;\n            else\n                noise_shaping_amp = 1;\n        }\n        switch (noise_shaping_amp) {\n            case 2:\n                /* amplify exactly 1 band */\n                break;\n\n            case 1:\n                /* amplify bands within 50% of max (on db scale) */\n                if (trigger > 1.0)\n                    trigger = Math.pow(trigger, .5);\n                else\n                    trigger *= .95;\n                break;\n\n            case 0:\n            default:\n                /* ISO algorithm. amplify all bands with distort>1 */\n                if (trigger > 1.0)\n                    trigger = 1.0;\n                else\n                    trigger *= .95;\n                break;\n        }\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var l;\n            j += width;\n            if (distort[sfb] < trigger)\n                continue;\n\n            if ((gfc.substep_shaping & 2) != 0) {\n                gfc.pseudohalf[sfb] = (0 == gfc.pseudohalf[sfb]) ? 1 : 0;\n                if (0 == gfc.pseudohalf[sfb] && gfc.noise_shaping_amp == 2)\n                    return;\n            }\n            cod_info.scalefac[sfb]++;\n            for (l = -width; l < 0; l++) {\n                xrpow[j + l] *= ifqstep34;\n                if (xrpow[j + l] > cod_info.xrpow_max)\n                    cod_info.xrpow_max = xrpow[j + l];\n            }\n\n            if (gfc.noise_shaping_amp == 2)\n                return;\n        }\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * turns on scalefac scale and adjusts scalefactors\n     */\n    function inc_scalefac_scale(cod_info, xrpow) {\n        var ifqstep34 = 1.29683955465100964055;\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var s = cod_info.scalefac[sfb];\n            if (cod_info.preflag != 0)\n                s += qupvt.pretab[sfb];\n            j += width;\n            if ((s & 1) != 0) {\n                s++;\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= ifqstep34;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n            cod_info.scalefac[sfb] = s >> 1;\n        }\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 1;\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * increases the subblock gain and adjusts scalefactors\n     */\n    function inc_subblock_gain(gfc, cod_info, xrpow) {\n        var sfb;\n        var scalefac = cod_info.scalefac;\n\n        /* subbloc_gain can't do anything in the long block region */\n        for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\n            if (scalefac[sfb] >= 16)\n                return true;\n        }\n\n        for (var window = 0; window < 3; window++) {\n            var s1 = 0;\n            var s2 = 0;\n\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbdivide; sfb += 3) {\n                if (s1 < scalefac[sfb])\n                    s1 = scalefac[sfb];\n            }\n            for (; sfb < cod_info.sfbmax; sfb += 3) {\n                if (s2 < scalefac[sfb])\n                    s2 = scalefac[sfb];\n            }\n\n            if (s1 < 16 && s2 < 8)\n                continue;\n\n            if (cod_info.subblock_gain[window] >= 7)\n                return true;\n\n            /*\n             * even though there is no scalefactor for sfb12 subblock gain\n             * affects upper frequencies too, that's why we have to go up to\n             * SBMAX_s\n             */\n            cod_info.subblock_gain[window]++;\n            var j = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbmax; sfb += 3) {\n                var amp;\n                var width = cod_info.width[sfb];\n                var s = scalefac[sfb];\n                assert$21(s >= 0);\n                s = s - (4 >> cod_info.scalefac_scale);\n                if (s >= 0) {\n                    scalefac[sfb] = s;\n                    j += width * 3;\n                    continue;\n                }\n\n                scalefac[sfb] = 0;\n                {\n                    var gain = 210 + (s << (cod_info.scalefac_scale + 1));\n                    amp = qupvt.IPOW20(gain);\n                }\n                j += width * (window + 1);\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n                j += width * (3 - window - 1);\n            }\n\n            {\n                var amp = qupvt.IPOW20(202);\n                j += cod_info.width[sfb] * (window + 1);\n                for (var l = -cod_info.width[sfb]; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * <PRE>\n     *  Takehiro Tominaga /date??\n     *  Robert Hegemann 2000-09-06: made a function of it\n     *\n     *  amplifies scalefactor bands,\n     *   - if all are already amplified returns 0\n     *   - if some bands are amplified too much:\n     *      * try to increase scalefac_scale\n     *      * if already scalefac_scale was set\n     *          try on short blocks to increase subblock gain\n     * </PRE>\n     */\n    function balance_noise(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n\n        amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine);\n\n        /*\n         * check to make sure we have not amplified too much loop_break returns\n         * 0 if there is an unamplified scalefac scale_bitcount returns 0 if no\n         * scalefactors are too large\n         */\n\n        var status = loop_break(cod_info);\n\n        if (status)\n            return false;\n        /* all bands amplified */\n\n        /*\n         * not all scalefactors have been amplified. so these scalefacs are\n         * possibly valid. encode them:\n         */\n        if (gfc.mode_gr == 2)\n            status = tk.scale_bitcount(cod_info);\n        else\n            status = tk.scale_bitcount_lsf(gfc, cod_info);\n\n        if (!status)\n            return true;\n        /* amplified some bands not exceeding limits */\n\n        /*\n         * some scalefactors are too large. lets try setting scalefac_scale=1\n         */\n        if (gfc.noise_shaping > 1) {\n            Arrays$21.fill(gfc.pseudohalf, 0);\n            if (0 == cod_info.scalefac_scale) {\n                inc_scalefac_scale(cod_info, xrpow);\n                status = false;\n            } else {\n                if (cod_info.block_type == Encoder_1.SHORT_TYPE\n                    && gfc.subblock_gain > 0) {\n                    status = (inc_subblock_gain(gfc, cod_info, xrpow) || loop_break(cod_info));\n                }\n            }\n        }\n\n        if (!status) {\n            if (gfc.mode_gr == 2)\n                status = tk.scale_bitcount(cod_info);\n            else\n                status = tk.scale_bitcount_lsf(gfc, cod_info);\n        }\n        return !status;\n    }\n\n    /**\n     * <PRE>\n     *  Function: The outer iteration loop controls the masking conditions\n     *  of all scalefactorbands. It computes the best scalefac and\n     *  global gain. This module calls the inner iteration loop\n     *\n     *  mt 5/99 completely rewritten to allow for bit reservoir control,\n     *  mid/side channels with L/R or mid/side masking thresholds,\n     *  and chooses best quantization instead of last quantization when\n     *  no distortion free quantization can be found.\n     *\n     *  added VBR support mt 5/99\n     *\n     *  some code shuffle rh 9/00\n     * </PRE>\n     *\n     * @param l3_xmin\n     *            allowed distortion\n     * @param xrpow\n     *            coloured magnitudes of spectral\n     * @param targ_bits\n     *            maximum allowed bits\n     */\n    this.outer_loop = function (gfp, cod_info, l3_xmin, xrpow, ch, targ_bits) {\n        var gfc = gfp.internal_flags;\n        var cod_info_w = new GrInfo_1();\n        var save_xrpow = new_float$21(576);\n        var distort = new_float$21(L3Side_1.SFBMAX);\n        var best_noise_info = new CalcNoiseResult_1();\n        var better;\n        var prev_noise = new CalcNoiseData_1();\n        var best_part2_3_length = 9999999;\n        var bEndOfSearch = false;\n        var bRefine = false;\n        var best_ggain_pass1 = 0;\n\n        bin_search_StepSize(gfc, cod_info, targ_bits, ch, xrpow);\n\n        if (0 == gfc.noise_shaping)\n        /* fast mode, no noise shaping, we are ready */\n            return 100;\n        /* default noise_info.over_count */\n\n        /* compute the distortion in this quantization */\n        /* coefficients and thresholds both l/r (or both mid/side) */\n        qupvt.calc_noise(cod_info, l3_xmin, distort, best_noise_info,\n            prev_noise);\n        best_noise_info.bits = cod_info.part2_3_length;\n\n        cod_info_w.assign(cod_info);\n        var age = 0;\n        System$21.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n\n        while (!bEndOfSearch) {\n            /* BEGIN MAIN LOOP */\n            do {\n                var noise_info = new CalcNoiseResult_1();\n                var search_limit;\n                var maxggain = 255;\n\n                /*\n                 * When quantization with no distorted bands is found, allow up\n                 * to X new unsuccesful tries in serial. This gives us more\n                 * possibilities for different quant_compare modes. Much more\n                 * than 3 makes not a big difference, it is only slower.\n                 */\n\n                if ((gfc.substep_shaping & 2) != 0) {\n                    search_limit = 20;\n                } else {\n                    search_limit = 3;\n                }\n\n                /*\n                 * Check if the last scalefactor band is distorted. in VBR mode\n                 * we can't get rid of the distortion, so quit now and VBR mode\n                 * will try again with more bits. (makes a 10% speed increase,\n                 * the files I tested were binary identical, 2000/05/20 Robert\n                 * Hegemann) distort[] > 1 means noise > allowed noise\n                 */\n                if (gfc.sfb21_extra) {\n                    if (distort[cod_info_w.sfbmax] > 1.0)\n                        break;\n                    if (cod_info_w.block_type == Encoder_1.SHORT_TYPE\n                        && (distort[cod_info_w.sfbmax + 1] > 1.0 || distort[cod_info_w.sfbmax + 2] > 1.0))\n                        break;\n                }\n\n                /* try a new scalefactor conbination on cod_info_w */\n                if (!balance_noise(gfp, cod_info_w, distort, xrpow, bRefine))\n                    break;\n                if (cod_info_w.scalefac_scale != 0)\n                    maxggain = 254;\n\n                /*\n                 * inner_loop starts with the initial quantization step computed\n                 * above and slowly increases until the bits < huff_bits. Thus\n                 * it is important not to start with too large of an inital\n                 * quantization step. Too small is ok, but inner_loop will take\n                 * longer\n                 */\n                var huff_bits = targ_bits - cod_info_w.part2_length;\n                if (huff_bits <= 0)\n                    break;\n\n                /*\n                 * increase quantizer stepsize until needed bits are below\n                 * maximum\n                 */\n                while ((cod_info_w.part2_3_length = tk.count_bits(gfc, xrpow,\n                    cod_info_w, prev_noise)) > huff_bits\n                && cod_info_w.global_gain <= maxggain)\n                    cod_info_w.global_gain++;\n\n                if (cod_info_w.global_gain > maxggain)\n                    break;\n\n                if (best_noise_info.over_count == 0) {\n\n                    while ((cod_info_w.part2_3_length = tk.count_bits(gfc,\n                        xrpow, cod_info_w, prev_noise)) > best_part2_3_length\n                    && cod_info_w.global_gain <= maxggain)\n                        cod_info_w.global_gain++;\n\n                    if (cod_info_w.global_gain > maxggain)\n                        break;\n                }\n\n                /* compute the distortion in this quantization */\n                qupvt.calc_noise(cod_info_w, l3_xmin, distort, noise_info,\n                    prev_noise);\n                noise_info.bits = cod_info_w.part2_3_length;\n\n                /*\n                 * check if this quantization is better than our saved\n                 * quantization\n                 */\n                if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    better = gfp.quant_comp;\n                } else\n                    better = gfp.quant_comp_short;\n\n                better = quant_compare(better, best_noise_info, noise_info,\n                    cod_info_w, distort) ? 1 : 0;\n\n                /* save data so we can restore this quantization later */\n                if (better != 0) {\n                    best_part2_3_length = cod_info.part2_3_length;\n                    best_noise_info = noise_info;\n                    cod_info.assign(cod_info_w);\n                    age = 0;\n                    /* save data so we can restore this quantization later */\n                    /* store for later reuse */\n                    System$21.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n                } else {\n                    /* early stop? */\n                    if (gfc.full_outer_loop == 0) {\n                        if (++age > search_limit\n                            && best_noise_info.over_count == 0)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3) && bRefine && age > 30)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3)\n                            && bRefine\n                            && (cod_info_w.global_gain - best_ggain_pass1) > 15)\n                            break;\n                    }\n                }\n            } while ((cod_info_w.global_gain + cod_info_w.scalefac_scale) < 255);\n\n            if (gfc.noise_shaping_amp == 3) {\n                if (!bRefine) {\n                    /* refine search */\n                    cod_info_w.assign(cod_info);\n                    System$21.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n                    age = 0;\n                    best_ggain_pass1 = cod_info_w.global_gain;\n\n                    bRefine = true;\n                } else {\n                    /* search already refined, stop */\n                    bEndOfSearch = true;\n                }\n\n            } else {\n                bEndOfSearch = true;\n            }\n        }\n\n        assert$21((cod_info.global_gain + cod_info.scalefac_scale) <= 255);\n        /*\n         * finish up\n         */\n        if (gfp.VBR == VbrMode$21.vbr_rh || gfp.VBR == VbrMode$21.vbr_mtrh)\n        /* restore for reuse on next try */\n            System$21.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n        /*\n         * do the 'substep shaping'\n         */\n        else if ((gfc.substep_shaping & 1) != 0)\n            trancate_smallspectrums(gfc, cod_info, l3_xmin, xrpow);\n\n        return best_noise_info.over_count;\n    };\n\n    /**\n     * Robert Hegemann 2000-09-06\n     *\n     * update reservoir status after FINAL quantization/bitrate\n     */\n    this.iteration_finish_one = function (gfc, gr, ch) {\n        var l3_side = gfc.l3_side;\n        var cod_info = l3_side.tt[gr][ch];\n\n        /*\n         * try some better scalefac storage\n         */\n        tk.best_scalefac_store(gfc, gr, ch, l3_side);\n\n        /*\n         * best huffman_divide may save some bits too\n         */\n        if (gfc.use_best_huffman == 1)\n            tk.best_huffman_divide(gfc, cod_info);\n\n        /*\n         * update reservoir status after FINAL quantization/bitrate\n         */\n        rv.ResvAdjust(gfc, cod_info);\n    };\n\n    /**\n     *\n     * 2000-09-04 Robert Hegemann\n     *\n     * @param l3_xmin\n     *            allowed distortion of the scalefactor\n     * @param xrpow\n     *            coloured magnitudes of spectral values\n     */\n    this.VBR_encode_granule = function (gfp, cod_info, l3_xmin, xrpow, ch, min_bits, max_bits) {\n        var gfc = gfp.internal_flags;\n        var bst_cod_info = new GrInfo_1();\n        var bst_xrpow = new_float$21(576);\n        var Max_bits = max_bits;\n        var real_bits = max_bits + 1;\n        var this_bits = (max_bits + min_bits) / 2;\n        var dbits, over, found = 0;\n        var sfb21_extra = gfc.sfb21_extra;\n\n        assert$21(Max_bits <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n        Arrays$21.fill(bst_cod_info.l3_enc, 0);\n\n        /*\n         * search within round about 40 bits of optimal\n         */\n        do {\n            assert$21(this_bits >= min_bits);\n            assert$21(this_bits <= max_bits);\n            assert$21(min_bits <= max_bits);\n\n            if (this_bits > Max_bits - 42)\n                gfc.sfb21_extra = false;\n            else\n                gfc.sfb21_extra = sfb21_extra;\n\n            over = outer_loop(gfp, cod_info, l3_xmin, xrpow, ch, this_bits);\n\n            /*\n             * is quantization as good as we are looking for ? in this case: is\n             * no scalefactor band distorted?\n             */\n            if (over <= 0) {\n                found = 1;\n                /*\n                 * now we know it can be done with \"real_bits\" and maybe we can\n                 * skip some iterations\n                 */\n                real_bits = cod_info.part2_3_length;\n\n                /*\n                 * store best quantization so far\n                 */\n                bst_cod_info.assign(cod_info);\n                System$21.arraycopy(xrpow, 0, bst_xrpow, 0, 576);\n\n                /*\n                 * try with fewer bits\n                 */\n                max_bits = real_bits - 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n            } else {\n                /*\n                 * try with more bits\n                 */\n                min_bits = this_bits + 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n\n                if (found != 0) {\n                    found = 2;\n                    /*\n                     * start again with best quantization so far\n                     */\n                    cod_info.assign(bst_cod_info);\n                    System$21.arraycopy(bst_xrpow, 0, xrpow, 0, 576);\n                }\n            }\n        } while (dbits > 12);\n\n        gfc.sfb21_extra = sfb21_extra;\n\n        /*\n         * found=0 => nothing found, use last one found=1 => we just found the\n         * best and left the loop found=2 => we restored a good one and have now\n         * l3_enc to restore too\n         */\n        if (found == 2) {\n            System$21.arraycopy(bst_cod_info.l3_enc, 0, cod_info.l3_enc, 0, 576);\n        }\n        assert$21(cod_info.part2_3_length <= Max_bits);\n    };\n\n    /**\n     * Robert Hegemann 2000-09-05\n     *\n     * calculates * how many bits are available for analog silent granules * how\n     * many bits to use for the lowest allowed bitrate * how many bits each\n     * bitrate would provide\n     */\n    this.get_framebits = function (gfp, frameBits) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * always use at least this many bits per granule per channel unless we\n         * detect analog silence, see below\n         */\n        gfc.bitrate_index = gfc.VBR_min_bitrate;\n        var bitsPerFrame = bs.getframebits(gfp);\n\n        /*\n         * bits for analog silence\n         */\n        gfc.bitrate_index = 1;\n        bitsPerFrame = bs.getframebits(gfp);\n\n        for (var i = 1; i <= gfc.VBR_max_bitrate; i++) {\n            gfc.bitrate_index = i;\n            var mb = new MeanBits(bitsPerFrame);\n            frameBits[i] = rv.ResvFrameBegin(gfp, mb);\n            bitsPerFrame = mb.bits;\n        }\n    };\n\n    /* RH: this one needs to be overhauled sometime */\n\n    /**\n     * <PRE>\n     *  2000-09-04 Robert Hegemann\n     *\n     *  * converts LR to MS coding when necessary\n     *  * calculates allowed/adjusted quantization noise amounts\n     *  * detects analog silent frames\n     *\n     *  some remarks:\n     *  - lower masking depending on Quality setting\n     *  - quality control together with adjusted ATH MDCT scaling\n     *    on lower quality setting allocate more noise from\n     *    ATH masking, and on higher quality setting allocate\n     *    less noise from ATH masking.\n     *  - experiments show that going more than 2dB over GPSYCHO's\n     *    limits ends up in very annoying artefacts\n     * </PRE>\n     */\n    this.VBR_old_prepare = function (gfp, pe, ms_ener_ratio, ratio, l3_xmin, frameBits, min_bits,\n                                     max_bits, bands) {\n        var gfc = gfp.internal_flags;\n\n        var masking_lower_db, adjust = 0.0;\n        var analog_silence = 1;\n        var bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var avg = rv.ResvFrameBegin(gfp, new MeanBits(0)) / gfc.mode_gr;\n\n        get_framebits(gfp, frameBits);\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            var mxb = qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n                qupvt.reduce_side(max_bits[gr], ms_ener_ratio[gr], avg, mxb);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    adjust = 1.28 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.05;\n                    masking_lower_db = gfc.PSY.mask_adjust - adjust;\n                } else {\n                    adjust = 2.56 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.14;\n                    masking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n                }\n                gfc.masking_lower = Math.pow(10.0,\n                    masking_lower_db * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                bands[gr][ch] = qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                    l3_xmin[gr][ch]);\n                if (bands[gr][ch] != 0)\n                    analog_silence = 0;\n\n                min_bits[gr][ch] = 126;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > frameBits[gfc.VBR_max_bitrate]) {\n                    max_bits[gr][ch] *= frameBits[gfc.VBR_max_bitrate];\n                    max_bits[gr][ch] /= bits;\n                }\n                if (min_bits[gr][ch] > max_bits[gr][ch])\n                    min_bits[gr][ch] = max_bits[gr][ch];\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    this.bitpressure_strategy = function (gfc, l3_xmin, min_bits, max_bits) {\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = gfc.l3_side.tt[gr][ch];\n                var pxmin = l3_xmin[gr][ch];\n                var pxminPos = 0;\n                for (var sfb = 0; sfb < gi.psy_lmax; sfb++)\n                    pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                        / Encoder_1.SBMAX_l / Encoder_1.SBMAX_l;\n\n                if (gi.block_type == Encoder_1.SHORT_TYPE) {\n                    for (var sfb = gi.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder_1.SBMAX_s / Encoder_1.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder_1.SBMAX_s / Encoder_1.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder_1.SBMAX_s / Encoder_1.SBMAX_s;\n                    }\n                }\n                max_bits[gr][ch] = 0 | Math.max(min_bits[gr][ch],\n                        0.9 * max_bits[gr][ch]);\n            }\n        }\n    };\n\n    this.VBR_new_prepare = function (gfp, pe, ratio, l3_xmin, frameBits, max_bits) {\n        var gfc = gfp.internal_flags;\n\n        var analog_silence = 1;\n        var avg = 0, bits = 0;\n        var maximum_framebits;\n\n        if (!gfp.free_format) {\n            gfc.bitrate_index = gfc.VBR_max_bitrate;\n\n            var mb = new MeanBits(avg);\n            rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n\n            get_framebits(gfp, frameBits);\n            maximum_framebits = frameBits[gfc.VBR_max_bitrate];\n        } else {\n            gfc.bitrate_index = 0;\n            var mb = new MeanBits(avg);\n            maximum_framebits = rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n            frameBits[0] = maximum_framebits;\n        }\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                gfc.masking_lower = Math.pow(10.0,\n                    gfc.PSY.mask_adjust * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                if (0 != qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                        l3_xmin[gr][ch]))\n                    analog_silence = 0;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > maximum_framebits) {\n                    max_bits[gr][ch] *= maximum_framebits;\n                    max_bits[gr][ch] /= bits;\n                }\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    /**\n     * calculates target bits for ABR encoding\n     *\n     * mt 2000/05/31\n     */\n    this.calc_target_bits = function (gfp, pe, ms_ener_ratio, targ_bits, analog_silence_bits, max_frame_bits) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var res_factor;\n        var gr, ch, totbits, mean_bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var mb = new MeanBits(mean_bits);\n        max_frame_bits[0] = rv.ResvFrameBegin(gfp, mb);\n        mean_bits = mb.bits;\n\n        gfc.bitrate_index = 1;\n        mean_bits = bs.getframebits(gfp) - gfc.sideinfo_len * 8;\n        analog_silence_bits[0] = mean_bits / (gfc.mode_gr * gfc.channels_out);\n\n        mean_bits = gfp.VBR_mean_bitrate_kbps * gfp.framesize * 1000;\n        if ((gfc.substep_shaping & 1) != 0)\n            mean_bits *= 1.09;\n        mean_bits /= gfp.out_samplerate;\n        mean_bits -= gfc.sideinfo_len * 8;\n        mean_bits /= (gfc.mode_gr * gfc.channels_out);\n\n        /**\n         * <PRE>\n         *           res_factor is the percentage of the target bitrate that should\n         *           be used on average.  the remaining bits are added to the\n         *           bitreservoir and used for difficult to encode frames.\n         *\n         *           Since we are tracking the average bitrate, we should adjust\n         *           res_factor \"on the fly\", increasing it if the average bitrate\n         *           is greater than the requested bitrate, and decreasing it\n         *           otherwise.  Reasonable ranges are from .9 to 1.0\n         *\n         *           Until we get the above suggestion working, we use the following\n         *           tuning:\n         *           compression ratio    res_factor\n         *           5.5  (256kbps)         1.0      no need for bitreservoir\n         *           11   (128kbps)         .93      7% held for reservoir\n         *\n         *           with linear interpolation for other values.\n         * </PRE>\n         */\n        res_factor = .93 + .07 * (11.0 - gfp.compression_ratio)\n            / (11.0 - 5.5);\n        if (res_factor < .90)\n            res_factor = .90;\n        if (res_factor > 1.00)\n            res_factor = 1.00;\n\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                if (pe[gr][ch] > 700) {\n                    var add_bits = (int)((pe[gr][ch] - 700) / 1.4);\n\n                    var cod_info = l3_side.tt[gr][ch];\n                    targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                    /* short blocks use a little extra, no matter what the pe */\n                    if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n                        if (add_bits < mean_bits / 2)\n                            add_bits = mean_bits / 2;\n                    }\n                    /* at most increase bits by 1.5*average */\n                    if (add_bits > mean_bits * 3 / 2)\n                        add_bits = mean_bits * 3 / 2;\n                    else if (add_bits < 0)\n                        add_bits = 0;\n\n                    targ_bits[gr][ch] += add_bits;\n                }\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL) {\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                }\n                sum += targ_bits[gr][ch];\n            }\n            /* for ch */\n            if (sum > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n                for (ch = 0; ch < gfc.channels_out; ++ch) {\n                    targ_bits[gr][ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\n                    targ_bits[gr][ch] /= sum;\n                }\n            }\n        }\n        /* for gr */\n\n        if (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR)\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                qupvt.reduce_side(targ_bits[gr], ms_ener_ratio[gr], mean_bits\n                    * gfc.channels_out,\n                    LameInternalFlags.MAX_BITS_PER_GRANULE);\n            }\n\n        /*\n         * sum target bits\n         */\n        totbits = 0;\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL)\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                totbits += targ_bits[gr][ch];\n            }\n        }\n\n        /*\n         * repartion target bits if needed\n         */\n        if (totbits > max_frame_bits[0]) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    targ_bits[gr][ch] *= max_frame_bits[0];\n                    targ_bits[gr][ch] /= totbits;\n                }\n            }\n        }\n    };\n\n}\n\nvar Quantize_1 = Quantize$1;\n\n/*\n *      bit reservoir source file\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Reservoir.java,v 1.9 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n/**\n * ResvFrameBegin:<BR>\n * Called (repeatedly) at the beginning of a frame. Updates the maximum size of\n * the reservoir, and checks to make sure main_data_begin was set properly by\n * the formatter<BR>\n * Background information:\n * \n * This is the original text from the ISO standard. Because of sooo many bugs\n * and irritations correcting comments are added in brackets []. A '^W' means\n * you should remove the last word.\n * \n * <PRE>\n *  1. The following rule can be used to calculate the maximum\n *     number of bits used for one granule [^W frame]:<BR>\n *     At the highest possible bitrate of Layer III (320 kbps\n *     per stereo signal [^W^W^W], 48 kHz) the frames must be of\n *     [^W^W^W are designed to have] constant length, i.e.\n *     one buffer [^W^W the frame] length is:<BR>\n * \n *         320 kbps * 1152/48 kHz = 7680 bit = 960 byte\n * \n *     This value is used as the maximum buffer per channel [^W^W] at\n *     lower bitrates [than 320 kbps]. At 64 kbps mono or 128 kbps\n *     stereo the main granule length is 64 kbps * 576/48 kHz = 768 bit\n *     [per granule and channel] at 48 kHz sampling frequency.\n *     This means that there is a maximum deviation (short time buffer\n *     [= reservoir]) of 7680 - 2*2*768 = 4608 bits is allowed at 64 kbps.\n *     The actual deviation is equal to the number of bytes [with the\n *     meaning of octets] denoted by the main_data_end offset pointer.\n *     The actual maximum deviation is (2^9-1)*8 bit = 4088 bits\n *     [for MPEG-1 and (2^8-1)*8 bit for MPEG-2, both are hard limits].\n *     ... The xchange of buffer bits between the left and right channel\n *     is allowed without restrictions [exception: dual channel].\n *     Because of the [constructed] constraint on the buffer size\n *     main_data_end is always set to 0 in the case of bit_rate_index==14,\n *     i.e. data rate 320 kbps per stereo signal [^W^W^W]. In this case\n *     all data are allocated between adjacent header [^W sync] words\n *     [, i.e. there is no buffering at all].\n * </PRE>\n */\n\n\nvar assert$23 = common.assert;\n\nfunction Reservoir$1() {\n\tvar bs;\n\n\tthis.setModules  = function(_bs) {\n\t\tbs = _bs;\n\t};\n\n\tthis.ResvFrameBegin = function(gfp, mean_bits) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar maxmp3buf;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar frameLength = bs.getframebits(gfp);\n\t\tmean_bits.bits = (frameLength - gfc.sideinfo_len * 8) / gfc.mode_gr;\n\n\t\t/**\n\t\t * <PRE>\n\t\t *  Meaning of the variables:\n\t\t *      resvLimit: (0, 8, ..., 8*255 (MPEG-2), 8*511 (MPEG-1))\n\t\t *          Number of bits can be stored in previous frame(s) due to\n\t\t *          counter size constaints\n\t\t *      maxmp3buf: ( ??? ... 8*1951 (MPEG-1 and 2), 8*2047 (MPEG-2.5))\n\t\t *          Number of bits allowed to encode one frame (you can take 8*511 bit\n\t\t *          from the bit reservoir and at most 8*1440 bit from the current\n\t\t *          frame (320 kbps, 32 kHz), so 8*1951 bit is the largest possible\n\t\t *          value for MPEG-1 and -2)\n\t\t * \n\t\t *          maximum allowed granule/channel size times 4 = 8*2047 bits.,\n\t\t *          so this is the absolute maximum supported by the format.\n\t\t * \n\t\t * \n\t\t *      fullFrameBits:  maximum number of bits available for encoding\n\t\t *                      the current frame.\n\t\t * \n\t\t *      mean_bits:      target number of bits per granule.\n\t\t * \n\t\t *      frameLength:\n\t\t * \n\t\t *      gfc.ResvMax:   maximum allowed reservoir\n\t\t * \n\t\t *      gfc.ResvSize:  current reservoir size\n\t\t * \n\t\t *      l3_side.resvDrain_pre:\n\t\t *         ancillary data to be added to previous frame:\n\t\t *         (only usefull in VBR modes if it is possible to have\n\t\t *         maxmp3buf < fullFrameBits)).  Currently disabled,\n\t\t *         see #define NEW_DRAIN\n\t\t *         2010-02-13: RH now enabled, it seems to be needed for CBR too,\n\t\t *                     as there exists one example, where the FhG decoder\n\t\t *                     can't decode a -b320 CBR file anymore.\n\t\t * \n\t\t *      l3_side.resvDrain_post:\n\t\t *         ancillary data to be added to this frame:\n\t\t * \n\t\t * </PRE>\n\t\t */\n\n\t\t/* main_data_begin has 9 bits in MPEG-1, 8 bits MPEG-2 */\n\t\tvar resvLimit = (8 * 256) * gfc.mode_gr - 8;\n\n\t\t/*\n\t\t * maximum allowed frame size. dont use more than this number of bits,\n\t\t * even if the frame has the space for them:\n\t\t */\n\t\tif (gfp.brate > 320) {\n\t\t\t/* in freeformat the buffer is constant */\n\t\t\tmaxmp3buf = 8 * ((int) ((gfp.brate * 1000)\n\t\t\t\t\t/ (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t} else {\n\t\t\t/*\n\t\t\t * all mp3 decoders should have enough buffer to handle this value:\n\t\t\t * size of a 320kbps 32kHz frame\n\t\t\t */\n\t\t\tmaxmp3buf = 8 * 1440;\n\n\t\t\t/*\n\t\t\t * Bouvigne suggests this more lax interpretation of the ISO doc\n\t\t\t * instead of using 8*960.\n\t\t\t */\n\n\t\t\tif (gfp.strict_ISO) {\n\t\t\t\tmaxmp3buf = 8 * ((int) (320000 / (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t\t}\n\t\t}\n\n\t\tgfc.ResvMax = maxmp3buf - frameLength;\n\t\tif (gfc.ResvMax > resvLimit)\n\t\t\tgfc.ResvMax = resvLimit;\n\t\tif (gfc.ResvMax < 0 || gfp.disable_reservoir)\n\t\t\tgfc.ResvMax = 0;\n\n\t\tvar fullFrameBits = mean_bits.bits * gfc.mode_gr\n\t\t\t\t+ Math.min(gfc.ResvSize, gfc.ResvMax);\n\n\t\tif (fullFrameBits > maxmp3buf)\n\t\t\tfullFrameBits = maxmp3buf;\n\n\t\tassert$23 (0 == gfc.ResvMax % 8);\n\t\tassert$23 (gfc.ResvMax >= 0);\n\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t// frame analyzer code\n\t\tif (gfc.pinfo != null) {\n\t\t\t/*\n\t\t\t * expected bits per channel per granule [is this also right for\n\t\t\t * mono/stereo, MPEG-1/2 ?]\n\t\t\t */\n\t\t\tgfc.pinfo.mean_bits = mean_bits.bits / 2;\n\t\t\tgfc.pinfo.resvsize = gfc.ResvSize;\n\t\t}\n\n\t\treturn fullFrameBits;\n\t};\n\n\t/**\n\t * returns targ_bits: target number of bits to use for 1 granule<BR>\n\t * extra_bits: amount extra available from reservoir<BR>\n\t * Mark Taylor 4/99\n\t */\n\tthis.ResvMaxBits = function(gfp, mean_bits, targ_bits, cbr) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar add_bits;\n        var ResvSize = gfc.ResvSize, ResvMax = gfc.ResvMax;\n\n\t\t/* compensate the saved bits used in the 1st granule */\n\t\tif (cbr != 0)\n\t\t\tResvSize += mean_bits;\n\n\t\tif ((gfc.substep_shaping & 1) != 0)\n\t\t\tResvMax *= 0.9;\n\n\t\ttarg_bits.bits = mean_bits;\n\n\t\t/* extra bits if the reservoir is almost full */\n\t\tif (ResvSize * 10 > ResvMax * 9) {\n\t\t\tadd_bits = ResvSize - (ResvMax * 9) / 10;\n\t\t\ttarg_bits.bits += add_bits;\n\t\t\tgfc.substep_shaping |= 0x80;\n\t\t} else {\n\t\t\tadd_bits = 0;\n\t\t\tgfc.substep_shaping &= 0x7f;\n\t\t\t/*\n\t\t\t * build up reservoir. this builds the reservoir a little slower\n\t\t\t * than FhG. It could simple be mean_bits/15, but this was rigged to\n\t\t\t * always produce 100 (the old value) at 128kbs\n\t\t\t */\n\t\t\tif (!gfp.disable_reservoir && 0 == (gfc.substep_shaping & 1))\n\t\t\t\ttarg_bits.bits -= .1 * mean_bits;\n\t\t}\n\n\t\t/* amount from the reservoir we are allowed to use. ISO says 6/10 */\n\t\tvar extra_bits = (ResvSize < (gfc.ResvMax * 6) / 10 ? ResvSize\n\t\t\t\t: (gfc.ResvMax * 6) / 10);\n\t\textra_bits -= add_bits;\n\n\t\tif (extra_bits < 0)\n\t\t\textra_bits = 0;\n\t\treturn extra_bits;\n\t};\n\n\t/**\n\t * Called after a granule's bit allocation. Readjusts the size of the\n\t * reservoir to reflect the granule's usage.\n\t */\n\tthis.ResvAdjust = function(gfc, gi) {\n\t\tgfc.ResvSize -= gi.part2_3_length + gi.part2_length;\n\t};\n\n\t/**\n\t * Called after all granules in a frame have been allocated. Makes sure that\n\t * the reservoir size is within limits, possibly by adding stuffing bits.\n\t */\n\tthis.ResvFrameEnd = function(gfc, mean_bits) {\n\t\tvar over_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tgfc.ResvSize += mean_bits * gfc.mode_gr;\n\t\tvar stuffingBits = 0;\n\t\tl3_side.resvDrain_post = 0;\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t/* we must be byte aligned */\n\t\tif ((over_bits = gfc.ResvSize % 8) != 0)\n\t\t\tstuffingBits += over_bits;\n\n\t\tover_bits = (gfc.ResvSize - stuffingBits) - gfc.ResvMax;\n\t\tif (over_bits > 0) {\n\t\t\tassert$23 (0 == over_bits % 8);\n\t\t\tassert$23 (over_bits >= 0);\n\t\t\tstuffingBits += over_bits;\n\t\t}\n\n\t\t/*\n\t\t * NOTE: enabling the NEW_DRAIN code fixes some problems with FhG\n\t\t * decoder shipped with MS Windows operating systems. Using this, it is\n\t\t * even possible to use Gabriel's lax buffer consideration again, which\n\t\t * assumes, any decoder should have a buffer large enough for a 320 kbps\n\t\t * frame at 32 kHz sample rate.\n\t\t * \n\t\t * old drain code: lame -b320 BlackBird.wav --. does not play with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * new drain code: lame -b320 BlackBird.wav --. plays fine with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * Robert Hegemann, 2010-02-13.\n\t\t */\n\t\t/*\n\t\t * drain as many bits as possible into previous frame ancillary data In\n\t\t * particular, in VBR mode ResvMax may have changed, and we have to make\n\t\t * sure main_data_begin does not create a reservoir bigger than ResvMax\n\t\t * mt 4/00\n\t\t */\n\t\t{\n\t\t\tvar mdb_bytes = Math.min(l3_side.main_data_begin * 8, stuffingBits) / 8;\n\t\t\tl3_side.resvDrain_pre += 8 * mdb_bytes;\n\t\t\tstuffingBits -= 8 * mdb_bytes;\n\t\t\tgfc.ResvSize -= 8 * mdb_bytes;\n\t\t\tl3_side.main_data_begin -= mdb_bytes;\n\t\t}\n\t\t/* drain the rest into this frames ancillary data */\n\t\tl3_side.resvDrain_post += stuffingBits;\n\t\tgfc.ResvSize -= stuffingBits;\n\t};\n}\n\nvar Reservoir_1 = Reservoir$1;\n\nfunction Version() {\n\n    /**\n     * URL for the LAME website.\n     */\n    var LAME_URL = \"http://www.mp3dev.org/\";\n\n    /**\n     * Major version number.\n     */\n    var LAME_MAJOR_VERSION = 3;\n    /**\n     * Minor version number.\n     */\n    var LAME_MINOR_VERSION = 98;\n    /**\n     * Patch level.\n     */\n    var LAME_PATCH_VERSION = 4;\n\n    /**\n     * Major version number.\n     */\n    var PSY_MAJOR_VERSION = 0;\n    /**\n     * Minor version number.\n     */\n    var PSY_MINOR_VERSION = 93;\n\n    /**\n     * A string which describes the version of LAME.\n     *\n     * @return string which describes the version of LAME\n     */\n    this.getLameVersion = function () {\n        // primary to write screen reports\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    };\n\n    /**\n     * The short version of the LAME version string.\n     *\n     * @return short version of the LAME version string\n     */\n    this.getLameShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        // validation\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    };\n\n    /**\n     * The shortest version of the LAME version string.\n     *\n     * @return shortest version of the LAME version string\n     */\n    this.getLameVeryShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        return (\"LAME\" + LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \"r\");\n    };\n\n    /**\n     * String which describes the version of GPSYCHO\n     *\n     * @return string which describes the version of GPSYCHO\n     */\n    this.getPsyVersion = function () {\n        return (PSY_MAJOR_VERSION + \".\" + PSY_MINOR_VERSION);\n    };\n\n    /**\n     * String which is a URL for the LAME website.\n     *\n     * @return string which is a URL for the LAME website\n     */\n    this.getLameUrl = function () {\n        return LAME_URL;\n    };\n\n    /**\n     * Quite useless for a java version, however we are compatible ;-)\n     *\n     * @return \"32bits\"\n     */\n    this.getLameOsBitness = function () {\n        return \"32bits\";\n    };\n\n}\n\nvar Version_1 = Version;\n\nvar System$22 = common.System;\nvar VbrMode$22 = common.VbrMode;\nvar ShortBlock$22 = common.ShortBlock;\nvar Arrays$22 = common.Arrays;\nvar new_byte$22 = common.new_byte;\nvar assert$24 = common.assert;\n\n/**\n * A Vbr header may be present in the ancillary data field of the first frame of\n * an mp3 bitstream<BR>\n * The Vbr header (optionally) contains\n * <UL>\n * <LI>frames total number of audio frames in the bitstream\n * <LI>bytes total number of bytes in the bitstream\n * <LI>toc table of contents\n * </UL>\n *\n * toc (table of contents) gives seek points for random access.<BR>\n * The ith entry determines the seek point for i-percent duration.<BR>\n * seek point in bytes = (toc[i]/256.0) * total_bitstream_bytes<BR>\n * e.g. half duration seek point = (toc[50]/256.0) * total_bitstream_bytes\n */\nVBRTag.NUMTOCENTRIES = 100;\nVBRTag.MAXFRAMESIZE = 2880;\n\nfunction VBRTag() {\n\n    var lame;\n    var bs;\n    var v;\n\n    this.setModules = function (_lame, _bs, _v) {\n        lame = _lame;\n        bs = _bs;\n        v = _v;\n    };\n\n    var FRAMES_FLAG = 0x0001;\n    var BYTES_FLAG = 0x0002;\n    var TOC_FLAG = 0x0004;\n    var VBR_SCALE_FLAG = 0x0008;\n\n    var NUMTOCENTRIES = VBRTag.NUMTOCENTRIES;\n\n    /**\n     * (0xB40) the max freeformat 640 32kHz framesize.\n     */\n    var MAXFRAMESIZE = VBRTag.MAXFRAMESIZE;\n\n    /**\n     * <PRE>\n     *    4 bytes for Header Tag\n     *    4 bytes for Header Flags\n     *  100 bytes for entry (toc)\n     *    4 bytes for frame size\n     *    4 bytes for stream size\n     *    4 bytes for VBR scale. a VBR quality indicator: 0=best 100=worst\n     *   20 bytes for LAME tag.  for example, \"LAME3.12 (beta 6)\"\n     * ___________\n     *  140 bytes\n     * </PRE>\n     */\n    var VBRHEADERSIZE = (NUMTOCENTRIES + 4 + 4 + 4 + 4 + 4);\n\n    var LAMEHEADERSIZE = (VBRHEADERSIZE + 9 + 1 + 1 + 8\n    + 1 + 1 + 3 + 1 + 1 + 2 + 4 + 2 + 2);\n\n    /**\n     * The size of the Xing header MPEG-1, bit rate in kbps.\n     */\n    var XING_BITRATE1 = 128;\n    /**\n     * The size of the Xing header MPEG-2, bit rate in kbps.\n     */\n    var XING_BITRATE2 = 64;\n    /**\n     * The size of the Xing header MPEG-2.5, bit rate in kbps.\n     */\n    var XING_BITRATE25 = 32;\n\n    /**\n     * ISO-8859-1 charset for byte to string operations.\n     */\n    var ISO_8859_1 = null; //Charset.forName(\"ISO-8859-1\");\n\n    /**\n     * VBR header magic string.\n     */\n    var VBRTag0 = \"Xing\";\n    /**\n     * VBR header magic string (VBR == VBRMode.vbr_off).\n     */\n    var VBRTag1 = \"Info\";\n\n    /**\n     * Lookup table for fast CRC-16 computation. Uses the polynomial\n     * x^16+x^15+x^2+1\n     */\n    var crc16Lookup = [0x0000, 0xC0C1, 0xC181, 0x0140,\n        0xC301, 0x03C0, 0x0280, 0xC241, 0xC601, 0x06C0, 0x0780, 0xC741,\n        0x0500, 0xC5C1, 0xC481, 0x0440, 0xCC01, 0x0CC0, 0x0D80, 0xCD41,\n        0x0F00, 0xCFC1, 0xCE81, 0x0E40, 0x0A00, 0xCAC1, 0xCB81, 0x0B40,\n        0xC901, 0x09C0, 0x0880, 0xC841, 0xD801, 0x18C0, 0x1980, 0xD941,\n        0x1B00, 0xDBC1, 0xDA81, 0x1A40, 0x1E00, 0xDEC1, 0xDF81, 0x1F40,\n        0xDD01, 0x1DC0, 0x1C80, 0xDC41, 0x1400, 0xD4C1, 0xD581, 0x1540,\n        0xD701, 0x17C0, 0x1680, 0xD641, 0xD201, 0x12C0, 0x1380, 0xD341,\n        0x1100, 0xD1C1, 0xD081, 0x1040, 0xF001, 0x30C0, 0x3180, 0xF141,\n        0x3300, 0xF3C1, 0xF281, 0x3240, 0x3600, 0xF6C1, 0xF781, 0x3740,\n        0xF501, 0x35C0, 0x3480, 0xF441, 0x3C00, 0xFCC1, 0xFD81, 0x3D40,\n        0xFF01, 0x3FC0, 0x3E80, 0xFE41, 0xFA01, 0x3AC0, 0x3B80, 0xFB41,\n        0x3900, 0xF9C1, 0xF881, 0x3840, 0x2800, 0xE8C1, 0xE981, 0x2940,\n        0xEB01, 0x2BC0, 0x2A80, 0xEA41, 0xEE01, 0x2EC0, 0x2F80, 0xEF41,\n        0x2D00, 0xEDC1, 0xEC81, 0x2C40, 0xE401, 0x24C0, 0x2580, 0xE541,\n        0x2700, 0xE7C1, 0xE681, 0x2640, 0x2200, 0xE2C1, 0xE381, 0x2340,\n        0xE101, 0x21C0, 0x2080, 0xE041, 0xA001, 0x60C0, 0x6180, 0xA141,\n        0x6300, 0xA3C1, 0xA281, 0x6240, 0x6600, 0xA6C1, 0xA781, 0x6740,\n        0xA501, 0x65C0, 0x6480, 0xA441, 0x6C00, 0xACC1, 0xAD81, 0x6D40,\n        0xAF01, 0x6FC0, 0x6E80, 0xAE41, 0xAA01, 0x6AC0, 0x6B80, 0xAB41,\n        0x6900, 0xA9C1, 0xA881, 0x6840, 0x7800, 0xB8C1, 0xB981, 0x7940,\n        0xBB01, 0x7BC0, 0x7A80, 0xBA41, 0xBE01, 0x7EC0, 0x7F80, 0xBF41,\n        0x7D00, 0xBDC1, 0xBC81, 0x7C40, 0xB401, 0x74C0, 0x7580, 0xB541,\n        0x7700, 0xB7C1, 0xB681, 0x7640, 0x7200, 0xB2C1, 0xB381, 0x7340,\n        0xB101, 0x71C0, 0x7080, 0xB041, 0x5000, 0x90C1, 0x9181, 0x5140,\n        0x9301, 0x53C0, 0x5280, 0x9241, 0x9601, 0x56C0, 0x5780, 0x9741,\n        0x5500, 0x95C1, 0x9481, 0x5440, 0x9C01, 0x5CC0, 0x5D80, 0x9D41,\n        0x5F00, 0x9FC1, 0x9E81, 0x5E40, 0x5A00, 0x9AC1, 0x9B81, 0x5B40,\n        0x9901, 0x59C0, 0x5880, 0x9841, 0x8801, 0x48C0, 0x4980, 0x8941,\n        0x4B00, 0x8BC1, 0x8A81, 0x4A40, 0x4E00, 0x8EC1, 0x8F81, 0x4F40,\n        0x8D01, 0x4DC0, 0x4C80, 0x8C41, 0x4400, 0x84C1, 0x8581, 0x4540,\n        0x8701, 0x47C0, 0x4680, 0x8641, 0x8201, 0x42C0, 0x4380, 0x8341,\n        0x4100, 0x81C1, 0x8081, 0x4040];\n\n    /***********************************************************************\n     * Robert Hegemann 2001-01-17\n     ***********************************************************************/\n\n    function addVbr(v, bitrate) {\n        v.nVbrNumFrames++;\n        v.sum += bitrate;\n        v.seen++;\n\n        if (v.seen < v.want) {\n            return;\n        }\n\n        if (v.pos < v.size) {\n            v.bag[v.pos] = v.sum;\n            v.pos++;\n            v.seen = 0;\n        }\n        if (v.pos == v.size) {\n            for (var i = 1; i < v.size; i += 2) {\n                v.bag[i / 2] = v.bag[i];\n            }\n            v.want *= 2;\n            v.pos /= 2;\n        }\n    }\n\n    function xingSeekTable(v, t) {\n        if (v.pos <= 0)\n            return;\n\n        for (var i = 1; i < NUMTOCENTRIES; ++i) {\n            var j = i / NUMTOCENTRIES, act, sum;\n            var indx = 0 | (Math.floor(j * v.pos));\n            if (indx > v.pos - 1)\n                indx = v.pos - 1;\n            act = v.bag[indx];\n            sum = v.sum;\n            var seek_point = 0 | (256. * act / sum);\n            if (seek_point > 255)\n                seek_point = 255;\n            t[i] = 0xff & seek_point;\n        }\n    }\n\n    /**\n     * Add VBR entry, used to fill the VBR TOC entries.\n     *\n     * @param gfp\n     *            global flags\n     */\n    this.addVbrFrame = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var kbps = Tables.bitrate_table[gfp.version][gfc.bitrate_index];\n        assert$24(gfc.VBR_seek_table.bag != null);\n        addVbr(gfc.VBR_seek_table, kbps);\n    };\n\n    /**\n     * Read big endian integer (4-bytes) from header.\n     *\n     * @param buf\n     *            header containing the integer\n     * @param bufPos\n     *            offset into the header\n     * @return extracted integer\n     */\n    function extractInteger(buf, bufPos) {\n        var x = buf[bufPos + 0] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 1] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 2] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 3] & 0xff;\n        return x;\n    }\n\n    /**\n     * Write big endian integer (4-bytes) in the header.\n     *\n     * @param buf\n     *            header to write the integer into\n     * @param bufPos\n     *            offset into the header\n     * @param value\n     *            integer value to write\n     */\n    function createInteger(buf, bufPos, value) {\n        buf[bufPos + 0] = 0xff & ((value >> 24) & 0xff);\n        buf[bufPos + 1] = 0xff & ((value >> 16) & 0xff);\n        buf[bufPos + 2] = 0xff & ((value >> 8) & 0xff);\n        buf[bufPos + 3] = 0xff & (value & 0xff);\n    }\n\n    /**\n     * Write big endian short (2-bytes) in the header.\n     *\n     * @param buf\n     *            header to write the integer into\n     * @param bufPos\n     *            offset into the header\n     * @param value\n     *            integer value to write\n     */\n    function createShort(buf, bufPos, value) {\n        buf[bufPos + 0] = 0xff & ((value >> 8) & 0xff);\n        buf[bufPos + 1] = 0xff & (value & 0xff);\n    }\n\n    /**\n     * Check for magic strings (Xing/Info).\n     *\n     * @param buf\n     *            header to check\n     * @param bufPos\n     *            header offset to check\n     * @return magic string found\n     */\n    function isVbrTag(buf, bufPos) {\n        return new String(buf, bufPos, VBRTag0.length(), ISO_8859_1)\n                .equals(VBRTag0)\n            || new String(buf, bufPos, VBRTag1.length(), ISO_8859_1)\n                .equals(VBRTag1);\n    }\n\n    function shiftInBitsValue(x, n, v) {\n        return 0xff & ((x << n) | (v & ~(-1 << n)));\n    }\n\n    /**\n     * Construct the MP3 header using the settings of the global flags.\n     *\n     * <img src=\"1000px-Mp3filestructure.svg.png\">\n     *\n     * @param gfp\n     *            global flags\n     * @param buffer\n     *            header\n     */\n    function setLameTagFrameHeader(gfp, buffer) {\n        var gfc = gfp.internal_flags;\n\n        // MP3 Sync Word\n        buffer[0] = shiftInBitsValue(buffer[0], 8, 0xff);\n\n        buffer[1] = shiftInBitsValue(buffer[1], 3, 7);\n        buffer[1] = shiftInBitsValue(buffer[1], 1,\n            (gfp.out_samplerate < 16000) ? 0 : 1);\n        // Version\n        buffer[1] = shiftInBitsValue(buffer[1], 1, gfp.version);\n        // 01 == Layer 3\n        buffer[1] = shiftInBitsValue(buffer[1], 2, 4 - 3);\n        // Error protection\n        buffer[1] = shiftInBitsValue(buffer[1], 1, (!gfp.error_protection) ? 1\n            : 0);\n\n        // Bit rate\n        buffer[2] = shiftInBitsValue(buffer[2], 4, gfc.bitrate_index);\n        // Frequency\n        buffer[2] = shiftInBitsValue(buffer[2], 2, gfc.samplerate_index);\n        // Pad. Bit\n        buffer[2] = shiftInBitsValue(buffer[2], 1, 0);\n        // Priv. Bit\n        buffer[2] = shiftInBitsValue(buffer[2], 1, gfp.extension);\n\n        // Mode\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.mode.ordinal());\n        // Mode extension (Used with Joint Stereo)\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfc.mode_ext);\n        // Copy\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.copyright);\n        // Original\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.original);\n        // Emphasis\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.emphasis);\n\n        /* the default VBR header. 48 kbps layer III, no padding, no crc */\n        /* but sampling freq, mode and copyright/copy protection taken */\n        /* from first valid frame */\n        buffer[0] = 0xff;\n        var abyte = 0xff & (buffer[1] & 0xf1);\n        var bitrate;\n        if (1 == gfp.version) {\n            bitrate = XING_BITRATE1;\n        } else {\n            if (gfp.out_samplerate < 16000)\n                bitrate = XING_BITRATE25;\n            else\n                bitrate = XING_BITRATE2;\n        }\n\n        if (gfp.VBR == VbrMode$22.vbr_off)\n            bitrate = gfp.brate;\n\n        var bbyte;\n        if (gfp.free_format)\n            bbyte = 0x00;\n        else\n            bbyte = 0xff & (16 * lame.BitrateIndex(bitrate, gfp.version,\n                    gfp.out_samplerate));\n\n        /*\n         * Use as much of the info from the real frames in the Xing header:\n         * samplerate, channels, crc, etc...\n         */\n        if (gfp.version == 1) {\n            /* MPEG1 */\n            buffer[1] = 0xff & (abyte | 0x0a);\n            /* was 0x0b; */\n            abyte = 0xff & (buffer[2] & 0x0d);\n            /* AF keep also private bit */\n            buffer[2] = 0xff & (bbyte | abyte);\n            /* 64kbs MPEG1 frame */\n        } else {\n            /* MPEG2 */\n            buffer[1] = 0xff & (abyte | 0x02);\n            /* was 0x03; */\n            abyte = 0xff & (buffer[2] & 0x0d);\n            /* AF keep also private bit */\n            buffer[2] = 0xff & (bbyte | abyte);\n            /* 64kbs MPEG2 frame */\n        }\n    }\n\n    /**\n     * Get VBR tag information\n     *\n     * @param buf\n     *            header to analyze\n     * @param bufPos\n     *            offset into the header\n     * @return VBR tag data\n     */\n    this.getVbrTag = function (buf) {\n        var pTagData = new VBRTagData();\n        var bufPos = 0;\n\n        /* get Vbr header data */\n        pTagData.flags = 0;\n\n        /* get selected MPEG header data */\n        var hId = (buf[bufPos + 1] >> 3) & 1;\n        var hSrIndex = (buf[bufPos + 2] >> 2) & 3;\n        var hMode = (buf[bufPos + 3] >> 6) & 3;\n        var hBitrate = ((buf[bufPos + 2] >> 4) & 0xf);\n        hBitrate = Tables.bitrate_table[hId][hBitrate];\n\n        /* check for FFE syncword */\n        if ((buf[bufPos + 1] >> 4) == 0xE)\n            pTagData.samprate = Tables.samplerate_table[2][hSrIndex];\n        else\n            pTagData.samprate = Tables.samplerate_table[hId][hSrIndex];\n\n        /* determine offset of header */\n        if (hId != 0) {\n            /* mpeg1 */\n            if (hMode != 3)\n                bufPos += (32 + 4);\n            else\n                bufPos += (17 + 4);\n        } else {\n            /* mpeg2 */\n            if (hMode != 3)\n                bufPos += (17 + 4);\n            else\n                bufPos += (9 + 4);\n        }\n\n        if (!isVbrTag(buf, bufPos))\n            return null;\n\n        bufPos += 4;\n\n        pTagData.hId = hId;\n\n        /* get flags */\n        var head_flags = pTagData.flags = extractInteger(buf, bufPos);\n        bufPos += 4;\n\n        if ((head_flags & FRAMES_FLAG) != 0) {\n            pTagData.frames = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        if ((head_flags & BYTES_FLAG) != 0) {\n            pTagData.bytes = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        if ((head_flags & TOC_FLAG) != 0) {\n            if (pTagData.toc != null) {\n                for (var i = 0; i < NUMTOCENTRIES; i++)\n                    pTagData.toc[i] = buf[bufPos + i];\n            }\n            bufPos += NUMTOCENTRIES;\n        }\n\n        pTagData.vbrScale = -1;\n\n        if ((head_flags & VBR_SCALE_FLAG) != 0) {\n            pTagData.vbrScale = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        pTagData.headersize = ((hId + 1) * 72000 * hBitrate)\n            / pTagData.samprate;\n\n        bufPos += 21;\n        var encDelay = buf[bufPos + 0] << 4;\n        encDelay += buf[bufPos + 1] >> 4;\n        var encPadding = (buf[bufPos + 1] & 0x0F) << 8;\n        encPadding += buf[bufPos + 2] & 0xff;\n        /* check for reasonable values (this may be an old Xing header, */\n        /* not a INFO tag) */\n        if (encDelay < 0 || encDelay > 3000)\n            encDelay = -1;\n        if (encPadding < 0 || encPadding > 3000)\n            encPadding = -1;\n\n        pTagData.encDelay = encDelay;\n        pTagData.encPadding = encPadding;\n\n        /* success */\n        return pTagData;\n    };\n\n    /**\n     * Initializes the header\n     *\n     * @param gfp\n     *            global flags\n     */\n    this.InitVbrTag = function (gfp) {\n        var gfc = gfp.internal_flags;\n\n        /**\n         * <PRE>\n         * Xing VBR pretends to be a 48kbs layer III frame.  (at 44.1kHz).\n         * (at 48kHz they use 56kbs since 48kbs frame not big enough for\n         * table of contents)\n         * let's always embed Xing header inside a 64kbs layer III frame.\n         * this gives us enough room for a LAME version string too.\n         * size determined by sampling frequency (MPEG1)\n         * 32kHz:    216 bytes@48kbs    288bytes@ 64kbs\n         * 44.1kHz:  156 bytes          208bytes@64kbs     (+1 if padding = 1)\n         * 48kHz:    144 bytes          192\n         *\n         * MPEG 2 values are the same since the framesize and samplerate\n         * are each reduced by a factor of 2.\n         * </PRE>\n         */\n        var kbps_header;\n        if (1 == gfp.version) {\n            kbps_header = XING_BITRATE1;\n        } else {\n            if (gfp.out_samplerate < 16000)\n                kbps_header = XING_BITRATE25;\n            else\n                kbps_header = XING_BITRATE2;\n        }\n\n        if (gfp.VBR == VbrMode$22.vbr_off)\n            kbps_header = gfp.brate;\n\n        // make sure LAME Header fits into Frame\n        var totalFrameSize = ((gfp.version + 1) * 72000 * kbps_header)\n            / gfp.out_samplerate;\n        var headerSize = (gfc.sideinfo_len + LAMEHEADERSIZE);\n        gfc.VBR_seek_table.TotalFrameSize = totalFrameSize;\n        if (totalFrameSize < headerSize || totalFrameSize > MAXFRAMESIZE) {\n            /* disable tag, it wont fit */\n            gfp.bWriteVbrTag = false;\n            return;\n        }\n\n        gfc.VBR_seek_table.nVbrNumFrames = 0;\n        gfc.VBR_seek_table.nBytesWritten = 0;\n        gfc.VBR_seek_table.sum = 0;\n\n        gfc.VBR_seek_table.seen = 0;\n        gfc.VBR_seek_table.want = 1;\n        gfc.VBR_seek_table.pos = 0;\n\n        if (gfc.VBR_seek_table.bag == null) {\n            gfc.VBR_seek_table.bag = new int[400];\n            gfc.VBR_seek_table.size = 400;\n        }\n\n        // write dummy VBR tag of all 0's into bitstream\n        var buffer = new_byte$22(MAXFRAMESIZE);\n\n        setLameTagFrameHeader(gfp, buffer);\n        var n = gfc.VBR_seek_table.TotalFrameSize;\n        for (var i = 0; i < n; ++i) {\n            bs.add_dummy_byte(gfp, buffer[i] & 0xff, 1);\n        }\n    };\n\n    /**\n     * Fast CRC-16 computation (uses table crc16Lookup).\n     *\n     * @param value\n     * @param crc\n     * @return\n     */\n    function crcUpdateLookup(value, crc) {\n        var tmp = crc ^ value;\n        crc = (crc >> 8) ^ crc16Lookup[tmp & 0xff];\n        return crc;\n    }\n\n    this.updateMusicCRC = function (crc, buffer, bufferPos, size) {\n        for (var i = 0; i < size; ++i)\n            crc[0] = crcUpdateLookup(buffer[bufferPos + i], crc[0]);\n    };\n\n    /**\n     * Write LAME info: mini version + info on various switches used (Jonathan\n     * Dee 2001/08/31).\n     *\n     * @param gfp\n     *            global flags\n     * @param musicLength\n     *            music length\n     * @param streamBuffer\n     *            pointer to output buffer\n     * @param streamBufferPos\n     *            offset into the output buffer\n     * @param crc\n     *            computation of CRC-16 of Lame Tag so far (starting at frame\n     *            sync)\n     * @return number of bytes written to the stream\n     */\n    function putLameVBR(gfp, musicLength, streamBuffer, streamBufferPos, crc) {\n        var gfc = gfp.internal_flags;\n        var bytesWritten = 0;\n\n        /* encoder delay */\n        var encDelay = gfp.encoder_delay;\n        /* encoder padding */\n        var encPadding = gfp.encoder_padding;\n\n        /* recall: gfp.VBR_q is for example set by the switch -V */\n        /* gfp.quality by -q, -h, -f, etc */\n        var quality = (100 - 10 * gfp.VBR_q - gfp.quality);\n\n        var version = v.getLameVeryShortVersion();\n        var vbr;\n        var revision = 0x00;\n        var revMethod;\n        // numbering different in vbr_mode vs. Lame tag\n        var vbrTypeTranslator = [1, 5, 3, 2, 4, 0, 3];\n        var lowpass = 0 | (((gfp.lowpassfreq / 100.0) + .5) > 255 ? 255\n                : (gfp.lowpassfreq / 100.0) + .5);\n        var peakSignalAmplitude = 0;\n        var radioReplayGain = 0;\n        var audiophileReplayGain = 0;\n        var noiseShaping = gfp.internal_flags.noise_shaping;\n        var stereoMode = 0;\n        var nonOptimal = 0;\n        var sourceFreq = 0;\n        var misc = 0;\n        var musicCRC = 0;\n\n        // psy model type: Gpsycho or NsPsytune\n        var expNPsyTune = (gfp.exp_nspsytune & 1) != 0;\n        var safeJoint = (gfp.exp_nspsytune & 2) != 0;\n        var noGapMore = false;\n        var noGapPrevious = false;\n        var noGapCount = gfp.internal_flags.nogap_total;\n        var noGapCurr = gfp.internal_flags.nogap_current;\n\n        // 4 bits\n        var athType = gfp.ATHtype;\n        var flags = 0;\n\n        // vbr modes\n        var abrBitrate;\n        switch (gfp.VBR) {\n            case vbr_abr:\n                abrBitrate = gfp.VBR_mean_bitrate_kbps;\n                break;\n            case vbr_off:\n                abrBitrate = gfp.brate;\n                break;\n            default:\n                abrBitrate = gfp.VBR_min_bitrate_kbps;\n        }\n\n        // revision and vbr method\n        if (gfp.VBR.ordinal() < vbrTypeTranslator.length)\n            vbr = vbrTypeTranslator[gfp.VBR.ordinal()];\n        else\n            vbr = 0x00; // unknown\n\n        revMethod = 0x10 * revision + vbr;\n\n        // ReplayGain\n        if (gfc.findReplayGain) {\n            if (gfc.RadioGain > 0x1FE)\n                gfc.RadioGain = 0x1FE;\n            if (gfc.RadioGain < -0x1FE)\n                gfc.RadioGain = -0x1FE;\n\n            // set name code\n            radioReplayGain = 0x2000;\n            // set originator code to `determined automatically'\n            radioReplayGain |= 0xC00;\n\n            if (gfc.RadioGain >= 0) {\n                // set gain adjustment\n                radioReplayGain |= gfc.RadioGain;\n            } else {\n                // set the sign bit\n                radioReplayGain |= 0x200;\n                // set gain adjustment\n                radioReplayGain |= -gfc.RadioGain;\n            }\n        }\n\n        // peak sample\n        if (gfc.findPeakSample)\n            peakSignalAmplitude = Math\n                .abs(0 | ((( gfc.PeakSample) / 32767.0) * Math.pow(2, 23) + .5));\n\n        // nogap\n        if (noGapCount != -1) {\n            if (noGapCurr > 0)\n                noGapPrevious = true;\n\n            if (noGapCurr < noGapCount - 1)\n                noGapMore = true;\n        }\n\n        // flags\n        flags = athType + ((expNPsyTune ? 1 : 0) << 4)\n            + ((safeJoint ? 1 : 0) << 5) + ((noGapMore ? 1 : 0) << 6)\n            + ((noGapPrevious ? 1 : 0) << 7);\n\n        if (quality < 0)\n            quality = 0;\n\n        // stereo mode field (Intensity stereo is not implemented)\n        switch (gfp.mode) {\n            case MONO:\n                stereoMode = 0;\n                break;\n            case STEREO:\n                stereoMode = 1;\n                break;\n            case DUAL_CHANNEL:\n                stereoMode = 2;\n                break;\n            case JOINT_STEREO:\n                if (gfp.force_ms)\n                    stereoMode = 4;\n                else\n                    stereoMode = 3;\n                break;\n            case NOT_SET:\n            //$FALL-THROUGH$\n            default:\n                stereoMode = 7;\n                break;\n        }\n\n        if (gfp.in_samplerate <= 32000)\n            sourceFreq = 0x00;\n        else if (gfp.in_samplerate == 48000)\n            sourceFreq = 0x02;\n        else if (gfp.in_samplerate > 48000)\n            sourceFreq = 0x03;\n        else {\n            // default is 44100Hz\n            sourceFreq = 0x01;\n        }\n\n        // Check if the user overrided the default LAME behavior with some\n        // nasty options\n        if (gfp.short_blocks == ShortBlock$22.short_block_forced\n            || gfp.short_blocks == ShortBlock$22.short_block_dispensed\n            || ((gfp.lowpassfreq == -1) && (gfp.highpassfreq == -1)) || /* \"-k\" */\n            (gfp.scale_left < gfp.scale_right)\n            || (gfp.scale_left > gfp.scale_right)\n            || (gfp.disable_reservoir && gfp.brate < 320) || gfp.noATH\n            || gfp.ATHonly || (athType == 0) || gfp.in_samplerate <= 32000)\n            nonOptimal = 1;\n\n        misc = noiseShaping + (stereoMode << 2) + (nonOptimal << 5)\n            + (sourceFreq << 6);\n\n        musicCRC = gfc.nMusicCRC;\n\n        // Write all this information into the stream\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, quality);\n        bytesWritten += 4;\n\n        for (var j = 0; j < 9; j++) {\n            streamBuffer[streamBufferPos + bytesWritten + j] = 0xff & version .charAt(j);\n        }\n        bytesWritten += 9;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & revMethod;\n        bytesWritten++;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & lowpass;\n        bytesWritten++;\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten,\n            peakSignalAmplitude);\n        bytesWritten += 4;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\n            radioReplayGain);\n        bytesWritten += 2;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\n            audiophileReplayGain);\n        bytesWritten += 2;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & flags;\n        bytesWritten++;\n\n        if (abrBitrate >= 255)\n            streamBuffer[streamBufferPos + bytesWritten] = 0xFF;\n        else\n            streamBuffer[streamBufferPos + bytesWritten] = 0xff & abrBitrate;\n        bytesWritten++;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & (encDelay >> 4);\n        streamBuffer[streamBufferPos + bytesWritten + 1] = 0xff & ((encDelay << 4) + (encPadding >> 8));\n        streamBuffer[streamBufferPos + bytesWritten + 2] = 0xff & encPadding;\n\n        bytesWritten += 3;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & misc;\n        bytesWritten++;\n\n        // unused in rev0\n        streamBuffer[streamBufferPos + bytesWritten++] = 0;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, gfp.preset);\n        bytesWritten += 2;\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, musicLength);\n        bytesWritten += 4;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, musicCRC);\n        bytesWritten += 2;\n\n        // Calculate tag CRC.... must be done here, since it includes previous\n        // information\n\n        for (var i = 0; i < bytesWritten; i++)\n            crc = crcUpdateLookup(streamBuffer[streamBufferPos + i], crc);\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, crc);\n        bytesWritten += 2;\n\n        return bytesWritten;\n    }\n\n    function skipId3v2(fpStream) {\n        // seek to the beginning of the stream\n        fpStream.seek(0);\n        // read 10 bytes in case there's an ID3 version 2 header here\n        var id3v2Header = new_byte$22(10);\n        fpStream.readFully(id3v2Header);\n        /* does the stream begin with the ID3 version 2 file identifier? */\n        var id3v2TagSize;\n        if (!new String(id3v2Header, \"ISO-8859-1\").startsWith(\"ID3\")) {\n            /*\n             * the tag size (minus the 10-byte header) is encoded into four\n             * bytes where the most significant bit is clear in each byte\n             */\n            id3v2TagSize = (((id3v2Header[6] & 0x7f) << 21)\n                | ((id3v2Header[7] & 0x7f) << 14)\n                | ((id3v2Header[8] & 0x7f) << 7) | (id3v2Header[9] & 0x7f))\n                + id3v2Header.length;\n        } else {\n            /* no ID3 version 2 tag in this stream */\n            id3v2TagSize = 0;\n        }\n        return id3v2TagSize;\n    }\n\n    this.getLameTagFrame = function (gfp, buffer) {\n        var gfc = gfp.internal_flags;\n\n        if (!gfp.bWriteVbrTag) {\n            return 0;\n        }\n        if (gfc.Class_ID != Lame.LAME_ID) {\n            return 0;\n        }\n        if (gfc.VBR_seek_table.pos <= 0) {\n            return 0;\n        }\n        if (buffer.length < gfc.VBR_seek_table.TotalFrameSize) {\n            return gfc.VBR_seek_table.TotalFrameSize;\n        }\n\n        Arrays$22.fill(buffer, 0, gfc.VBR_seek_table.TotalFrameSize, 0);\n\n        // 4 bytes frame header\n        setLameTagFrameHeader(gfp, buffer);\n\n        // Create TOC entries\n        var toc = new_byte$22(NUMTOCENTRIES);\n\n        if (gfp.free_format) {\n            for (var i = 1; i < NUMTOCENTRIES; ++i)\n                toc[i] = 0xff & (255 * i / 100);\n        } else {\n            xingSeekTable(gfc.VBR_seek_table, toc);\n        }\n\n        // Start writing the tag after the zero frame\n        var streamIndex = gfc.sideinfo_len;\n        /**\n         * Note: Xing header specifies that Xing data goes in the ancillary data\n         * with NO ERROR PROTECTION. If error protecton in enabled, the Xing\n         * data still starts at the same offset, and now it is in sideinfo data\n         * block, and thus will not decode correctly by non-Xing tag aware\n         * players\n         */\n        if (gfp.error_protection)\n            streamIndex -= 2;\n\n        // Put Vbr tag\n        if (gfp.VBR == VbrMode$22.vbr_off) {\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(0);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(1);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(2);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(3);\n\n        } else {\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(0);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(1);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(2);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(3);\n        }\n\n        // Put header flags\n        createInteger(buffer, streamIndex, FRAMES_FLAG + BYTES_FLAG + TOC_FLAG\n            + VBR_SCALE_FLAG);\n        streamIndex += 4;\n\n        // Put Total Number of frames\n        createInteger(buffer, streamIndex, gfc.VBR_seek_table.nVbrNumFrames);\n        streamIndex += 4;\n\n        // Put total audio stream size, including Xing/LAME Header\n        var streamSize = (gfc.VBR_seek_table.nBytesWritten + gfc.VBR_seek_table.TotalFrameSize);\n        createInteger(buffer, streamIndex, 0 | streamSize);\n        streamIndex += 4;\n\n        /* Put TOC */\n        System$22.arraycopy(toc, 0, buffer, streamIndex, toc.length);\n        streamIndex += toc.length;\n\n        if (gfp.error_protection) {\n            // (jo) error_protection: add crc16 information to header\n            bs.CRC_writeheader(gfc, buffer);\n        }\n\n        // work out CRC so far: initially crc = 0\n        var crc = 0x00;\n        for (var i = 0; i < streamIndex; i++)\n            crc = crcUpdateLookup(buffer[i], crc);\n        // Put LAME VBR info\n        streamIndex += putLameVBR(gfp, streamSize, buffer, streamIndex, crc);\n\n        return gfc.VBR_seek_table.TotalFrameSize;\n    };\n\n    /**\n     * Write final VBR tag to the file.\n     *\n     * @param gfp\n     *            global flags\n     * @param stream\n     *            stream to add the VBR tag to\n     * @return 0 (OK), -1 else\n     * @throws IOException\n     *             I/O error\n     */\n    this.putVbrTag = function (gfp, stream) {\n        var gfc = gfp.internal_flags;\n\n        if (gfc.VBR_seek_table.pos <= 0)\n            return -1;\n\n        // Seek to end of file\n        stream.seek(stream.length());\n\n        // Get file size, abort if file has zero length.\n        if (stream.length() == 0)\n            return -1;\n\n        // The VBR tag may NOT be located at the beginning of the stream. If an\n        // ID3 version 2 tag was added, then it must be skipped to write the VBR\n        // tag data.\n        var id3v2TagSize = skipId3v2(stream);\n\n        // Seek to the beginning of the stream\n        stream.seek(id3v2TagSize);\n\n        var buffer = new_byte$22(MAXFRAMESIZE);\n        var bytes = getLameTagFrame(gfp, buffer);\n        if (bytes > buffer.length) {\n            return -1;\n        }\n\n        if (bytes < 1) {\n            return 0;\n        }\n\n        // Put it all to disk again\n        stream.write(buffer, 0, bytes);\n        // success\n        return 0;\n    };\n\n}\n\nvar VBRTag_1 = VBRTag;\n\nvar new_byte = common.new_byte;\nvar assert = common.assert;\n\nLame = Lame_1;\nPresets = Presets_1;\nGainAnalysis = GainAnalysis_1;\nQuantizePVT = QuantizePVT_1;\nQuantize = Quantize_1;\nTakehiro = Takehiro_1;\nReservoir = Reservoir_1;\nMPEGMode = MPEGMode_1;\nBitStream = BitStream_1;\n\n\n\n\nfunction GetAudio() {\n    var parse;\n    var mpg;\n\n    this.setModules = function (parse2, mpg2) {\n        parse = parse2;\n        mpg = mpg2;\n    };\n}\n\n\nfunction Parse() {\n    var ver;\n    var id3;\n    var pre;\n\n    this.setModules = function (ver2, id32, pre2) {\n        ver = ver2;\n        id3 = id32;\n        pre = pre2;\n    };\n}\n\nfunction MPGLib() {\n}\n\nfunction ID3Tag() {\n    var bits;\n    var ver;\n\n    this.setModules = function (_bits, _ver) {\n        bits = _bits;\n        ver = _ver;\n    };\n}\n\nfunction Mp3Encoder(channels, samplerate, kbps) {\n    if (arguments.length != 3) {\n        console.error('WARN: Mp3Encoder(channels, samplerate, kbps) not specified');\n        channels = 1;\n        samplerate = 44100;\n        kbps = 128;\n    }\n    var lame = new Lame();\n    var gaud = new GetAudio();\n    var ga = new GainAnalysis();\n    var bs = new BitStream();\n    var p = new Presets();\n    var qupvt = new QuantizePVT();\n    var qu = new Quantize();\n    var vbr = new VBRTag_1();\n    var ver = new Version_1();\n    var id3 = new ID3Tag();\n    var rv = new Reservoir();\n    var tak = new Takehiro();\n    var parse = new Parse();\n    var mpg = new MPGLib();\n\n    lame.setModules(ga, bs, p, qupvt, qu, vbr, ver, id3, mpg);\n    bs.setModules(ga, mpg, ver, vbr);\n    id3.setModules(bs, ver);\n    p.setModules(lame);\n    qu.setModules(bs, rv, qupvt, tak);\n    qupvt.setModules(tak, rv, lame.enc.psy);\n    rv.setModules(bs);\n    tak.setModules(qupvt);\n    vbr.setModules(lame, bs, ver);\n    gaud.setModules(parse, mpg);\n    parse.setModules(ver, id3, p);\n\n    var gfp = lame.lame_init();\n\n    gfp.num_channels = channels;\n    gfp.in_samplerate = samplerate;\n    gfp.brate = kbps;\n    gfp.mode = MPEGMode.STEREO;\n    gfp.quality = 3;\n    gfp.bWriteVbrTag = false;\n    gfp.disable_reservoir = true;\n    gfp.write_id3tag_automatic = false;\n\n    var retcode = lame.lame_init_params(gfp);\n    assert(0 == retcode);\n    var maxSamples = 1152;\n    var mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n    var mp3buf = new_byte(mp3buf_size);\n\n    this.encodeBuffer = function (left, right) {\n        if (channels == 1) {\n            right = left;\n        }\n        assert(left.length == right.length);\n        if (left.length > maxSamples) {\n            maxSamples = left.length;\n            mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n            mp3buf = new_byte(mp3buf_size);\n        }\n\n        var _sz = lame.lame_encode_buffer(gfp, left, right, left.length, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n\n    this.flush = function () {\n        var _sz = lame.lame_encode_flush(gfp, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n}\n\nfunction WavHeader() {\n    this.dataOffset = 0;\n    this.dataLen = 0;\n    this.channels = 0;\n    this.sampleRate = 0;\n}\n\nfunction fourccToInt(fourcc) {\n    return fourcc.charCodeAt(0) << 24 | fourcc.charCodeAt(1) << 16 | fourcc.charCodeAt(2) << 8 | fourcc.charCodeAt(3);\n}\n\nWavHeader.RIFF = fourccToInt(\"RIFF\");\nWavHeader.WAVE = fourccToInt(\"WAVE\");\nWavHeader.fmt_ = fourccToInt(\"fmt \");\nWavHeader.data = fourccToInt(\"data\");\n\nWavHeader.readHeader = function (dataView) {\n    var w = new WavHeader();\n\n    var header = dataView.getUint32(0, false);\n    if (WavHeader.RIFF != header) {\n        return;\n    }\n    var fileLen = dataView.getUint32(4, true);\n    if (WavHeader.WAVE != dataView.getUint32(8, false)) {\n        return;\n    }\n    if (WavHeader.fmt_ != dataView.getUint32(12, false)) {\n        return;\n    }\n    var fmtLen = dataView.getUint32(16, true);\n    var pos = 16 + 4;\n    switch (fmtLen) {\n        case 16:\n        case 18:\n            w.channels = dataView.getUint16(pos + 2, true);\n            w.sampleRate = dataView.getUint32(pos + 4, true);\n            break;\n        default:\n            throw 'extended fmt chunk not implemented';\n    }\n    pos += fmtLen;\n    var data = WavHeader.data;\n    var len = 0;\n    while (data != header) {\n        header = dataView.getUint32(pos, false);\n        len = dataView.getUint32(pos + 4, true);\n        if (data == header) {\n            break;\n        }\n        pos += (len + 8);\n    }\n    w.dataLen = len;\n    w.dataOffset = pos + 8;\n    return w;\n};\n\nvar Mp3Encoder_1 = Mp3Encoder;\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar Encoder = function () {\n  function Encoder(config) {\n    classCallCheck(this, Encoder);\n\n    this.config = {\n      sampleRate: 44100,\n      bitRate: 128\n    };\n\n    Object.assign(this.config, config);\n\n    this.mp3Encoder = new Mp3Encoder_1(1, this.config.sampleRate, this.config.bitRate);\n\n    // Audio is processed by frames of 1152 samples per audio channel\n    // http://lame.sourceforge.net/tech-FAQ.txt\n    this.maxSamples = 1152;\n\n    this.samplesMono = null;\n    this.clearBuffer();\n  }\n\n  /**\n   * Clear active buffer\n   */\n\n\n  createClass(Encoder, [{\n    key: 'clearBuffer',\n    value: function clearBuffer() {\n      this.dataBuffer = [];\n    }\n\n    /**\n     * Append new audio buffer to current active buffer\n     * @param {Buffer} buffer\n     */\n\n  }, {\n    key: 'appendToBuffer',\n    value: function appendToBuffer(buffer) {\n      this.dataBuffer.push(new Int8Array(buffer));\n    }\n\n    /**\n     * Float current data to 16 bits PCM\n     * @param {Float32Array} input\n     * @param {Int16Array} output\n     */\n\n  }, {\n    key: 'floatTo16BitPCM',\n    value: function floatTo16BitPCM(input, output) {\n      for (var i = 0; i < input.length; i++) {\n        var s = Math.max(-1, Math.min(1, input[i]));\n        output[i] = s < 0 ? s * 0x8000 : s * 0x7FFF;\n      }\n    }\n\n    /**\n     * Convert buffer to proper format\n     * @param {Array} arrayBuffer\n     */\n\n  }, {\n    key: 'convertBuffer',\n    value: function convertBuffer(arrayBuffer) {\n      var data = new Float32Array(arrayBuffer);\n      var out = new Int16Array(arrayBuffer.length);\n      this.floatTo16BitPCM(data, out);\n\n      return out;\n    }\n\n    /**\n     * Encode and append current buffer to dataBuffer\n     * @param {Array} arrayBuffer\n     */\n\n  }, {\n    key: 'encode',\n    value: function encode(arrayBuffer) {\n      this.samplesMono = this.convertBuffer(arrayBuffer);\n      var remaining = this.samplesMono.length;\n\n      for (var i = 0; remaining >= 0; i += this.maxSamples) {\n        var left = this.samplesMono.subarray(i, i + this.maxSamples);\n        var mp3buffer = this.mp3Encoder.encodeBuffer(left);\n        this.appendToBuffer(mp3buffer);\n        remaining -= this.maxSamples;\n      }\n    }\n\n    /**\n     * Return full dataBuffer\n     */\n\n  }, {\n    key: 'finish',\n    value: function finish() {\n      this.appendToBuffer(this.mp3Encoder.flush());\n\n      return this.dataBuffer;\n    }\n  }]);\n  return Encoder;\n}();\n\nvar MicRecorder = function () {\n  function MicRecorder(config) {\n    classCallCheck(this, MicRecorder);\n\n    this.config = {\n      // 128 or 160 kbit/s – mid-range bitrate quality\n      bitRate: 128,\n\n      // There is a known issue with some macOS machines, where the recording\n      // will sometimes have a loud 'pop' or 'pop-click' sound. This flag\n      // prevents getting audio from the microphone a few milliseconds after\n      // the begining of the recording. It also helps to remove the mouse\n      // \"click\" sound from the output mp3 file.\n      startRecordingAt: 300,\n      deviceId: null\n    };\n\n    this.activeStream = null;\n    this.context = null;\n    this.microphone = null;\n    this.processor = null;\n    this.startTime = 0;\n\n    Object.assign(this.config, config);\n  }\n\n  /**\n   * Starts to listen for the microphone sound\n   * @param {MediaStream} stream\n   */\n\n\n  createClass(MicRecorder, [{\n    key: 'addMicrophoneListener',\n    value: function addMicrophoneListener(stream) {\n      var _this = this;\n\n      this.activeStream = stream;\n\n      // This prevents the weird noise once you start listening to the microphone\n      this.timerToStart = setTimeout(function () {\n        delete _this.timerToStart;\n      }, this.config.startRecordingAt);\n\n      // Set up Web Audio API to process data from the media stream (microphone).\n      this.microphone = this.context.createMediaStreamSource(stream);\n\n      // Settings a bufferSize of 0 instructs the browser to choose the best bufferSize\n      this.processor = this.context.createScriptProcessor(0, 1, 1);\n\n      // Add all buffers from LAME into an array.\n      this.processor.onaudioprocess = function (event) {\n        if (_this.timerToStart) {\n          return;\n        }\n\n        // Send microphone data to LAME for MP3 encoding while recording.\n        _this.lameEncoder.encode(event.inputBuffer.getChannelData(0));\n      };\n\n      // Begin retrieving microphone data.\n      this.microphone.connect(this.processor);\n      this.processor.connect(this.context.destination);\n    }\n  }, {\n    key: 'stop',\n\n\n    /**\n     * Disconnect microphone, processor and remove activeStream\n     */\n    value: function stop() {\n      if (this.processor && this.microphone) {\n        // Clean up the Web Audio API resources.\n        this.microphone.disconnect();\n        this.processor.disconnect();\n\n        // If all references using this.context are destroyed, context is closed\n        // automatically. DOMException is fired when trying to close again\n        if (this.context && this.context.state !== 'closed') {\n          this.context.close();\n        }\n\n        this.processor.onaudioprocess = null;\n\n        // Stop all audio tracks. Also, removes recording icon from chrome tab\n        this.activeStream.getAudioTracks().forEach(function (track) {\n          return track.stop();\n        });\n      }\n\n      return this;\n    }\n  }, {\n    key: 'start',\n\n\n    /**\n     * Requests access to the microphone and start recording\n     * @return Promise\n     */\n    value: function start() {\n      var _this2 = this;\n\n      var AudioContext = window.AudioContext || window.webkitAudioContext;\n      this.context = new AudioContext();\n      this.config.sampleRate = this.context.sampleRate;\n      this.lameEncoder = new Encoder(this.config);\n\n      var audio = this.config.deviceId ? { deviceId: { exact: this.config.deviceId } } : true;\n\n      return new Promise(function (resolve, reject) {\n        navigator.mediaDevices.getUserMedia({ audio: audio }).then(function (stream) {\n          _this2.addMicrophoneListener(stream);\n          resolve(stream);\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: 'getMp3',\n\n\n    /**\n     * Return Mp3 Buffer and Blob with type mp3\n     * @return {Promise}\n     */\n    value: function getMp3() {\n      var _this3 = this;\n\n      var finalBuffer = this.lameEncoder.finish();\n\n      return new Promise(function (resolve, reject) {\n        if (finalBuffer.length === 0) {\n          reject(new Error('No buffer to send'));\n        } else {\n          resolve([finalBuffer, new Blob(finalBuffer, { type: 'audio/mp3' })]);\n          _this3.lameEncoder.clearBuffer();\n        }\n      });\n    }\n  }]);\n  return MicRecorder;\n}();\n\nreturn MicRecorder;\n\n})));\n//# sourceMappingURL=index.js.map\n","/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n","/** @license React v17.0.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),m=require(\"object-assign\"),r=require(\"scheduler\");function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+\"Capture\",b)}\nfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\nvar fa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\nja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction na(a,b,c,d){if(null===b||\"undefined\"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(oa,\npa);D[b]=new B(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\nD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E(\"react.element\");ta=E(\"react.portal\");ua=E(\"react.fragment\");wa=E(\"react.strict_mode\");xa=E(\"react.profiler\");ya=E(\"react.provider\");za=E(\"react.context\");Aa=E(\"react.forward_ref\");Ba=E(\"react.suspense\");Ca=E(\"react.suspense_list\");Da=E(\"react.memo\");Ea=E(\"react.lazy\");Fa=E(\"react.block\");E(\"react.scope\");Ga=E(\"react.opaque.id\");Ha=E(\"react.debug_trace_mode\");Ia=E(\"react.offscreen\");Ja=E(\"react.legacy_hidden\")}\nvar Ka=\"function\"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||\"object\"!==typeof a)return null;a=Ka&&a[Ka]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||\"\"}return\"\\n\"+Ma+a}var Oa=!1;\nfunction Pa(a,b){if(!a||Oa)return\"\";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Na(a):\"\"}\nfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na(\"Lazy\");case 13:return Na(\"Suspense\");case 19:return Na(\"SuspenseList\");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return\"\"}}\nfunction Ra(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ua:return\"Fragment\";case ta:return\"Portal\";case xa:return\"Profiler\";case wa:return\"StrictMode\";case Ba:return\"Suspense\";case Ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case za:return(a.displayName||\"Context\")+\".Consumer\";case ya:return(a._context.displayName||\"Context\")+\".Provider\";case Aa:var b=a.render;b=b.displayName||b.name||\"\";\nreturn a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,\"checked\",b,!1)}\nfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction bb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function db(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var kb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction lb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function mb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?lb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar nb,ob=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||\"innerHTML\"in a)a.innerHTML=b;else{nb=nb||document.createElement(\"div\");nb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(\"\"+b).trim():b+\"px\"}\nfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=sb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(y(62));}}\nfunction wb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\nfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\nfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,\"passive\",{get:function(){Pb=!0}});window.addEventListener(\"test\",Qb,Qb);window.removeEventListener(\"test\",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\nfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\nfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case \"focusin\":case \"focusout\":kc=null;break;case \"dragenter\":case \"dragleave\":lc=null;break;case \"mouseover\":case \"mouseout\":mc=null;break;case \"pointerover\":case \"pointerout\":nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":oc.delete(b.pointerId)}}\nfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction uc(a,b,c,d,e){switch(b){case \"focusin\":return kc=tc(kc,a,b,c,d,e),!0;case \"dragenter\":return lc=tc(lc,a,b,c,d,e),!0;case \"mouseover\":return mc=tc(mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\nfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\nfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\nfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\nfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ec={animationend:Dc(\"Animation\",\"AnimationEnd\"),animationiteration:Dc(\"Animation\",\"AnimationIteration\"),animationstart:Dc(\"Animation\",\"AnimationStart\"),transitionend:Dc(\"Transition\",\"TransitionEnd\")},Fc={},Gc={};\nfa&&(Gc=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),\"TransitionEvent\"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\nvar Ic=Hc(\"animationend\"),Jc=Hc(\"animationiteration\"),Kc=Hc(\"animationstart\"),Lc=Hc(\"transitionend\"),Mc=new Map,Nc=new Map,Oc=[\"abort\",\"abort\",Ic,\"animationEnd\",Jc,\"animationIteration\",Kc,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\n\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Lc,\"transitionEnd\",\"waiting\",\"waiting\"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\nfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\nF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\nfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\nfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\nfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\nfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&\"CompositionEvent\"in window,be=null;fa&&\"documentMode\"in document&&(be=document.documentMode);var ce=fa&&\"TextEvent\"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\nfunction Je(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Pe=fa&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nPc(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n0);Pc(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);Pc(Oc,2);for(var Ve=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\nea(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ea(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);ea(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);da(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));da(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));da(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);da(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\nda(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));da(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xe=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ye=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Xe));\nfunction Ze(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\nfunction G(a,b){var c=$e(b),d=a+\"__bubble\";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf=\"_reactListening\"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\nfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=$e(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\nfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\na:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":x=\"focus\";k=Fd;break;case \"focusout\":x=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var w=0!==(b&4),z=!w&&\"scroll\"===a,u=w?null!==h?h+\"Capture\":null:h;w=[];for(var t=d,q;null!==\nt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\nx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v=\"onMouseLeave\";u=\"onMouseEnter\";t=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Td,v=\"onPointerLeave\",u=\"onPointerEnter\",t=\"pointer\";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+\"leave\",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+\"enter\",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\ngf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);\"focusout\"===a&&(K=h._wrapperState)&&\nK.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}K=d?ue(d):window;switch(a){case \"focusin\":if(me(K)||\"true\"===K.contentEditable)Qe=K,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case \"compositionstart\":var L=\"onCompositionStart\";break b;case \"compositionend\":L=\"onCompositionEnd\";break b;\ncase \"compositionupdate\":L=\"onCompositionUpdate\";break b}L=void 0}else ie?ge(a,c)&&(L=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(L=\"onCompositionStart\");L&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==L?\"onCompositionEnd\"===L&&ie&&(Q=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),0<d.length&&(e=new Ld(\"onBeforeInput\",\n\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction nf(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of=\"function\"===typeof setTimeout?setTimeout:void 0,pf=\"function\"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}\nfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf=\"__reactFiber$\"+vf,xf=\"__reactProps$\"+vf,ff=\"__reactContainer$\"+vf,yf=\"__reactEvents$\"+vf;\nfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\nfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\nfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\nfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||\"Unknown\",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\nvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\nfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\nfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\nfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\nfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\nfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\nnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if(\"function\"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h=\"function\"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\nf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\nfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\nb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\nfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Ng(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\nfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\nfunction Qg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\nfunction Rg(a,b){if(\"textarea\"!==a.type)throw Error(y(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b));}\nfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\nc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ug(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\na.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\nn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if(\"function\"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\nh)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\nu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\nd=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\nWg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||\"Component\"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\nfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\nfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\nfunction mh(a,b){var c=nh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\nfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\nfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\nfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\neagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\nfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\ne.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\nfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\nfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\nfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\nfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\nfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\nfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\nvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\nb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\nwh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c(\"r:\"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c(\"r:\"+(tf++).toString(36))},\nvoid 0,null));return b}b=\"r:\"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\nfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\nfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\nfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;A||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?(\"function\"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n=\"function\"===typeof C||\n\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?(\"function\"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\nfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\nvar si={dehydrated:null,retryLane:0};\nfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\nb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\nfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\nfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\nfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\nfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case \"together\":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\nBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\nDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"option\":e=eb(a,e);d=eb(a,d);f=[];break;case \"select\":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===\nl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ca.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&G(\"scroll\",a),f||h===k||(f=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",\nc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\nb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case \"dialog\":G(\"cancel\",d);G(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case \"source\":G(\"error\",d);break;case \"img\":case \"image\":case \"link\":G(\"error\",d);G(\"load\",d);break;case \"details\":G(\"toggle\",d);break;case \"input\":Za(d,f);G(\"invalid\",d);break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};G(\"invalid\",d);break;case \"textarea\":hb(d,f),G(\"invalid\",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):ca.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&G(\"scroll\",d));switch(c){case \"input\":Va(d);cb(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=\njf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case \"dialog\":G(\"cancel\",a);G(\"close\",a);\ne=d;break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case \"source\":G(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":G(\"error\",a);G(\"load\",a);e=d;break;case \"details\":G(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);G(\"invalid\",a);break;case \"option\":e=eb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G(\"invalid\",a);break;case \"textarea\":hb(a,d);e=\ngb(a,d);G(\"invalid\",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?tb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&pb(a,k):\"number\"===typeof k&&pb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ca.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&G(\"scroll\",a):null!=k&&qa(a,f,k,g))}switch(c){case \"input\":Va(a);cb(a,d,!1);\nbreak;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(y(166));\nc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\nnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\nf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\nfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\nfunction Mi(a,b){try{var c=\"\",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi=\"function\"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\nfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}var Ui=\"function\"===typeof WeakSet?WeakSet:Set;\nfunction Vi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\nfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\nb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\nreturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\nfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=sb(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\na)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction bj(a,b){if(Mf&&\"function\"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\nf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\nc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\nfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\nfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\nfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\nfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n2){var g=f[e],h=f[e+1];\"style\"===g?tb(c,h):\"dangerouslySetInnerHTML\"===g?ob(c,h):\"children\"===g?pb(c,h):qa(c,g,h,b)}switch(a){case \"input\":ab(c,d);break;case \"textarea\":ib(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\nb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\nfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\nfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\nc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\nfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\na.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\nc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\nfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\nfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\nfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\nfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\nvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==V&&(V=2);k=Mi(k,h);p=\ng;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&(\"function\"===typeof K.getDerivedStateFromError||null!==Q&&\"function\"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\nfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\nfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\na.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\nfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\nCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\nbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\nZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,\"\");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\nJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),\"selectionStart\"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\ng.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===typeof t.focus&&t.focus();for(t=\n0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}\"function\"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\nZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&\"function\"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\nfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\nfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\nnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\nfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\nfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\nck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\nb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if(\"object\"===\ntypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\na=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\nd=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\nph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\nc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\nk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\nf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction hk(a){if(\"function\"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\nfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Vg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ji(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if(\"object\"===\ntypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,\"\"));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\nfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\nfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\nd&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\nfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\nqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\nfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\ngc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\nyb=function(a,b,c){switch(b){case \"input\":ab(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\nHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:\"17.0.2\",rendererPackageName:\"react-dom\"};\nvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\npk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\nexports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version=\"17.0.2\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/** @license React v0.20.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\nwindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\nE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\nx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\nfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\nfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\nfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\nexports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\nexports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\nexports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n"],"sourceRoot":""}